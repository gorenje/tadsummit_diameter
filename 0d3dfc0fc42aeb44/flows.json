[{"id":"0d3dfc0fc42aeb44","type":"tab","label":"Diameter protocol - part 5 - putting it all together","disabled":false,"info":"## Diameter Protocol\n\nUsing the example from [OTP](https://github.com/erlang/otp/tree/master/lib/diameter/examples/code).\n\n[OTP Module](https://www.erlang.org/doc/apps/diameter/diameter.html).\n\n## Part 2 - Extending protocol with new commands\n\nThis extends part 1 with two new commands: RAR and STR.\n\n## Part 3 - Implement all commands for the state machines to be used\n\nNeed the AAA, AAR and STA and some more commands for a complete state machine.\n\nNeed own .dia file: \n\n> Dictionaries for the RFC 6733 Diameter Common Messages, Base Accounting and Relay applications are provided with the diameter application.\n\n-- https://www.erlang.org/doc/apps/diameter/diameter_intro.html\n\nAlso of interest\n\n- RFC4005 --> https://datatracker.ietf.org/doc/html/rfc4005#section-9.3.4 Additional types defined there.\n- https://datatracker.ietf.org/doc/html/rfc2865#section-5.6\n\n## Part 4 - extend client and server to support new message types\n\nNodes <a class=\"ahl-node-only\" data-ids=\"10e666a20d4c03cc\">diameter_client</a> and <a class=\"ahl-node-only\" data-ids=\"442045dde0a6eac5\">diameter_server_cb</a> both need extending to support the new message types.\n\nSupported message types:\n\n- AAR - AA Request\n- AAA - AA Answer\n- CER - Capabilities-Exchange-Request\n- CEA - Capabilities-Exchange-Answer\n- DPR - Disconnect-Peer-Request\n- DPA - Disconnect-Peer-Answer\n- DWR - Device-Watchdog-Request\n- DWA - Device-Watchdog-Answer\n- RAR - Re-Auth-Request\n- RAA - Re-Auth-Answer\n- STR - Session-Termination-Request\n- STA - Session-Termination-Answer\n- ASR - Abort-Session-Request\n- ASA - Abort-Session-Answer\n- ACR - Accounting-Request\n- ACA - Accounting-Answer\n\nCreate requests and responses for each message and then create unit tests.\n\n## Part 5 - add statemachine and http request\n\nThis adds the client state machine and a simple page for submitting a login request.\n\nAdds user name identification for the server.\n\nAdd a html form.\n\n## Background\n\n* https://en.wikipedia.org/wiki/Diameter_(protocol) - for high level understanding of Protocol \n* https://www.erlang.org/doc/apps/diameter/diameter.html -  Diameter application in Erlang \n* https://github.com/erlang/otp/tree/master/lib/diameter/examples/code - examples with REAME for how to run examples, just copy locally modules and run one by one \n* https://www.rfc-editor.org/rfc/rfc6733.html - RFC for Diameter protocol \n* https://github.com/erlang/otp/tree/master/lib/diameter - source code of Diameter inside of Erlang/OTP \n","env":[{"name":"ERED_TIMEOUT","value":"10","type":"num"},{"name":"ERED_PENDING","value":"true","type":"bool"},{"name":"ERED_ONLY","value":"true","type":"bool"},{"name":"ERED_NOT_EUNIT","value":"true","type":"bool"}]},{"id":"cb21325f302dc80e","type":"group","z":"0d3dfc0fc42aeb44","name":"extended example with own diameter message defintions","style":{"label":true},"nodes":["6a1d50f7a716389c","912688be50d966ab","ea4251c8b424d968","adb6625e112828d1","f741be7e02d4baef","3b71d64290446fc9","c3b4606107d8adbc"],"x":69.5,"y":52.225006103515625,"w":1151.7728271484375,"h":142.97500610351562},{"id":"af7685676afc0fc0","type":"group","z":"0d3dfc0fc42aeb44","name":"start client & server","style":{"label":true},"nodes":["17e8f0228e01791d","a21903878161851a","5522e655ce181caf","997f5695c3e2bff2","ec1850a7045dad55","1068414de4aa463e","c2c95965af5315c3","421a83f51a533709"],"x":354.3330078125,"y":466,"w":1607.6669921875,"h":195.33343505859375},{"id":"4e14db65301206aa","type":"group","z":"0d3dfc0fc42aeb44","name":"send debug from modules to debug panel","style":{"label":true},"nodes":["3a599d8c1dc23bc8","07bd553f5c0bfc2a","b464503ae6467e9d","814268845dacc139"],"x":420,"y":265,"w":483,"h":180.08334350585938},{"id":"58a59d3eaad09a68","type":"group","z":"0d3dfc0fc42aeb44","name":"test the login credentials","style":{"label":true},"nodes":["2a85db810ae60aa4","35cb58c05aec302c","1d0c08726fb747be","0cd22a4116fb1a72","a7a4fe3cf15bef8d","3905ba1d302a595c","cca79a3132c79455","1b1b3f53d52e898d","ce96a772b44a251d","2d3ac2c652d6ea17","a908da78bebfc2f1","78d214bab5f9a807"],"x":217.00000762939453,"y":1518.0000400543213,"w":1321.9999923706055,"h":273.9999885559082},{"id":"a54e57d36bb88e57","type":"group","z":"0d3dfc0fc42aeb44","name":"html form","style":{"label":true},"nodes":["4dfe0b806084698a","0bb49410ba9889c6","0441f6fc2abbaf3f","8f3c326c98901e02","58aacf3baa69ffdc","9ffe68143a3e33ac","fe23294605cb4e99","5a5433280fc16aa8","dc56950ca31c52c7","c3d6b06699f4652c","38b23e24c33fc482","bc341ec335c1a794","6288bdfcbd49d0b4","1e8ddca047d8d6e1","42736168670c3d7e","d361e282e1946922","9da95ff8ed48fb7c","c8cf8f79f3cc3a1f","75ec0867881c84b2"],"x":316.00006103515625,"y":1941.3333854675293,"w":2178,"h":439},{"id":"6a1d50f7a716389c","type":"erlmodule","z":"0d3dfc0fc42aeb44","g":"cb21325f302dc80e","name":"","module_name":"diameter_part5_client","code":"%%\n%% %CopyrightBegin%\n%%\n%% SPDX-License-Identifier: Apache-2.0\n%%\n%% Copyright Ericsson AB 2010-2025. All Rights Reserved.\n%%\n%% Licensed under the Apache License, Version 2.0 (the \"License\");\n%% you may not use this file except in compliance with the License.\n%% You may obtain a copy of the License at\n%%\n%%     http://www.apache.org/licenses/LICENSE-2.0\n%%\n%% Unless required by applicable law or agreed to in writing, software\n%% distributed under the License is distributed on an \"AS IS\" BASIS,\n%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n%% See the License for the specific language governing permissions and\n%% limitations under the License.\n%%\n%% %CopyrightEnd%\n%%\n\n-module(diameter_part5_client).\n\n%%\n%% An example Diameter client that can sends base protocol ACR\n%% requests to a connected peer.\n%%\n%% Simplest usage to connect to a server listening on TCP at\n%% 127.0.0.1:3868:\n%%\n%%   client:start().\n%%   client:connect(tcp).\n%%   client:call().\n%%\n\n-export([start/1,     %% start a service\n         start/2,     %%\n         connect/2,   %% add a connecting transport\n         call/2,      %% send a request\n         stop/1]).    %% stop a service\n\n%% Convenience functions using the default service name.\n-export([start/0,\n         connect/1,\n         stop/0,\n         call/0,\n         call/1,\n         send_message/2\n]).\n\n-define(DEF_SVC_NAME, ?MODULE).\n-define(L, atom_to_list).\n-define(LOOPBACK, {127,0,0,1}).\n\n%% Service configuration.\n-define(SERVICE(Name), [{'Origin-Host', ?L(Name) ++ \".example.com\"},\n                        {'Origin-Realm', \"example.com\"},\n                        {'Vendor-Id', 0},\n                        {'Product-Name', \"Client\"},\n                        {'Auth-Application-Id', [0]},\n                        {decode_format, map},\n                        {restrict_connections, false},\n                        {strict_mbit, false},\n                        {string_decode, false},\n                        {application, [{alias, common},\n                                       %% {dictionary, diameter_gen_base_rfc6733},\n                                       {dictionary, diameter_gen_access_rfc7155},\n                                       {module, diameter_part5_client_cb},\n                                       {answer_errors, callback},\n                                       {call_mutates_state, false}]}]).\n\n%% start/2\n\nstart(Name, Opts) ->\n    Defaults = [T || {K,_} = T <- ?SERVICE(Name),\n                     not lists:keymember(K, 1, Opts)],\n    diameter:start_service(Name, Opts ++ Defaults).\n\n%% start/1\n\nstart(Opts) ->\n    start(?DEF_SVC_NAME, Opts).\n\n%% start/0\n\nstart() ->\n    start(?DEF_SVC_NAME, []).\n\n%% connect/1\n\nconnect(Opts) ->\n    connect(?DEF_SVC_NAME, Opts).\n\n%% connect/2\n\nconnect(Name, Opts)\n  when is_list(Opts) ->\n    diameter:add_transport(Name, {connect, lists:flatmap(fun opts/1, Opts)});\n\n%% backwards compatibility with old config\nconnect(Name, {T, Opts}) ->\n    connect(Name, [T | Opts]);\nconnect(Name, T) ->\n    connect(Name, [T]).\n\n%% send_message/2\n\n%%\n%% Session based request\n%%\nsend_message('RAR' = Type, #{'Session-Id' := _} = Avps) ->\n    diameter:call(?MODULE, common, [Type | Avps], []);\n\nsend_message('STR' = Type, #{'Session-Id' := _} = Avps) ->\n    diameter:call(?MODULE, common, [Type | Avps], []);\n\nsend_message('ACR' = Type, #{'Session-Id' := _} = Avps) ->\n    diameter:call(?MODULE, common, [Type | Avps], []);\n\nsend_message('ASR' = Type, #{'Session-Id' := _} = Avps) ->\n    diameter:call(?MODULE, common, [Type | Avps], []);\n\nsend_message('AAR' = Type, #{'Session-Id' := _} = Avps) ->\n    diameter:call(?MODULE, common, [Type | Avps], []);\n%%\n%% Non session based requests\n%%\nsend_message('DPR' = Type, #{'Origin-Host' := _} = Avps) ->\n    diameter:call(?MODULE, common, [Type | Avps], []);\n\nsend_message('DWR' = Type, #{'Origin-Host' := _} = Avps) ->\n    diameter:call(?MODULE, common, [Type | Avps], []);\n\n%%\n%% fall through\n%%\nsend_message(Type, Avps) ->\n    io:format(\"Message type not supported: ~p / ~p\", [Type, Avps]),\n    {error, not_supported}.\n\n%% call/2\n\ncall(Name, #{'Session-Id' := _} = Avps) ->\n    Defaults = #{'Destination-Realm' => \"example.com\",\n                 'Accounting-Record-Type' => 1,  %% EVENT_RECORD\n                 'Accounting-Record-Number' => 0},\n    ACR = ['ACR' | maps:merge(Defaults, Avps)],\n    diameter:call(Name, common, ACR, []);\n\ncall(Name, #{} = Avps) ->\n    call(Name, Avps#{'Session-Id' => diameter:session_id(?L(Name))});\n\ncall(Name, Avps) ->\n    call(Name, maps:from_list(Avps)).\n\n%% call/1\n\ncall(Avps) ->\n    call(?DEF_SVC_NAME, Avps).\n\n%% call/0\n\ncall() ->\n    call(?DEF_SVC_NAME, #{}).\n\n%% stop/1\n\nstop(Name) ->\n    diameter:stop_service(Name).\n\nstop() ->\n    stop(?DEF_SVC_NAME).\n\n%% ===========================================================================\n\n%% opts/1\n%%\n%% Map some terms to transport_module/transport_config pairs as a\n%% convenience, pass everything else unmodified.\n\nopts(T)\n  when T == any;\n       T == tcp;\n       T == sctp ->\n   opts({T, loopback, 3868});\n\nopts({T, RA, RP}) ->\n    opts({T, [], RA, RP});\n\nopts({T, loopback, RA, RP}) ->\n    opts({T, ?LOOPBACK, RA, RP});\n\nopts({T, LA, RA, RP})\n  when is_tuple(LA) ->\n    opts({T, [{ip, LA}], RA, RP});\n\nopts({any, Opts, RA, RP}) ->\n    All = Opts ++ opts(RA, RP),\n    [{transport_module, diameter_sctp},\n     {transport_config, All, 2000},\n     {transport_module, diameter_tcp},\n     {transport_config, All}];\n\nopts({tcp, Opts, RA, RP}) ->\n    opts({diameter_tcp, Opts, RA, RP});\n\nopts({sctp, Opts, RA, RP}) ->\n    opts({diameter_sctp, Opts, RA, RP});\n\nopts({Mod, Opts, loopback, RP}) ->\n    opts({Mod, Opts, ?LOOPBACK, RP});\n\nopts({Mod, Opts, RA, default}) ->\n    opts({Mod, Opts, RA, 3868});\n\nopts({Mod, Opts, RA, RP}) ->\n    [{transport_module, Mod},\n     {transport_config, opts(RA, RP) ++ Opts}];\n\nopts(T) ->\n    [T].\n\n%% opts/2\n\nopts(loopback, RP) ->\n    opts(?LOOPBACK, RP);\n\nopts(RA, RP) ->\n    [{raddr, RA}, {rport, RP}, {reuseaddr, true}].","x":195.5,"y":93.22500610351562,"wires":[]},{"id":"912688be50d966ab","type":"erlmodule","z":"0d3dfc0fc42aeb44","g":"cb21325f302dc80e","name":"","module_name":"diameter_part5_client_cb","code":"%%\n%% %CopyrightBegin%\n%%\n%% SPDX-License-Identifier: Apache-2.0\n%%\n%% Copyright Ericsson AB 2010-2025. All Rights Reserved.\n%%\n%% Licensed under the Apache License, Version 2.0 (the \"License\");\n%% you may not use this file except in compliance with the License.\n%% You may obtain a copy of the License at\n%%\n%%     http://www.apache.org/licenses/LICENSE-2.0\n%%\n%% Unless required by applicable law or agreed to in writing, software\n%% distributed under the License is distributed on an \"AS IS\" BASIS,\n%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n%% See the License for the specific language governing permissions and\n%% limitations under the License.\n%%\n%% %CopyrightEnd%\n%%\n\n-module(diameter_part5_client_cb).\n\n-include_lib(\"diameter/include/diameter.hrl\").\n\n%% diameter callbacks\n-export([peer_up/3,\n         peer_down/3,\n         pick_peer/4,\n         prepare_request/3,\n         prepare_retransmit/3,\n         handle_answer/4,\n         handle_error/4,\n         handle_request/3]).\n\n%% peer_up/3\n\npeer_up(_SvcName, _Peer, State) ->\n    nodes_helper:format( \"peer (client) up~n\",[]),\n    State.\n\n%% peer_down/3\n\npeer_down(_SvcName, _Peer, State) ->\n    nodes_helper:format( \"peer (client) down~n\",[]),\n    State.\n\n%% pick_peer/4\n\npick_peer([Peer | _], _, _SvcName, _State) ->\n    {ok, Peer}.\n\n%% prepare_request/3\n\nprepare_request(#diameter_packet{msg = [Name | Avps]}, _, {_, Caps}) ->\n    #diameter_caps{origin_host = {OH, _},\n                   origin_realm = {OR, _}}\n        = Caps,\n    {send, [Name | Avps#{'Origin-Host' => OH, 'Origin-Realm' => OR}]}.\n\n%% prepare_retransmit/3\n\nprepare_retransmit(Pkt, _SvcName, _Peer) ->\n    {send, Pkt}.\n\n%% handle_answer/4\n\nhandle_answer(#diameter_packet{msg = Msg}, _Request, _SvcName, _Peer) ->\n    {ok, Msg}.\n\n%% handle_error/4\n\nhandle_error(Reason, Request, _SvcName, _Peer) ->\n    nodes_helper:format(\"Client Error (handle error): ~p ~p~n\", [ Reason, Request ]),\n    {error, Reason}.\n\n%% handle_request/3\n\nhandle_request(Packet, _SvcName, _Peer) ->\n    nodes_helper:format(\"Client handling request Error (handle error): ~p ~n\", [ Packet ]),\n    {answer_message, 3001}.  %% DIAMETER_COMMAND_UNSUPPORTED\n","x":205.5,"y":153.20001220703125,"wires":[]},{"id":"ea4251c8b424d968","type":"erlmodule","z":"0d3dfc0fc42aeb44","g":"cb21325f302dc80e","name":"","module_name":"diameter_part5_server","code":"%%\n%% %CopyrightBegin%\n%%\n%% SPDX-License-Identifier: Apache-2.0\n%%\n%% Copyright Ericsson AB 2010-2025. All Rights Reserved.\n%%\n%% Licensed under the Apache License, Version 2.0 (the \"License\");\n%% you may not use this file except in compliance with the License.\n%% You may obtain a copy of the License at\n%%\n%%     http://www.apache.org/licenses/LICENSE-2.0\n%%\n%% Unless required by applicable law or agreed to in writing, software\n%% distributed under the License is distributed on an \"AS IS\" BASIS,\n%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n%% See the License for the specific language governing permissions and\n%% limitations under the License.\n%%\n%% %CopyrightEnd%\n%%\n\n-module(diameter_part5_server).\n\n%%\n%% An example Diameter server that answers the base protocol ACR sent\n%% by the client example.\n%%\n%% Simplest usage to listen on TCP at 127.0.0.1:3868:\n%%\n%%   server:start().\n%%   server:listen(tcp).\n%%\n\n\n%% Interface.\n-export([start/1,    %% start a service\n         start/2,    %%\n         listen/2,   %% add a listening transport\n         stop/1]).   %% stop a service\n\n%% Convenience functions using the default service name.\n-export([start/0,\n         listen/1,\n         stop/0]).\n\n%% Internal callback.\n-export([message/3]).\n\n-define(DEF_SVC_NAME, ?MODULE).\n\n%% The service configuration. In a server supporting multiple Diameter\n%% applications each application may have its own, although they could all\n%% be configured with a common callback module.\n-define(SERVICE(Name), [{'Origin-Host', atom_to_list(Name) ++ \".example.com\"},\n                        {'Origin-Realm', \"example.com\"},\n                        {'Vendor-Id', 193},\n                        {'Product-Name', \"Server\"},\n                        {'Auth-Application-Id', [0]},\n                        {decode_format, map},\n                        {restrict_connections, false},\n                        {strict_mbit, false},\n                        {string_decode, false},\n                        {application, [{alias, common},\n                                       %% {dictionary, diameter_gen_base_rfc6733},\n                                       {dictionary, diameter_gen_access_rfc7155},\n                                       {module, diameter_part5_server_cb},\n                                       {call_mutates_state, false}]}]).\n\n%% start/2\n\nstart(Name, Opts) ->\n    Defaults = [T || {K,_} = T <- ?SERVICE(Name),\n                     not lists:keymember(K, 1, Opts)],\n    diameter:start_service(Name, Opts ++ Defaults).\n\n%% start/1\n\nstart(Opts) ->\n    start(?DEF_SVC_NAME, Opts).\n\n%% start/0\n\nstart() ->\n    start(?DEF_SVC_NAME, []).\n\n%% listen/2\n\nlisten(Name, Opts)\n  when is_list(Opts) ->\n    diameter:add_transport(Name, {listen, lists:flatmap(fun opts/1, Opts)});\n\n%% backwards compatibility with old config\nlisten(Name, {T, Opts}) ->\n    listen(Name, [T | Opts]);\nlisten(Name, T) ->\n    listen(Name, [T]).\n\n%% listen/1\n\nlisten(Opts) ->\n    listen(?DEF_SVC_NAME, Opts).\n\n%% stop/1\n\nstop(Name) ->\n    diameter:stop_service(Name).\n\n%% stop/0\n\nstop() ->\n    stop(?DEF_SVC_NAME).\n\n%% ===========================================================================\n\n%% opts/1\n%%\n%% Map a 3-tuple a transport_module/transport_config pair as a\n%% convenience, pass everything else unmodified.\n\nopts(T)\n  when T == tcp;\n       T == sctp ->\n    opts({T, loopback, default});\n\nopts({tcp, Addr, Port}) ->\n    opts({diameter_tcp, Addr, Port});\n\nopts({sctp, Addr, Port}) ->\n    opts({diameter_sctp, Addr, Port});\n\nopts({Mod, loopback, Port}) ->\n    opts({Mod, {127,0,0,1}, Port});\n\nopts({Mod, Addr, default}) ->\n    opts({Mod, Addr, 3868});\n\nopts({Mod, Addr, Port}) ->\n    [{transport_module, Mod},\n     {transport_config, [{reuseaddr, true},\n                         {sender, true},\n                         {message_cb, {?MODULE, message, [0]}},\n                         {ip, Addr},\n                         {port, Port}]}];\nopts(T) ->\n    [T].\n\n%% message/3\n%%\n%% Simple message callback that limits the number of concurrent\n%% requests on the peer connection in question.\n\n%% Incoming request.\nmessage(recv, <<_:32, 1:1, _/bits>> = Bin, N) ->\n    [Bin, N < 32, {?MODULE, message, [N+1]}];\n\n%% Outgoing request.\nmessage(ack, <<_:32, 1:1, _/bits>>, _) ->\n    [];\n\n%% Incoming answer or request discarded.\nmessage(ack, _, N) ->\n    [N =< 32, {?MODULE, message, [N-1]}];\n\n%% Outgoing message or incoming answer.\nmessage(_, Bin, _) ->\n    [Bin].\n","x":476.5,"y":94.22500610351562,"wires":[]},{"id":"adb6625e112828d1","type":"erlmodule","z":"0d3dfc0fc42aeb44","g":"cb21325f302dc80e","name":"","module_name":"diameter_part5_server_cb","code":"%%\n%% %CopyrightBegin%\n%%\n%% SPDX-License-Identifier: Apache-2.0\n%%\n%% Copyright Ericsson AB 2010-2025. All Rights Reserved.\n%%\n%% Licensed under the Apache License, Version 2.0 (the \"License\");\n%% you may not use this file except in compliance with the License.\n%% You may obtain a copy of the License at\n%%\n%%     http://www.apache.org/licenses/LICENSE-2.0\n%%\n%% Unless required by applicable law or agreed to in writing, software\n%% distributed under the License is distributed on an \"AS IS\" BASIS,\n%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n%% See the License for the specific language governing permissions and\n%% limitations under the License.\n%%\n%% %CopyrightEnd%\n%%\n\n%%\n%% The diameter application callback module configured by server.erl.\n%%\n\n-module(diameter_part5_server_cb).\n\n-include_lib(\"diameter/include/diameter.hrl\").\n\n%% diameter callbacks\n-export([peer_up/3,\n         peer_down/3,\n         pick_peer/4,\n         prepare_request/3,\n         prepare_retransmit/3,\n         handle_answer/4,\n         handle_error/4,\n         handle_request/3]).\n\n%% Raise an error on callbacks that aren't expected.\n-define(ERROR, \n    nodes_helper:format(\"UNEXPECTED ERROR in ~p at ~p\", [?MODULE, ?LINE]),\n    error({unexpected, ?MODULE, ?LINE})\n).\n\n%% peer_up/3\n\npeer_up(_SvcName, _Peer, State) ->\n    nodes_helper:format( \"peer (server) up: ~p ~n\",[State]),\n    State.\n\n%% peer_down/3\n\npeer_down(_SvcName, _Peer, State) ->\n    nodes_helper:format( \"peer (server) down: ~p~n\",[State]),\n    State.\n\n%% pick_peer/3\n\n%% Don't let requests be sent, so other request callbacks shouldn't\n%% happen.\npick_peer(_LocalCandidates, _RemoteCandidates, _SvcName, _State) ->\n    false.\n\n%% prepare_request/3\n\nprepare_request(_Packet, _SvcName, _Peer) ->\n    ?ERROR.\n\n%% prepare_retransmit/3\n\nprepare_retransmit(_Packet, _SvcName, _Peer) ->\n    ?ERROR.\n\n%% handle_answer/4\n\nhandle_answer(_Packet, _Request, _SvcName, _Peer) ->\n    ?ERROR.\n\n%% handle_error/4\n\nhandle_error(Reason, _Request, _SvcName, _Peer) ->\n    nodes_helper:format(\"SERVER ERROR ~p~n\", [ Reason ] ),\n    ?ERROR.\n\n%% handle_request/3\n\n%% ACR without decode errors.\nhandle_request(\n    #diameter_packet{msg = ['ACR' = Type| #{} = Request], errors = []},\n    _SvcName,\n    {_, Caps}) ->\n\n    Answer = create_answer_avps(Type, Caps, Request),\n    {reply, ['ACA' | Answer]};\n    \n%% Session Terminate Request - STR\nhandle_request(\n    #diameter_packet{msg = ['STR' = Type| #{} = Request], errors = []},\n    _SvcName,\n    {_, Caps}) ->\n\n    Answer = create_answer_avps(Type, Caps, Request),\n    {reply, ['STA' | Answer]};\n\n%% Re-Authorisation Request - RAR\nhandle_request(\n    #diameter_packet{msg = ['RAR' = Type | #{} = Request], errors = []},\n    _SvcName,\n    {_, Caps}) ->\n\n    Answer = create_answer_avps(Type, Caps, Request),\n    {reply, ['RAA' | Answer]};\n\n%% ASR\nhandle_request(\n    #diameter_packet{msg = ['ASR' = Type| #{} = Request], errors = []},\n    _SvcName,\n    {_, Caps}) ->\n\n    Answer = create_answer_avps(Type, Caps, Request),\n    {reply, ['ASA' | Answer]};\n\n%% AAR without decode errors.\nhandle_request(\n    #diameter_packet{msg = ['AAR' = Type | #{} = Request], errors = []},\n    _SvcName,\n    {_, Caps}) ->\n\n    ResultCode = \n        case maps:find('User-Name', Request) of\n            {ok, [<<\"user-allowed\">>] = U} ->\n                    #{ 'Result-Code' => 2001, 'User-Name' => U};\n            {ok, U2} ->\n                    %% nodes_helper:format( \"server user name: ~p\",[U2]),\n                    #{ 'Result-Code' => 5003, 'User-Name' => U2};\n            _ ->\n                    #{ 'Result-Code' => 4001 }\n        end,\n\n    Answer = create_answer_avps(Type, Caps, Request),\n    {reply, ['AAA' | maps:merge(Answer, ResultCode)]};\n\nhandle_request(#diameter_packet{} = Packet, _SvcName, _) ->\n    nodes_helper:format(\"Server Callback unhandled: ~p ~n\", [Packet] ),\n    {answer_message, 3001}.  %% DIAMETER_COMMAND_UNSUPPORTED\n\n%%\n%% ------------------------ helpers\n%%\ncreate_answer_avps(\n    Type,\n    #diameter_caps{origin_host = {OH,_}, origin_realm = {OR,_}},\n    #{'Session-Id' := Sid\n    }\n) when Type =:= 'STR'; Type =:= 'RAR'; Type =:= 'ASR' ->\n    #{'Result-Code' => 2001,  %% DIAMETER_SUCCESS\n      'Origin-Host' => OH,\n      'Origin-Realm' => OR,\n      'Session-Id' => Sid\n    };\n\ncreate_answer_avps(\n    'AAR',\n    #diameter_caps{origin_host = {OH,_}, origin_realm = {OR,_}},\n    #{'Session-Id' := Sid,\n      'Auth-Application-Id' := AaId,\n      'Auth-Request-Type' := ArType\n    }\n) ->\n    #{'Result-Code' => 2001,  %% DIAMETER_SUCCESS\n      'Origin-Host' => OH,\n      'Origin-Realm' => OR,\n      'Session-Id' => Sid,\n      'Auth-Application-Id' => AaId,\n      'Auth-Request-Type' => ArType\n    };\n\ncreate_answer_avps(\n    'ACR',\n    #diameter_caps{origin_host = {OH,_}, origin_realm = {OR,_}},\n    #{'Session-Id' := Sid,\n      'Accounting-Record-Number' := AcctNum,\n      'Accounting-Record-Type' := AcctType\n    }\n) ->\n    #{'Result-Code' => 2001,  %% DIAMETER_SUCCESS\n      'Origin-Host' => OH,\n      'Origin-Realm' => OR,\n      'Session-Id' => Sid,\n      'Accounting-Record-Type' => AcctType,\n      'Accounting-Record-Number' => AcctNum\n    };\n\ncreate_answer_avps(Type, Caps, Avps) ->\n    %% the silence of ignorance - silently ignore unknown message types\n    nodes_helper:format(\"Silent Ignore ~p / ~p / ~p~n\",[Type,Caps, Avps]),\n    Avps#{\n     'Result-Code' => 3001\n    }.","x":468.5,"y":154.20001220703125,"wires":[]},{"id":"17e8f0228e01791d","type":"function","z":"0d3dfc0fc42aeb44","g":"af7685676afc0fc0","name":"start diameter server","func":"#{ <<\"payload\">> := Payload } = Msg,\n\nD = case diameter:start() of \n    ok ->\n        Msg#{ <<\"payload\">> => ok };\n    {error, {already_started, _}} ->\n        Msg#{ <<\"payload\">> => ok };\n    {error, Reason} ->\n        Msg#{ <<\"payload\">> => error, <<\"error\">> => #{ <<\"reason\">> => Reason } };\n    {error, {Reason, ErrMsg}} ->\n        Msg#{ <<\"payload\">> => error, <<\"error\">> => #{ <<\"reason\">> => Reason, <<\"msg\">> => ErrMsg} }\nend,\n\n%% io:format(\"~p~n\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":480.3330078125,"y":612.8334293365479,"wires":[["a21903878161851a"]]},{"id":"9867aa522b9c5f1d","type":"inject","z":"0d3dfc0fc42aeb44","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":158.999755859375,"y":406.0833435058594,"wires":[["17e8f0228e01791d","814268845dacc139"]]},{"id":"a21903878161851a","type":"switch","z":"0d3dfc0fc42aeb44","g":"af7685676afc0fc0","name":"did start?","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"ok","vt":"jsonata"},{"t":"eq","v":"error","vt":"jsonata"},{"t":"else"}],"checkall":"false","repair":false,"outputs":3,"x":730.3330154418945,"y":612.8334293365479,"wires":[["5522e655ce181caf"],["c2c95965af5315c3"],["c2c95965af5315c3"]]},{"id":"5522e655ce181caf","type":"function","z":"0d3dfc0fc42aeb44","g":"af7685676afc0fc0","name":"start server listener","func":"#{ <<\"payload\">> := Payload } = Msg,\n\ndiameter_part5_server:start(),\n\nD = Msg#{ <<\"payload\">> => diameter_part5_server:listen(tcp) },\n\n%% io:format(\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":907.6663818359375,"y":561.1666564941406,"wires":[["997f5695c3e2bff2"]]},{"id":"997f5695c3e2bff2","type":"switch","z":"0d3dfc0fc42aeb44","g":"af7685676afc0fc0","name":"did start?","property":"payload[0]","propertyType":"msg","rules":[{"t":"eq","v":"ok","vt":"jsonata"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":1123.9998168945312,"y":561.1666564941406,"wires":[["ec1850a7045dad55"],["c2c95965af5315c3"]]},{"id":"ec1850a7045dad55","type":"function","z":"0d3dfc0fc42aeb44","g":"af7685676afc0fc0","name":"connect up client","func":"#{ <<\"payload\">> := Payload } = Msg,\n\ndiameter_part5_client:start(),\n\nD = Msg#{ <<\"payload\">> => diameter_part5_client:connect(tcp) },\n\n%% io:format(\"~p\",[D]),\n\nD\n\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1399.666259765625,"y":554.8333880901337,"wires":[["1068414de4aa463e"]]},{"id":"1068414de4aa463e","type":"switch","z":"0d3dfc0fc42aeb44","g":"af7685676afc0fc0","name":"did start?","property":"payload[0]","propertyType":"msg","rules":[{"t":"eq","v":"ok","vt":"jsonata"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":1639.1661682128906,"y":554.8333880901337,"wires":[["421a83f51a533709"],["c2c95965af5315c3"]]},{"id":"c2c95965af5315c3","type":"debug","z":"0d3dfc0fc42aeb44","g":"af7685676afc0fc0","name":"Error starting diameter application","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1584.4996337890625,"y":620.3334350585938,"wires":[]},{"id":"d2a1b01464c8bc6e","type":"function","z":"0d3dfc0fc42aeb44","name":"RAR","func":"#{ <<\"payload\">> := Payload } = Msg,\n\nAvps = #{\n    'Session-Id' => diameter:session_id(\"diameter_test\"),\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'Destination-Realm' => <<\"example.com\">>,\n    'Destination-Host' => <<\"foo.example.com\">>,\n    'Auth-Application-Id' => 123,\n    'Re-Auth-Request-Type' => 0,\n    'User-Name' => <<\"homer\">>\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('RAR', Avps)\n},\n\n%% io:format(\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":792.66650390625,"y":1392.2708299954734,"wires":[["b302555b2bb9c309"]],"info":"Relevant section in RFC --> https://datatracker.ietf.org/doc/html/rfc7155#section-3.3"},{"id":"11bae55e1ac235cf","type":"function","z":"0d3dfc0fc42aeb44","name":"STR","func":"#{ <<\"payload\">> := Payload } = Msg,\n\nAvps = #{\n    'Session-Id' => diameter:session_id(\"diameter_test\"),\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'User-Name' => <<\"homer\">>,\n    'Destination-Realm' => <<\"example.com\">>,\n    'Auth-Application-Id' => 123,\n    'Termination-Cause' => 1\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('STR', Avps)\n},\n\n%% io:format(\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":792.66650390625,"y":1303.6166639963785,"wires":[["4e7d4755895ac919"]],"info":"Relevant section in RFC --> https://datatracker.ietf.org/doc/html/rfc7155#section-3.5\n"},{"id":"fc3bf8a9aee65fd1","type":"function","z":"0d3dfc0fc42aeb44","name":"AAR","func":"#{ <<\"payload\">> := Payload } = Msg,\n\n\nAvps = #{\n    'Session-Id' => diameter:session_id(\"diameter_test\"),\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'Destination-Realm' => <<\"example.com\">>,\n    'Auth-Application-Id' => 123,\n    'Auth-Request-Type' => 1,\n    'User-Name' => <<\"homer\">>,\n    'User-Password' => <<\"what password\">>\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('AAR', Avps)\n},\n\n%% io:format(DebugIO,\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":792.66650390625,"y":1214.962497997284,"wires":[["7f042bb5804d8f7e"]],"info":"Relevant section in RFC --> https://datatracker.ietf.org/doc/html/rfc7155#section-3.1\n\nAuth-Request-Type ==> https://datatracker.ietf.org/doc/html/rfc6733#section-8.7"},{"id":"b302555b2bb9c309","type":"ut-assert-values","z":"0d3dfc0fc42aeb44","name":"should be RAA","ignore_failure_if_succeed":false,"rules":[{"p":"payload[1][0]","pt":"msg","t":"eql","to":"RAA","tot":"str"}],"x":1108,"y":1392.2708299954734,"wires":[[]]},{"id":"4e7d4755895ac919","type":"ut-assert-values","z":"0d3dfc0fc42aeb44","name":"should be STA","ignore_failure_if_succeed":false,"rules":[{"p":"payload[1][0]","pt":"msg","t":"eql","to":"STA","tot":"str"}],"x":1108,"y":1303.6166639963785,"wires":[[]]},{"id":"7f042bb5804d8f7e","type":"ut-assert-values","z":"0d3dfc0fc42aeb44","name":"should be AAA","ignore_failure_if_succeed":false,"rules":[{"p":"payload[1][0]","pt":"msg","t":"eql","to":"AAA","tot":"str"}],"x":1108,"y":1214.962497997284,"wires":[[]]},{"id":"f741be7e02d4baef","type":"erlmodule","z":"0d3dfc0fc42aeb44","g":"cb21325f302dc80e","name":"","module_name":"diameter_gen_access_rfc7155","code":"%% -------------------------------------------------------------------\n%% This is a generated file.\n%% -------------------------------------------------------------------\n\n-module(diameter_gen_access_rfc7155).\n\n-moduledoc(false).\n\n-compile({parse_transform, diameter_exprecs}).\n\n-compile(nowarn_unused_function).\n\n-dialyzer(no_return).\n\n-export_records([diameter_base_access_AAR,\n                 diameter_base_access_AAA,\n                 diameter_base_access_CER,\n                 diameter_base_access_CEA,\n                 diameter_base_access_DPR,\n                 diameter_base_access_DPA,\n                 diameter_base_access_DWR,\n                 diameter_base_access_DWA,\n                 'diameter_base_access_answer-message',\n                 diameter_base_access_RAR,\n                 diameter_base_access_RAA,\n                 diameter_base_access_STR,\n                 diameter_base_access_STA,\n                 diameter_base_access_ASR,\n                 diameter_base_access_ASA,\n                 diameter_base_access_ACR,\n                 diameter_base_access_ACA,\n                 'diameter_base_access_CHAP-Auth',\n                 diameter_base_access_Tunneling,\n                 'diameter_base_access_Proxy-Info',\n                 'diameter_base_access_Failed-AVP',\n                 'diameter_base_access_Experimental-Result',\n                 'diameter_base_access_Vendor-Specific-Application-Id']).\n\n-record(diameter_base_access_AAR,\n        {'Session-Id',\n         'Auth-Application-Id',\n         'Origin-Host',\n         'Origin-Realm',\n         'Destination-Realm',\n         'Auth-Request-Type',\n         'Destination-Host' = [],\n         'NAS-Identifier' = [],\n         'NAS-IP-Address' = [],\n         'NAS-IPv6-Address' = [],\n         'NAS-Port' = [],\n         'NAS-Port-Id' = [],\n         'NAS-Port-Type' = [],\n         'Origin-AAA-Protocol' = [],\n         'Origin-State-Id' = [],\n         'Port-Limit' = [],\n         'User-Name' = [],\n         'User-Password' = [],\n         'Service-Type' = [],\n         'State' = [],\n         'Authorization-Lifetime' = [],\n         'Auth-Grace-Period' = [],\n         'Auth-Session-State' = [],\n         'Callback-Number' = [],\n         'Called-Station-Id' = [],\n         'Calling-Station-Id' = [],\n         'Originating-Line-Info' = [],\n         'Connect-Info' = [],\n         'CHAP-Auth' = [],\n         'CHAP-Challenge' = [],\n         'Framed-Compression' = [],\n         'Framed-Interface-Id' = [],\n         'Framed-IP-Address' = [],\n         'Framed-IPv6-Prefix' = [],\n         'Framed-IP-Netmask' = [],\n         'Framed-MTU' = [],\n         'Framed-Protocol' = [],\n         'ARAP-Password' = [],\n         'ARAP-Security' = [],\n         'ARAP-Security-Data' = [],\n         'Login-IP-Host' = [],\n         'Login-IPv6-Host' = [],\n         'Login-LAT-Group' = [],\n         'Login-LAT-Node' = [],\n         'Login-LAT-Port' = [],\n         'Login-LAT-Service' = [],\n         'Tunneling' = [],\n         'Proxy-Info' = [],\n         'Route-Record' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_AAA,\n        {'Session-Id',\n         'Auth-Application-Id',\n         'Auth-Request-Type',\n         'Result-Code',\n         'Origin-Host',\n         'Origin-Realm',\n         'User-Name' = [],\n         'Service-Type' = [],\n         'Class' = [],\n         'Configuration-Token' = [],\n         'Acct-Interim-Interval' = [],\n         'Error-Message' = [],\n         'Error-Reporting-Host' = [],\n         'Failed-AVP' = [],\n         'Idle-Timeout' = [],\n         'Authorization-Lifetime' = [],\n         'Auth-Grace-Period' = [],\n         'Auth-Session-State' = [],\n         'Re-Auth-Request-Type' = [],\n         'Multi-Round-Time-Out' = [],\n         'Session-Timeout' = [],\n         'State' = [],\n         'Reply-Message' = [],\n         'Origin-AAA-Protocol' = [],\n         'Origin-State-Id' = [],\n         'Filter-Id' = [],\n         'Password-Retry' = [],\n         'Port-Limit' = [],\n         'Prompt' = [],\n         'ARAP-Challenge-Response' = [],\n         'ARAP-Features' = [],\n         'ARAP-Security' = [],\n         'ARAP-Security-Data' = [],\n         'ARAP-Zone-Access' = [],\n         'Callback-Id' = [],\n         'Callback-Number' = [],\n         'Framed-Appletalk-Link' = [],\n         'Framed-Appletalk-Network' = [],\n         'Framed-Appletalk-Zone' = [],\n         'Framed-Compression' = [],\n         'Framed-Interface-Id' = [],\n         'Framed-IP-Address' = [],\n         'Framed-IPv6-Prefix' = [],\n         'Framed-IPv6-Pool' = [],\n         'Framed-IPv6-Route' = [],\n         'Framed-IP-Netmask' = [],\n         'Framed-Route' = [],\n         'Framed-Pool' = [],\n         'Framed-IPX-Network' = [],\n         'Framed-MTU' = [],\n         'Framed-Protocol' = [],\n         'Framed-Routing' = [],\n         'Login-IP-Host' = [],\n         'Login-IPv6-Host' = [],\n         'Login-LAT-Group' = [],\n         'Login-LAT-Node' = [],\n         'Login-LAT-Port' = [],\n         'Login-LAT-Service' = [],\n         'Login-Service' = [],\n         'Login-TCP-Port' = [],\n         'NAS-Filter-Rule' = [],\n         'QoS-Filter-Rule' = [],\n         'Tunneling' = [],\n         'Redirect-Host' = [],\n         'Redirect-Host-Usage' = [],\n         'Redirect-Max-Cache-Time' = [],\n         'Proxy-Info' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_CER,\n        {'Origin-Host',\n         'Origin-Realm',\n         'Host-IP-Address' = [],\n         'Vendor-Id',\n         'Product-Name',\n         'Origin-State-Id' = [],\n         'Supported-Vendor-Id' = [],\n         'Auth-Application-Id' = [],\n         'Inband-Security-Id' = [],\n         'Acct-Application-Id' = [],\n         'Vendor-Specific-Application-Id' = [],\n         'Firmware-Revision' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_CEA,\n        {'Result-Code',\n         'Origin-Host',\n         'Origin-Realm',\n         'Host-IP-Address' = [],\n         'Vendor-Id',\n         'Product-Name',\n         'Origin-State-Id' = [],\n         'Error-Message' = [],\n         'Failed-AVP' = [],\n         'Supported-Vendor-Id' = [],\n         'Auth-Application-Id' = [],\n         'Inband-Security-Id' = [],\n         'Acct-Application-Id' = [],\n         'Vendor-Specific-Application-Id' = [],\n         'Firmware-Revision' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_DPR,\n        {'Origin-Host',\n         'Origin-Realm',\n         'Disconnect-Cause',\n         'AVP' = []}).\n\n-record(diameter_base_access_DPA,\n        {'Result-Code',\n         'Origin-Host',\n         'Origin-Realm',\n         'Error-Message' = [],\n         'Failed-AVP' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_DWR,\n        {'Origin-Host',\n         'Origin-Realm',\n         'Origin-State-Id' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_DWA,\n        {'Result-Code',\n         'Origin-Host',\n         'Origin-Realm',\n         'Error-Message' = [],\n         'Failed-AVP' = [],\n         'Origin-State-Id' = [],\n         'AVP' = []}).\n\n-record('diameter_base_access_answer-message',\n        {'Session-Id' = [],\n         'Origin-Host',\n         'Origin-Realm',\n         'Result-Code',\n         'Origin-State-Id' = [],\n         'Error-Message' = [],\n         'Error-Reporting-Host' = [],\n         'Failed-AVP' = [],\n         'Experimental-Result' = [],\n         'Proxy-Info' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_RAR,\n        {'Session-Id',\n         'Origin-Host',\n         'Origin-Realm',\n         'Destination-Realm',\n         'Destination-Host',\n         'Auth-Application-Id',\n         'Re-Auth-Request-Type',\n         'User-Name' = [],\n         'Origin-State-Id' = [],\n         'Proxy-Info' = [],\n         'Route-Record' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_RAA,\n        {'Session-Id',\n         'Result-Code',\n         'Origin-Host',\n         'Origin-Realm',\n         'User-Name' = [],\n         'Origin-State-Id' = [],\n         'Error-Message' = [],\n         'Error-Reporting-Host' = [],\n         'Failed-AVP' = [],\n         'Redirect-Host' = [],\n         'Redirect-Host-Usage' = [],\n         'Redirect-Max-Cache-Time' = [],\n         'Proxy-Info' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_STR,\n        {'Session-Id',\n         'Origin-Host',\n         'Origin-Realm',\n         'Destination-Realm',\n         'Auth-Application-Id',\n         'Termination-Cause',\n         'User-Name' = [],\n         'Destination-Host' = [],\n         'Class' = [],\n         'Origin-State-Id' = [],\n         'Proxy-Info' = [],\n         'Route-Record' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_STA,\n        {'Session-Id',\n         'Result-Code',\n         'Origin-Host',\n         'Origin-Realm',\n         'User-Name' = [],\n         'Class' = [],\n         'Error-Message' = [],\n         'Error-Reporting-Host' = [],\n         'Failed-AVP' = [],\n         'Origin-State-Id' = [],\n         'Redirect-Host' = [],\n         'Redirect-Host-Usage' = [],\n         'Redirect-Max-Cache-Time' = [],\n         'Proxy-Info' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_ASR,\n        {'Session-Id',\n         'Origin-Host',\n         'Origin-Realm',\n         'Destination-Realm',\n         'Destination-Host',\n         'Auth-Application-Id',\n         'User-Name' = [],\n         'Origin-State-Id' = [],\n         'Proxy-Info' = [],\n         'Route-Record' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_ASA,\n        {'Session-Id',\n         'Result-Code',\n         'Origin-Host',\n         'Origin-Realm',\n         'User-Name' = [],\n         'Origin-State-Id' = [],\n         'Error-Message' = [],\n         'Error-Reporting-Host' = [],\n         'Failed-AVP' = [],\n         'Redirect-Host' = [],\n         'Redirect-Host-Usage' = [],\n         'Redirect-Max-Cache-Time' = [],\n         'Proxy-Info' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_ACR,\n        {'Session-Id',\n         'Origin-Host',\n         'Origin-Realm',\n         'Destination-Realm',\n         'Accounting-Record-Type',\n         'Accounting-Record-Number',\n         'Acct-Application-Id' = [],\n         'Vendor-Specific-Application-Id' = [],\n         'User-Name' = [],\n         'Destination-Host' = [],\n         'Accounting-Sub-Session-Id' = [],\n         'Acct-Session-Id' = [],\n         'Acct-Multi-Session-Id' = [],\n         'Acct-Interim-Interval' = [],\n         'Accounting-Realtime-Required' = [],\n         'Origin-State-Id' = [],\n         'Event-Timestamp' = [],\n         'Proxy-Info' = [],\n         'Route-Record' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_ACA,\n        {'Session-Id',\n         'Result-Code',\n         'Origin-Host',\n         'Origin-Realm',\n         'Accounting-Record-Type',\n         'Accounting-Record-Number',\n         'Acct-Application-Id' = [],\n         'Vendor-Specific-Application-Id' = [],\n         'User-Name' = [],\n         'Accounting-Sub-Session-Id' = [],\n         'Acct-Session-Id' = [],\n         'Acct-Multi-Session-Id' = [],\n         'Error-Message' = [],\n         'Error-Reporting-Host' = [],\n         'Failed-AVP' = [],\n         'Acct-Interim-Interval' = [],\n         'Accounting-Realtime-Required' = [],\n         'Origin-State-Id' = [],\n         'Event-Timestamp' = [],\n         'Proxy-Info' = [],\n         'AVP' = []}).\n\n-record('diameter_base_access_CHAP-Auth',\n        {'CHAP-Algorithm',\n         'CHAP-Ident',\n         'CHAP-Response' = [],\n         'AVP' = []}).\n\n-record(diameter_base_access_Tunneling,\n        {'Tunnel-Type',\n         'Tunnel-Medium-Type',\n         'Tunnel-Client-Endpoint',\n         'Tunnel-Server-Endpoint',\n         'Tunnel-Preference' = [],\n         'Tunnel-Client-Auth-Id' = [],\n         'Tunnel-Server-Auth-Id' = [],\n         'Tunnel-Assignment-Id' = [],\n         'Tunnel-Password' = [],\n         'Tunnel-Private-Group-Id' = []}).\n\n-record('diameter_base_access_Proxy-Info',\n        {'Proxy-Host', 'Proxy-State', 'AVP' = []}).\n\n-record('diameter_base_access_Failed-AVP',\n        {'AVP' = []}).\n\n-record('diameter_base_access_Experimental-Result',\n        {'Vendor-Id', 'Experimental-Result-Code'}).\n\n-record('diameter_base_access_Vendor-Specific-Application-Id',\n        {'Vendor-Id',\n         'Auth-Application-Id' = [],\n         'Acct-Application-Id' = []}).\n\n-export([name/0,\n         id/0,\n         vendor_id/0,\n         vendor_name/0,\n         decode_avps/3,\n         encode_avps/3,\n         grouped_avp/4,\n         msg_name/2,\n         msg_header/1,\n         rec2msg/1,\n         msg2rec/1,\n         name2rec/1,\n         avp_name/2,\n         avp_arity/1,\n         avp_arity/2,\n         avp_header/1,\n         avp/4,\n         enumerated_avp/3,\n         empty_value/2,\n         dict/0]).\n\n-include_lib(\"diameter/include/diameter.hrl\").\n\n-include_lib(\"diameter/include/diameter_gen.hrl\").\n\nname() -> diameter_gen_access_rfc7155.\n\nid() -> 0.\n\nvendor_id() -> 0.\n\nvendor_name() -> 'ErlangRed'.\n\nmsg_name(265, true) -> 'AAR';\nmsg_name(265, false) -> 'AAA';\nmsg_name(280, true) -> 'DWR';\nmsg_name(280, false) -> 'DWA';\nmsg_name(282, true) -> 'DPR';\nmsg_name(282, false) -> 'DPA';\nmsg_name(271, true) -> 'ACR';\nmsg_name(271, false) -> 'ACA';\nmsg_name(257, true) -> 'CER';\nmsg_name(257, false) -> 'CEA';\nmsg_name(258, true) -> 'RAR';\nmsg_name(258, false) -> 'RAA';\nmsg_name(274, true) -> 'ASR';\nmsg_name(274, false) -> 'ASA';\nmsg_name(275, true) -> 'STR';\nmsg_name(275, false) -> 'STA';\nmsg_name(_, _) -> ''.\n\nmsg_header('AAR') -> {265, 192, 0};\nmsg_header('AAA') -> {265, 64, 0};\nmsg_header('CER') -> {257, 128, 0};\nmsg_header('CEA') -> {257, 0, 0};\nmsg_header('DPR') -> {282, 128, 0};\nmsg_header('DPA') -> {282, 0, 0};\nmsg_header('DWR') -> {280, 128, 0};\nmsg_header('DWA') -> {280, 0, 0};\nmsg_header('answer-message') -> {-1, 96, 0};\nmsg_header('RAR') -> {258, 192, 0};\nmsg_header('RAA') -> {258, 64, 0};\nmsg_header('STR') -> {275, 192, 0};\nmsg_header('STA') -> {275, 64, 0};\nmsg_header('ASR') -> {274, 192, 0};\nmsg_header('ASA') -> {274, 64, 0};\nmsg_header('ACR') -> {271, 192, 0};\nmsg_header('ACA') -> {271, 64, 0};\nmsg_header(_) -> erlang:error(badarg).\n\nrec2msg(diameter_base_access_AAR) -> 'AAR';\nrec2msg(diameter_base_access_AAA) -> 'AAA';\nrec2msg(diameter_base_access_CER) -> 'CER';\nrec2msg(diameter_base_access_CEA) -> 'CEA';\nrec2msg(diameter_base_access_DPR) -> 'DPR';\nrec2msg(diameter_base_access_DPA) -> 'DPA';\nrec2msg(diameter_base_access_DWR) -> 'DWR';\nrec2msg(diameter_base_access_DWA) -> 'DWA';\nrec2msg('diameter_base_access_answer-message') ->\n    'answer-message';\nrec2msg(diameter_base_access_RAR) -> 'RAR';\nrec2msg(diameter_base_access_RAA) -> 'RAA';\nrec2msg(diameter_base_access_STR) -> 'STR';\nrec2msg(diameter_base_access_STA) -> 'STA';\nrec2msg(diameter_base_access_ASR) -> 'ASR';\nrec2msg(diameter_base_access_ASA) -> 'ASA';\nrec2msg(diameter_base_access_ACR) -> 'ACR';\nrec2msg(diameter_base_access_ACA) -> 'ACA';\nrec2msg(_) -> erlang:error(badarg).\n\nmsg2rec('AAR') -> diameter_base_access_AAR;\nmsg2rec('AAA') -> diameter_base_access_AAA;\nmsg2rec('CER') -> diameter_base_access_CER;\nmsg2rec('CEA') -> diameter_base_access_CEA;\nmsg2rec('DPR') -> diameter_base_access_DPR;\nmsg2rec('DPA') -> diameter_base_access_DPA;\nmsg2rec('DWR') -> diameter_base_access_DWR;\nmsg2rec('DWA') -> diameter_base_access_DWA;\nmsg2rec('answer-message') ->\n    'diameter_base_access_answer-message';\nmsg2rec('RAR') -> diameter_base_access_RAR;\nmsg2rec('RAA') -> diameter_base_access_RAA;\nmsg2rec('STR') -> diameter_base_access_STR;\nmsg2rec('STA') -> diameter_base_access_STA;\nmsg2rec('ASR') -> diameter_base_access_ASR;\nmsg2rec('ASA') -> diameter_base_access_ASA;\nmsg2rec('ACR') -> diameter_base_access_ACR;\nmsg2rec('ACA') -> diameter_base_access_ACA;\nmsg2rec(_) -> erlang:error(badarg).\n\nname2rec('CHAP-Auth') ->\n    'diameter_base_access_CHAP-Auth';\nname2rec('Tunneling') -> diameter_base_access_Tunneling;\nname2rec('Proxy-Info') ->\n    'diameter_base_access_Proxy-Info';\nname2rec('Failed-AVP') ->\n    'diameter_base_access_Failed-AVP';\nname2rec('Experimental-Result') ->\n    'diameter_base_access_Experimental-Result';\nname2rec('Vendor-Specific-Application-Id') ->\n    'diameter_base_access_Vendor-Specific-Application-Id';\nname2rec(T) -> msg2rec(T).\n\navp_name(84, 0) ->\n    {'ARAP-Challenge-Response', 'OctetString'};\navp_name(71, 0) -> {'ARAP-Features', 'OctetString'};\navp_name(70, 0) -> {'ARAP-Password', 'OctetString'};\navp_name(73, 0) -> {'ARAP-Security', 'Unsigned32'};\navp_name(74, 0) ->\n    {'ARAP-Security-Data', 'OctetString'};\navp_name(72, 0) -> {'ARAP-Zone-Access', 'Enumerated'};\navp_name(403, 0) -> {'CHAP-Algorithm', 'Enumerated'};\navp_name(402, 0) -> {'CHAP-Auth', 'Grouped'};\navp_name(60, 0) -> {'CHAP-Challenge', 'OctetString'};\navp_name(404, 0) -> {'CHAP-Ident', 'OctetString'};\navp_name(405, 0) -> {'CHAP-Response', 'OctetString'};\navp_name(20, 0) -> {'Callback-Id', 'UTF8String'};\navp_name(19, 0) -> {'Callback-Number', 'UTF8String'};\navp_name(30, 0) -> {'Called-Station-Id', 'UTF8String'};\navp_name(31, 0) -> {'Calling-Station-Id', 'UTF8String'};\navp_name(78, 0) ->\n    {'Configuration-Token', 'OctetString'};\navp_name(77, 0) -> {'Connect-Info', 'UTF8String'};\navp_name(11, 0) -> {'Filter-Id', 'UTF8String'};\navp_name(37, 0) ->\n    {'Framed-Appletalk-Link', 'Unsigned32'};\navp_name(38, 0) ->\n    {'Framed-Appletalk-Network', 'Unsigned32'};\navp_name(39, 0) ->\n    {'Framed-Appletalk-Zone', 'OctetString'};\navp_name(13, 0) -> {'Framed-Compression', 'Enumerated'};\navp_name(8, 0) -> {'Framed-IP-Address', 'OctetString'};\navp_name(9, 0) -> {'Framed-IP-Netmask', 'OctetString'};\navp_name(23, 0) -> {'Framed-IPX-Network', 'UTF8String'};\navp_name(100, 0) -> {'Framed-IPv6-Pool', 'OctetString'};\navp_name(97, 0) ->\n    {'Framed-IPv6-Prefix', 'OctetString'};\navp_name(99, 0) -> {'Framed-IPv6-Route', 'UTF8String'};\navp_name(96, 0) ->\n    {'Framed-Interface-Id', 'Unsigned64'};\navp_name(12, 0) -> {'Framed-MTU', 'Unsigned32'};\navp_name(88, 0) -> {'Framed-Pool', 'OctetString'};\navp_name(7, 0) -> {'Framed-Protocol', 'Enumerated'};\navp_name(22, 0) -> {'Framed-Route', 'UTF8String'};\navp_name(10, 0) -> {'Framed-Routing', 'Enumerated'};\navp_name(28, 0) -> {'Idle-Timeout', 'Unsigned32'};\navp_name(14, 0) -> {'Login-IP-Host', 'OctetString'};\navp_name(98, 0) -> {'Login-IPv6-Host', 'OctetString'};\navp_name(36, 0) -> {'Login-LAT-Group', 'OctetString'};\navp_name(35, 0) -> {'Login-LAT-Node', 'OctetString'};\navp_name(63, 0) -> {'Login-LAT-Port', 'OctetString'};\navp_name(34, 0) -> {'Login-LAT-Service', 'OctetString'};\navp_name(15, 0) -> {'Login-Service', 'Enumerated'};\navp_name(16, 0) -> {'Login-TCP-Port', 'Unsigned32'};\navp_name(400, 0) -> {'NAS-Filter-Rule', 'IPFilterRule'};\navp_name(4, 0) -> {'NAS-IP-Address', 'OctetString'};\navp_name(95, 0) -> {'NAS-IPv6-Address', 'OctetString'};\navp_name(32, 0) -> {'NAS-Identifier', 'UTF8String'};\navp_name(5, 0) -> {'NAS-Port', 'Unsigned32'};\navp_name(87, 0) -> {'NAS-Port-Id', 'UTF8String'};\navp_name(61, 0) -> {'NAS-Port-Type', 'Enumerated'};\navp_name(408, 0) ->\n    {'Origin-AAA-Protocol', 'Enumerated'};\navp_name(94, 0) ->\n    {'Originating-Line-Info', 'OctetString'};\navp_name(75, 0) -> {'Password-Retry', 'Unsigned32'};\navp_name(62, 0) -> {'Port-Limit', 'Unsigned32'};\navp_name(76, 0) -> {'Prompt', 'Enumerated'};\navp_name(407, 0) ->\n    {'QoS-Filter-Rule', 'QoSFilterRule'};\navp_name(18, 0) -> {'Reply-Message', 'UTF8String'};\navp_name(6, 0) -> {'Service-Type', 'Enumerated'};\navp_name(24, 0) -> {'State', 'OctetString'};\navp_name(82, 0) ->\n    {'Tunnel-Assignment-Id', 'OctetString'};\navp_name(90, 0) ->\n    {'Tunnel-Client-Auth-Id', 'UTF8String'};\navp_name(66, 0) ->\n    {'Tunnel-Client-Endpoint', 'UTF8String'};\navp_name(65, 0) -> {'Tunnel-Medium-Type', 'Enumerated'};\navp_name(69, 0) -> {'Tunnel-Password', 'OctetString'};\navp_name(83, 0) -> {'Tunnel-Preference', 'Unsigned32'};\navp_name(81, 0) ->\n    {'Tunnel-Private-Group-Id', 'OctetString'};\navp_name(91, 0) ->\n    {'Tunnel-Server-Auth-Id', 'UTF8String'};\navp_name(67, 0) ->\n    {'Tunnel-Server-Endpoint', 'UTF8String'};\navp_name(64, 0) -> {'Tunnel-Type', 'Enumerated'};\navp_name(401, 0) -> {'Tunneling', 'Grouped'};\navp_name(2, 0) -> {'User-Password', 'OctetString'};\navp_name(483, undefined) ->\n    {'Accounting-Realtime-Required', 'Enumerated'};\navp_name(485, undefined) ->\n    {'Accounting-Record-Number', 'Unsigned32'};\navp_name(480, undefined) ->\n    {'Accounting-Record-Type', 'Enumerated'};\navp_name(287, undefined) ->\n    {'Accounting-Sub-Session-Id', 'Unsigned64'};\navp_name(259, undefined) ->\n    {'Acct-Application-Id', 'Unsigned32'};\navp_name(85, undefined) ->\n    {'Acct-Interim-Interval', 'Unsigned32'};\navp_name(50, undefined) ->\n    {'Acct-Multi-Session-Id', 'UTF8String'};\navp_name(44, undefined) ->\n    {'Acct-Session-Id', 'OctetString'};\navp_name(258, undefined) ->\n    {'Auth-Application-Id', 'Unsigned32'};\navp_name(276, undefined) ->\n    {'Auth-Grace-Period', 'Unsigned32'};\navp_name(274, undefined) ->\n    {'Auth-Request-Type', 'Enumerated'};\navp_name(277, undefined) ->\n    {'Auth-Session-State', 'Enumerated'};\navp_name(291, undefined) ->\n    {'Authorization-Lifetime', 'Unsigned32'};\navp_name(25, undefined) -> {'Class', 'OctetString'};\navp_name(293, undefined) ->\n    {'Destination-Host', 'DiameterIdentity'};\navp_name(283, undefined) ->\n    {'Destination-Realm', 'DiameterIdentity'};\navp_name(273, undefined) ->\n    {'Disconnect-Cause', 'Enumerated'};\navp_name(281, undefined) ->\n    {'Error-Message', 'UTF8String'};\navp_name(294, undefined) ->\n    {'Error-Reporting-Host', 'DiameterIdentity'};\navp_name(55, undefined) -> {'Event-Timestamp', 'Time'};\navp_name(297, undefined) ->\n    {'Experimental-Result', 'Grouped'};\navp_name(298, undefined) ->\n    {'Experimental-Result-Code', 'Unsigned32'};\navp_name(279, undefined) -> {'Failed-AVP', 'Grouped'};\navp_name(267, undefined) ->\n    {'Firmware-Revision', 'Unsigned32'};\navp_name(257, undefined) ->\n    {'Host-IP-Address', 'Address'};\navp_name(299, undefined) ->\n    {'Inband-Security-Id', 'Unsigned32'};\navp_name(272, undefined) ->\n    {'Multi-Round-Time-Out', 'Unsigned32'};\navp_name(264, undefined) ->\n    {'Origin-Host', 'DiameterIdentity'};\navp_name(296, undefined) ->\n    {'Origin-Realm', 'DiameterIdentity'};\navp_name(278, undefined) ->\n    {'Origin-State-Id', 'Unsigned32'};\navp_name(269, undefined) ->\n    {'Product-Name', 'UTF8String'};\navp_name(280, undefined) ->\n    {'Proxy-Host', 'DiameterIdentity'};\navp_name(284, undefined) -> {'Proxy-Info', 'Grouped'};\navp_name(33, undefined) ->\n    {'Proxy-State', 'OctetString'};\navp_name(285, undefined) ->\n    {'Re-Auth-Request-Type', 'Enumerated'};\navp_name(292, undefined) ->\n    {'Redirect-Host', 'DiameterURI'};\navp_name(261, undefined) ->\n    {'Redirect-Host-Usage', 'Enumerated'};\navp_name(262, undefined) ->\n    {'Redirect-Max-Cache-Time', 'Unsigned32'};\navp_name(268, undefined) ->\n    {'Result-Code', 'Unsigned32'};\navp_name(282, undefined) ->\n    {'Route-Record', 'DiameterIdentity'};\navp_name(270, undefined) ->\n    {'Session-Binding', 'Unsigned32'};\navp_name(263, undefined) ->\n    {'Session-Id', 'UTF8String'};\navp_name(271, undefined) ->\n    {'Session-Server-Failover', 'Enumerated'};\navp_name(27, undefined) ->\n    {'Session-Timeout', 'Unsigned32'};\navp_name(265, undefined) ->\n    {'Supported-Vendor-Id', 'Unsigned32'};\navp_name(295, undefined) ->\n    {'Termination-Cause', 'Enumerated'};\navp_name(1, undefined) -> {'User-Name', 'UTF8String'};\navp_name(266, undefined) -> {'Vendor-Id', 'Unsigned32'};\navp_name(260, undefined) ->\n    {'Vendor-Specific-Application-Id', 'Grouped'};\navp_name(_, _) -> 'AVP'.\n\navp_arity('AAR') ->\n    [{'Session-Id', 1},\n     {'Auth-Application-Id', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Destination-Realm', 1},\n     {'Auth-Request-Type', 1},\n     {'Destination-Host', {0, 1}},\n     {'NAS-Identifier', {0, 1}},\n     {'NAS-IP-Address', {0, 1}},\n     {'NAS-IPv6-Address', {0, 1}},\n     {'NAS-Port', {0, 1}},\n     {'NAS-Port-Id', {0, 1}},\n     {'NAS-Port-Type', {0, 1}},\n     {'Origin-AAA-Protocol', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'Port-Limit', {0, 1}},\n     {'User-Name', {0, 1}},\n     {'User-Password', {0, 1}},\n     {'Service-Type', {0, 1}},\n     {'State', {0, 1}},\n     {'Authorization-Lifetime', {0, 1}},\n     {'Auth-Grace-Period', {0, 1}},\n     {'Auth-Session-State', {0, 1}},\n     {'Callback-Number', {0, 1}},\n     {'Called-Station-Id', {0, 1}},\n     {'Calling-Station-Id', {0, 1}},\n     {'Originating-Line-Info', {0, 1}},\n     {'Connect-Info', {0, 1}},\n     {'CHAP-Auth', {0, 1}},\n     {'CHAP-Challenge', {0, 1}},\n     {'Framed-Compression', {0, '*'}},\n     {'Framed-Interface-Id', {0, 1}},\n     {'Framed-IP-Address', {0, 1}},\n     {'Framed-IPv6-Prefix', {0, '*'}},\n     {'Framed-IP-Netmask', {0, 1}},\n     {'Framed-MTU', {0, 1}},\n     {'Framed-Protocol', {0, 1}},\n     {'ARAP-Password', {0, 1}},\n     {'ARAP-Security', {0, 1}},\n     {'ARAP-Security-Data', {0, '*'}},\n     {'Login-IP-Host', {0, '*'}},\n     {'Login-IPv6-Host', {0, '*'}},\n     {'Login-LAT-Group', {0, 1}},\n     {'Login-LAT-Node', {0, 1}},\n     {'Login-LAT-Port', {0, 1}},\n     {'Login-LAT-Service', {0, 1}},\n     {'Tunneling', {0, '*'}},\n     {'Proxy-Info', {0, '*'}},\n     {'Route-Record', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('AAA') ->\n    [{'Session-Id', 1},\n     {'Auth-Application-Id', 1},\n     {'Auth-Request-Type', 1},\n     {'Result-Code', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'User-Name', {0, 1}},\n     {'Service-Type', {0, 1}},\n     {'Class', {0, '*'}},\n     {'Configuration-Token', {0, '*'}},\n     {'Acct-Interim-Interval', {0, 1}},\n     {'Error-Message', {0, 1}},\n     {'Error-Reporting-Host', {0, 1}},\n     {'Failed-AVP', {0, '*'}},\n     {'Idle-Timeout', {0, 1}},\n     {'Authorization-Lifetime', {0, 1}},\n     {'Auth-Grace-Period', {0, 1}},\n     {'Auth-Session-State', {0, 1}},\n     {'Re-Auth-Request-Type', {0, 1}},\n     {'Multi-Round-Time-Out', {0, 1}},\n     {'Session-Timeout', {0, 1}},\n     {'State', {0, 1}},\n     {'Reply-Message', {0, '*'}},\n     {'Origin-AAA-Protocol', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'Filter-Id', {0, '*'}},\n     {'Password-Retry', {0, 1}},\n     {'Port-Limit', {0, 1}},\n     {'Prompt', {0, 1}},\n     {'ARAP-Challenge-Response', {0, 1}},\n     {'ARAP-Features', {0, 1}},\n     {'ARAP-Security', {0, 1}},\n     {'ARAP-Security-Data', {0, '*'}},\n     {'ARAP-Zone-Access', {0, 1}},\n     {'Callback-Id', {0, 1}},\n     {'Callback-Number', {0, 1}},\n     {'Framed-Appletalk-Link', {0, 1}},\n     {'Framed-Appletalk-Network', {0, '*'}},\n     {'Framed-Appletalk-Zone', {0, 1}},\n     {'Framed-Compression', {0, '*'}},\n     {'Framed-Interface-Id', {0, 1}},\n     {'Framed-IP-Address', {0, 1}},\n     {'Framed-IPv6-Prefix', {0, '*'}},\n     {'Framed-IPv6-Pool', {0, 1}},\n     {'Framed-IPv6-Route', {0, '*'}},\n     {'Framed-IP-Netmask', {0, 1}},\n     {'Framed-Route', {0, '*'}},\n     {'Framed-Pool', {0, 1}},\n     {'Framed-IPX-Network', {0, 1}},\n     {'Framed-MTU', {0, 1}},\n     {'Framed-Protocol', {0, 1}},\n     {'Framed-Routing', {0, 1}},\n     {'Login-IP-Host', {0, '*'}},\n     {'Login-IPv6-Host', {0, '*'}},\n     {'Login-LAT-Group', {0, 1}},\n     {'Login-LAT-Node', {0, 1}},\n     {'Login-LAT-Port', {0, 1}},\n     {'Login-LAT-Service', {0, 1}},\n     {'Login-Service', {0, 1}},\n     {'Login-TCP-Port', {0, 1}},\n     {'NAS-Filter-Rule', {0, '*'}},\n     {'QoS-Filter-Rule', {0, '*'}},\n     {'Tunneling', {0, '*'}},\n     {'Redirect-Host', {0, '*'}},\n     {'Redirect-Host-Usage', {0, 1}},\n     {'Redirect-Max-Cache-Time', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('CER') ->\n    [{'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Host-IP-Address', {1, '*'}},\n     {'Vendor-Id', 1},\n     {'Product-Name', 1},\n     {'Origin-State-Id', {0, 1}},\n     {'Supported-Vendor-Id', {0, '*'}},\n     {'Auth-Application-Id', {0, '*'}},\n     {'Inband-Security-Id', {0, '*'}},\n     {'Acct-Application-Id', {0, '*'}},\n     {'Vendor-Specific-Application-Id', {0, '*'}},\n     {'Firmware-Revision', {0, 1}},\n     {'AVP', {0, '*'}}];\navp_arity('CEA') ->\n    [{'Result-Code', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Host-IP-Address', {1, '*'}},\n     {'Vendor-Id', 1},\n     {'Product-Name', 1},\n     {'Origin-State-Id', {0, 1}},\n     {'Error-Message', {0, 1}},\n     {'Failed-AVP', {0, 1}},\n     {'Supported-Vendor-Id', {0, '*'}},\n     {'Auth-Application-Id', {0, '*'}},\n     {'Inband-Security-Id', {0, '*'}},\n     {'Acct-Application-Id', {0, '*'}},\n     {'Vendor-Specific-Application-Id', {0, '*'}},\n     {'Firmware-Revision', {0, 1}},\n     {'AVP', {0, '*'}}];\navp_arity('DPR') ->\n    [{'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Disconnect-Cause', 1},\n     {'AVP', {0, '*'}}];\navp_arity('DPA') ->\n    [{'Result-Code', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Error-Message', {0, 1}},\n     {'Failed-AVP', {0, 1}},\n     {'AVP', {0, '*'}}];\navp_arity('DWR') ->\n    [{'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Origin-State-Id', {0, 1}},\n     {'AVP', {0, '*'}}];\navp_arity('DWA') ->\n    [{'Result-Code', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Error-Message', {0, 1}},\n     {'Failed-AVP', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'AVP', {0, '*'}}];\navp_arity('answer-message') ->\n    [{'Session-Id', {0, 1}},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Result-Code', 1},\n     {'Origin-State-Id', {0, 1}},\n     {'Error-Message', {0, 1}},\n     {'Error-Reporting-Host', {0, 1}},\n     {'Failed-AVP', {0, 1}},\n     {'Experimental-Result', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('RAR') ->\n    [{'Session-Id', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Destination-Realm', 1},\n     {'Destination-Host', 1},\n     {'Auth-Application-Id', 1},\n     {'Re-Auth-Request-Type', 1},\n     {'User-Name', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'Route-Record', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('RAA') ->\n    [{'Session-Id', 1},\n     {'Result-Code', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'User-Name', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'Error-Message', {0, 1}},\n     {'Error-Reporting-Host', {0, 1}},\n     {'Failed-AVP', {0, 1}},\n     {'Redirect-Host', {0, '*'}},\n     {'Redirect-Host-Usage', {0, 1}},\n     {'Redirect-Max-Cache-Time', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('STR') ->\n    [{'Session-Id', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Destination-Realm', 1},\n     {'Auth-Application-Id', 1},\n     {'Termination-Cause', 1},\n     {'User-Name', {0, 1}},\n     {'Destination-Host', {0, 1}},\n     {'Class', {0, '*'}},\n     {'Origin-State-Id', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'Route-Record', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('STA') ->\n    [{'Session-Id', 1},\n     {'Result-Code', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'User-Name', {0, 1}},\n     {'Class', {0, '*'}},\n     {'Error-Message', {0, 1}},\n     {'Error-Reporting-Host', {0, 1}},\n     {'Failed-AVP', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'Redirect-Host', {0, '*'}},\n     {'Redirect-Host-Usage', {0, 1}},\n     {'Redirect-Max-Cache-Time', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('ASR') ->\n    [{'Session-Id', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Destination-Realm', 1},\n     {'Destination-Host', 1},\n     {'Auth-Application-Id', 1},\n     {'User-Name', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'Route-Record', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('ASA') ->\n    [{'Session-Id', 1},\n     {'Result-Code', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'User-Name', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'Error-Message', {0, 1}},\n     {'Error-Reporting-Host', {0, 1}},\n     {'Failed-AVP', {0, 1}},\n     {'Redirect-Host', {0, '*'}},\n     {'Redirect-Host-Usage', {0, 1}},\n     {'Redirect-Max-Cache-Time', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('ACR') ->\n    [{'Session-Id', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Destination-Realm', 1},\n     {'Accounting-Record-Type', 1},\n     {'Accounting-Record-Number', 1},\n     {'Acct-Application-Id', {0, 1}},\n     {'Vendor-Specific-Application-Id', {0, 1}},\n     {'User-Name', {0, 1}},\n     {'Destination-Host', {0, 1}},\n     {'Accounting-Sub-Session-Id', {0, 1}},\n     {'Acct-Session-Id', {0, 1}},\n     {'Acct-Multi-Session-Id', {0, 1}},\n     {'Acct-Interim-Interval', {0, 1}},\n     {'Accounting-Realtime-Required', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'Event-Timestamp', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'Route-Record', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('ACA') ->\n    [{'Session-Id', 1},\n     {'Result-Code', 1},\n     {'Origin-Host', 1},\n     {'Origin-Realm', 1},\n     {'Accounting-Record-Type', 1},\n     {'Accounting-Record-Number', 1},\n     {'Acct-Application-Id', {0, 1}},\n     {'Vendor-Specific-Application-Id', {0, 1}},\n     {'User-Name', {0, 1}},\n     {'Accounting-Sub-Session-Id', {0, 1}},\n     {'Acct-Session-Id', {0, 1}},\n     {'Acct-Multi-Session-Id', {0, 1}},\n     {'Error-Message', {0, 1}},\n     {'Error-Reporting-Host', {0, 1}},\n     {'Failed-AVP', {0, 1}},\n     {'Acct-Interim-Interval', {0, 1}},\n     {'Accounting-Realtime-Required', {0, 1}},\n     {'Origin-State-Id', {0, 1}},\n     {'Event-Timestamp', {0, 1}},\n     {'Proxy-Info', {0, '*'}},\n     {'AVP', {0, '*'}}];\navp_arity('CHAP-Auth') ->\n    [{'CHAP-Algorithm', 1},\n     {'CHAP-Ident', 1},\n     {'CHAP-Response', {0, 1}},\n     {'AVP', {0, '*'}}];\navp_arity('Tunneling') ->\n    [{'Tunnel-Type', 1},\n     {'Tunnel-Medium-Type', 1},\n     {'Tunnel-Client-Endpoint', 1},\n     {'Tunnel-Server-Endpoint', 1},\n     {'Tunnel-Preference', {0, 1}},\n     {'Tunnel-Client-Auth-Id', {0, 1}},\n     {'Tunnel-Server-Auth-Id', {0, 1}},\n     {'Tunnel-Assignment-Id', {0, 1}},\n     {'Tunnel-Password', {0, 1}},\n     {'Tunnel-Private-Group-Id', {0, 1}}];\navp_arity('Proxy-Info') ->\n    [{'Proxy-Host', 1},\n     {'Proxy-State', 1},\n     {'AVP', {0, '*'}}];\navp_arity('Failed-AVP') -> [{'AVP', {1, '*'}}];\navp_arity('Experimental-Result') ->\n    [{'Vendor-Id', 1}, {'Experimental-Result-Code', 1}];\navp_arity('Vendor-Specific-Application-Id') ->\n    [{'Vendor-Id', 1},\n     {'Auth-Application-Id', {0, 1}},\n     {'Acct-Application-Id', {0, 1}}];\navp_arity(_) -> erlang:error(badarg).\n\navp_arity('AAR', 'Session-Id') -> 1;\navp_arity('AAR', 'Auth-Application-Id') -> 1;\navp_arity('AAR', 'Origin-Host') -> 1;\navp_arity('AAR', 'Origin-Realm') -> 1;\navp_arity('AAR', 'Destination-Realm') -> 1;\navp_arity('AAR', 'Auth-Request-Type') -> 1;\navp_arity('AAR', 'Destination-Host') -> {0, 1};\navp_arity('AAR', 'NAS-Identifier') -> {0, 1};\navp_arity('AAR', 'NAS-IP-Address') -> {0, 1};\navp_arity('AAR', 'NAS-IPv6-Address') -> {0, 1};\navp_arity('AAR', 'NAS-Port') -> {0, 1};\navp_arity('AAR', 'NAS-Port-Id') -> {0, 1};\navp_arity('AAR', 'NAS-Port-Type') -> {0, 1};\navp_arity('AAR', 'Origin-AAA-Protocol') -> {0, 1};\navp_arity('AAR', 'Origin-State-Id') -> {0, 1};\navp_arity('AAR', 'Port-Limit') -> {0, 1};\navp_arity('AAR', 'User-Name') -> {0, 1};\navp_arity('AAR', 'User-Password') -> {0, 1};\navp_arity('AAR', 'Service-Type') -> {0, 1};\navp_arity('AAR', 'State') -> {0, 1};\navp_arity('AAR', 'Authorization-Lifetime') -> {0, 1};\navp_arity('AAR', 'Auth-Grace-Period') -> {0, 1};\navp_arity('AAR', 'Auth-Session-State') -> {0, 1};\navp_arity('AAR', 'Callback-Number') -> {0, 1};\navp_arity('AAR', 'Called-Station-Id') -> {0, 1};\navp_arity('AAR', 'Calling-Station-Id') -> {0, 1};\navp_arity('AAR', 'Originating-Line-Info') -> {0, 1};\navp_arity('AAR', 'Connect-Info') -> {0, 1};\navp_arity('AAR', 'CHAP-Auth') -> {0, 1};\navp_arity('AAR', 'CHAP-Challenge') -> {0, 1};\navp_arity('AAR', 'Framed-Compression') -> {0, '*'};\navp_arity('AAR', 'Framed-Interface-Id') -> {0, 1};\navp_arity('AAR', 'Framed-IP-Address') -> {0, 1};\navp_arity('AAR', 'Framed-IPv6-Prefix') -> {0, '*'};\navp_arity('AAR', 'Framed-IP-Netmask') -> {0, 1};\navp_arity('AAR', 'Framed-MTU') -> {0, 1};\navp_arity('AAR', 'Framed-Protocol') -> {0, 1};\navp_arity('AAR', 'ARAP-Password') -> {0, 1};\navp_arity('AAR', 'ARAP-Security') -> {0, 1};\navp_arity('AAR', 'ARAP-Security-Data') -> {0, '*'};\navp_arity('AAR', 'Login-IP-Host') -> {0, '*'};\navp_arity('AAR', 'Login-IPv6-Host') -> {0, '*'};\navp_arity('AAR', 'Login-LAT-Group') -> {0, 1};\navp_arity('AAR', 'Login-LAT-Node') -> {0, 1};\navp_arity('AAR', 'Login-LAT-Port') -> {0, 1};\navp_arity('AAR', 'Login-LAT-Service') -> {0, 1};\navp_arity('AAR', 'Tunneling') -> {0, '*'};\navp_arity('AAR', 'Proxy-Info') -> {0, '*'};\navp_arity('AAR', 'Route-Record') -> {0, '*'};\navp_arity('AAR', 'AVP') -> {0, '*'};\navp_arity('AAA', 'Session-Id') -> 1;\navp_arity('AAA', 'Auth-Application-Id') -> 1;\navp_arity('AAA', 'Auth-Request-Type') -> 1;\navp_arity('AAA', 'Result-Code') -> 1;\navp_arity('AAA', 'Origin-Host') -> 1;\navp_arity('AAA', 'Origin-Realm') -> 1;\navp_arity('AAA', 'User-Name') -> {0, 1};\navp_arity('AAA', 'Service-Type') -> {0, 1};\navp_arity('AAA', 'Class') -> {0, '*'};\navp_arity('AAA', 'Configuration-Token') -> {0, '*'};\navp_arity('AAA', 'Acct-Interim-Interval') -> {0, 1};\navp_arity('AAA', 'Error-Message') -> {0, 1};\navp_arity('AAA', 'Error-Reporting-Host') -> {0, 1};\navp_arity('AAA', 'Failed-AVP') -> {0, '*'};\navp_arity('AAA', 'Idle-Timeout') -> {0, 1};\navp_arity('AAA', 'Authorization-Lifetime') -> {0, 1};\navp_arity('AAA', 'Auth-Grace-Period') -> {0, 1};\navp_arity('AAA', 'Auth-Session-State') -> {0, 1};\navp_arity('AAA', 'Re-Auth-Request-Type') -> {0, 1};\navp_arity('AAA', 'Multi-Round-Time-Out') -> {0, 1};\navp_arity('AAA', 'Session-Timeout') -> {0, 1};\navp_arity('AAA', 'State') -> {0, 1};\navp_arity('AAA', 'Reply-Message') -> {0, '*'};\navp_arity('AAA', 'Origin-AAA-Protocol') -> {0, 1};\navp_arity('AAA', 'Origin-State-Id') -> {0, 1};\navp_arity('AAA', 'Filter-Id') -> {0, '*'};\navp_arity('AAA', 'Password-Retry') -> {0, 1};\navp_arity('AAA', 'Port-Limit') -> {0, 1};\navp_arity('AAA', 'Prompt') -> {0, 1};\navp_arity('AAA', 'ARAP-Challenge-Response') -> {0, 1};\navp_arity('AAA', 'ARAP-Features') -> {0, 1};\navp_arity('AAA', 'ARAP-Security') -> {0, 1};\navp_arity('AAA', 'ARAP-Security-Data') -> {0, '*'};\navp_arity('AAA', 'ARAP-Zone-Access') -> {0, 1};\navp_arity('AAA', 'Callback-Id') -> {0, 1};\navp_arity('AAA', 'Callback-Number') -> {0, 1};\navp_arity('AAA', 'Framed-Appletalk-Link') -> {0, 1};\navp_arity('AAA', 'Framed-Appletalk-Network') ->\n    {0, '*'};\navp_arity('AAA', 'Framed-Appletalk-Zone') -> {0, 1};\navp_arity('AAA', 'Framed-Compression') -> {0, '*'};\navp_arity('AAA', 'Framed-Interface-Id') -> {0, 1};\navp_arity('AAA', 'Framed-IP-Address') -> {0, 1};\navp_arity('AAA', 'Framed-IPv6-Prefix') -> {0, '*'};\navp_arity('AAA', 'Framed-IPv6-Pool') -> {0, 1};\navp_arity('AAA', 'Framed-IPv6-Route') -> {0, '*'};\navp_arity('AAA', 'Framed-IP-Netmask') -> {0, 1};\navp_arity('AAA', 'Framed-Route') -> {0, '*'};\navp_arity('AAA', 'Framed-Pool') -> {0, 1};\navp_arity('AAA', 'Framed-IPX-Network') -> {0, 1};\navp_arity('AAA', 'Framed-MTU') -> {0, 1};\navp_arity('AAA', 'Framed-Protocol') -> {0, 1};\navp_arity('AAA', 'Framed-Routing') -> {0, 1};\navp_arity('AAA', 'Login-IP-Host') -> {0, '*'};\navp_arity('AAA', 'Login-IPv6-Host') -> {0, '*'};\navp_arity('AAA', 'Login-LAT-Group') -> {0, 1};\navp_arity('AAA', 'Login-LAT-Node') -> {0, 1};\navp_arity('AAA', 'Login-LAT-Port') -> {0, 1};\navp_arity('AAA', 'Login-LAT-Service') -> {0, 1};\navp_arity('AAA', 'Login-Service') -> {0, 1};\navp_arity('AAA', 'Login-TCP-Port') -> {0, 1};\navp_arity('AAA', 'NAS-Filter-Rule') -> {0, '*'};\navp_arity('AAA', 'QoS-Filter-Rule') -> {0, '*'};\navp_arity('AAA', 'Tunneling') -> {0, '*'};\navp_arity('AAA', 'Redirect-Host') -> {0, '*'};\navp_arity('AAA', 'Redirect-Host-Usage') -> {0, 1};\navp_arity('AAA', 'Redirect-Max-Cache-Time') -> {0, 1};\navp_arity('AAA', 'Proxy-Info') -> {0, '*'};\navp_arity('AAA', 'AVP') -> {0, '*'};\navp_arity('CER', 'Origin-Host') -> 1;\navp_arity('CER', 'Origin-Realm') -> 1;\navp_arity('CER', 'Host-IP-Address') -> {1, '*'};\navp_arity('CER', 'Vendor-Id') -> 1;\navp_arity('CER', 'Product-Name') -> 1;\navp_arity('CER', 'Origin-State-Id') -> {0, 1};\navp_arity('CER', 'Supported-Vendor-Id') -> {0, '*'};\navp_arity('CER', 'Auth-Application-Id') -> {0, '*'};\navp_arity('CER', 'Inband-Security-Id') -> {0, '*'};\navp_arity('CER', 'Acct-Application-Id') -> {0, '*'};\navp_arity('CER', 'Vendor-Specific-Application-Id') ->\n    {0, '*'};\navp_arity('CER', 'Firmware-Revision') -> {0, 1};\navp_arity('CER', 'AVP') -> {0, '*'};\navp_arity('CEA', 'Result-Code') -> 1;\navp_arity('CEA', 'Origin-Host') -> 1;\navp_arity('CEA', 'Origin-Realm') -> 1;\navp_arity('CEA', 'Host-IP-Address') -> {1, '*'};\navp_arity('CEA', 'Vendor-Id') -> 1;\navp_arity('CEA', 'Product-Name') -> 1;\navp_arity('CEA', 'Origin-State-Id') -> {0, 1};\navp_arity('CEA', 'Error-Message') -> {0, 1};\navp_arity('CEA', 'Failed-AVP') -> {0, 1};\navp_arity('CEA', 'Supported-Vendor-Id') -> {0, '*'};\navp_arity('CEA', 'Auth-Application-Id') -> {0, '*'};\navp_arity('CEA', 'Inband-Security-Id') -> {0, '*'};\navp_arity('CEA', 'Acct-Application-Id') -> {0, '*'};\navp_arity('CEA', 'Vendor-Specific-Application-Id') ->\n    {0, '*'};\navp_arity('CEA', 'Firmware-Revision') -> {0, 1};\navp_arity('CEA', 'AVP') -> {0, '*'};\navp_arity('DPR', 'Origin-Host') -> 1;\navp_arity('DPR', 'Origin-Realm') -> 1;\navp_arity('DPR', 'Disconnect-Cause') -> 1;\navp_arity('DPR', 'AVP') -> {0, '*'};\navp_arity('DPA', 'Result-Code') -> 1;\navp_arity('DPA', 'Origin-Host') -> 1;\navp_arity('DPA', 'Origin-Realm') -> 1;\navp_arity('DPA', 'Error-Message') -> {0, 1};\navp_arity('DPA', 'Failed-AVP') -> {0, 1};\navp_arity('DPA', 'AVP') -> {0, '*'};\navp_arity('DWR', 'Origin-Host') -> 1;\navp_arity('DWR', 'Origin-Realm') -> 1;\navp_arity('DWR', 'Origin-State-Id') -> {0, 1};\navp_arity('DWR', 'AVP') -> {0, '*'};\navp_arity('DWA', 'Result-Code') -> 1;\navp_arity('DWA', 'Origin-Host') -> 1;\navp_arity('DWA', 'Origin-Realm') -> 1;\navp_arity('DWA', 'Error-Message') -> {0, 1};\navp_arity('DWA', 'Failed-AVP') -> {0, 1};\navp_arity('DWA', 'Origin-State-Id') -> {0, 1};\navp_arity('DWA', 'AVP') -> {0, '*'};\navp_arity('answer-message', 'Session-Id') -> {0, 1};\navp_arity('answer-message', 'Origin-Host') -> 1;\navp_arity('answer-message', 'Origin-Realm') -> 1;\navp_arity('answer-message', 'Result-Code') -> 1;\navp_arity('answer-message', 'Origin-State-Id') ->\n    {0, 1};\navp_arity('answer-message', 'Error-Message') -> {0, 1};\navp_arity('answer-message', 'Error-Reporting-Host') ->\n    {0, 1};\navp_arity('answer-message', 'Failed-AVP') -> {0, 1};\navp_arity('answer-message', 'Experimental-Result') ->\n    {0, 1};\navp_arity('answer-message', 'Proxy-Info') -> {0, '*'};\navp_arity('answer-message', 'AVP') -> {0, '*'};\navp_arity('RAR', 'Session-Id') -> 1;\navp_arity('RAR', 'Origin-Host') -> 1;\navp_arity('RAR', 'Origin-Realm') -> 1;\navp_arity('RAR', 'Destination-Realm') -> 1;\navp_arity('RAR', 'Destination-Host') -> 1;\navp_arity('RAR', 'Auth-Application-Id') -> 1;\navp_arity('RAR', 'Re-Auth-Request-Type') -> 1;\navp_arity('RAR', 'User-Name') -> {0, 1};\navp_arity('RAR', 'Origin-State-Id') -> {0, 1};\navp_arity('RAR', 'Proxy-Info') -> {0, '*'};\navp_arity('RAR', 'Route-Record') -> {0, '*'};\navp_arity('RAR', 'AVP') -> {0, '*'};\navp_arity('RAA', 'Session-Id') -> 1;\navp_arity('RAA', 'Result-Code') -> 1;\navp_arity('RAA', 'Origin-Host') -> 1;\navp_arity('RAA', 'Origin-Realm') -> 1;\navp_arity('RAA', 'User-Name') -> {0, 1};\navp_arity('RAA', 'Origin-State-Id') -> {0, 1};\navp_arity('RAA', 'Error-Message') -> {0, 1};\navp_arity('RAA', 'Error-Reporting-Host') -> {0, 1};\navp_arity('RAA', 'Failed-AVP') -> {0, 1};\navp_arity('RAA', 'Redirect-Host') -> {0, '*'};\navp_arity('RAA', 'Redirect-Host-Usage') -> {0, 1};\navp_arity('RAA', 'Redirect-Max-Cache-Time') -> {0, 1};\navp_arity('RAA', 'Proxy-Info') -> {0, '*'};\navp_arity('RAA', 'AVP') -> {0, '*'};\navp_arity('STR', 'Session-Id') -> 1;\navp_arity('STR', 'Origin-Host') -> 1;\navp_arity('STR', 'Origin-Realm') -> 1;\navp_arity('STR', 'Destination-Realm') -> 1;\navp_arity('STR', 'Auth-Application-Id') -> 1;\navp_arity('STR', 'Termination-Cause') -> 1;\navp_arity('STR', 'User-Name') -> {0, 1};\navp_arity('STR', 'Destination-Host') -> {0, 1};\navp_arity('STR', 'Class') -> {0, '*'};\navp_arity('STR', 'Origin-State-Id') -> {0, 1};\navp_arity('STR', 'Proxy-Info') -> {0, '*'};\navp_arity('STR', 'Route-Record') -> {0, '*'};\navp_arity('STR', 'AVP') -> {0, '*'};\navp_arity('STA', 'Session-Id') -> 1;\navp_arity('STA', 'Result-Code') -> 1;\navp_arity('STA', 'Origin-Host') -> 1;\navp_arity('STA', 'Origin-Realm') -> 1;\navp_arity('STA', 'User-Name') -> {0, 1};\navp_arity('STA', 'Class') -> {0, '*'};\navp_arity('STA', 'Error-Message') -> {0, 1};\navp_arity('STA', 'Error-Reporting-Host') -> {0, 1};\navp_arity('STA', 'Failed-AVP') -> {0, 1};\navp_arity('STA', 'Origin-State-Id') -> {0, 1};\navp_arity('STA', 'Redirect-Host') -> {0, '*'};\navp_arity('STA', 'Redirect-Host-Usage') -> {0, 1};\navp_arity('STA', 'Redirect-Max-Cache-Time') -> {0, 1};\navp_arity('STA', 'Proxy-Info') -> {0, '*'};\navp_arity('STA', 'AVP') -> {0, '*'};\navp_arity('ASR', 'Session-Id') -> 1;\navp_arity('ASR', 'Origin-Host') -> 1;\navp_arity('ASR', 'Origin-Realm') -> 1;\navp_arity('ASR', 'Destination-Realm') -> 1;\navp_arity('ASR', 'Destination-Host') -> 1;\navp_arity('ASR', 'Auth-Application-Id') -> 1;\navp_arity('ASR', 'User-Name') -> {0, 1};\navp_arity('ASR', 'Origin-State-Id') -> {0, 1};\navp_arity('ASR', 'Proxy-Info') -> {0, '*'};\navp_arity('ASR', 'Route-Record') -> {0, '*'};\navp_arity('ASR', 'AVP') -> {0, '*'};\navp_arity('ASA', 'Session-Id') -> 1;\navp_arity('ASA', 'Result-Code') -> 1;\navp_arity('ASA', 'Origin-Host') -> 1;\navp_arity('ASA', 'Origin-Realm') -> 1;\navp_arity('ASA', 'User-Name') -> {0, 1};\navp_arity('ASA', 'Origin-State-Id') -> {0, 1};\navp_arity('ASA', 'Error-Message') -> {0, 1};\navp_arity('ASA', 'Error-Reporting-Host') -> {0, 1};\navp_arity('ASA', 'Failed-AVP') -> {0, 1};\navp_arity('ASA', 'Redirect-Host') -> {0, '*'};\navp_arity('ASA', 'Redirect-Host-Usage') -> {0, 1};\navp_arity('ASA', 'Redirect-Max-Cache-Time') -> {0, 1};\navp_arity('ASA', 'Proxy-Info') -> {0, '*'};\navp_arity('ASA', 'AVP') -> {0, '*'};\navp_arity('ACR', 'Session-Id') -> 1;\navp_arity('ACR', 'Origin-Host') -> 1;\navp_arity('ACR', 'Origin-Realm') -> 1;\navp_arity('ACR', 'Destination-Realm') -> 1;\navp_arity('ACR', 'Accounting-Record-Type') -> 1;\navp_arity('ACR', 'Accounting-Record-Number') -> 1;\navp_arity('ACR', 'Acct-Application-Id') -> {0, 1};\navp_arity('ACR', 'Vendor-Specific-Application-Id') ->\n    {0, 1};\navp_arity('ACR', 'User-Name') -> {0, 1};\navp_arity('ACR', 'Destination-Host') -> {0, 1};\navp_arity('ACR', 'Accounting-Sub-Session-Id') -> {0, 1};\navp_arity('ACR', 'Acct-Session-Id') -> {0, 1};\navp_arity('ACR', 'Acct-Multi-Session-Id') -> {0, 1};\navp_arity('ACR', 'Acct-Interim-Interval') -> {0, 1};\navp_arity('ACR', 'Accounting-Realtime-Required') ->\n    {0, 1};\navp_arity('ACR', 'Origin-State-Id') -> {0, 1};\navp_arity('ACR', 'Event-Timestamp') -> {0, 1};\navp_arity('ACR', 'Proxy-Info') -> {0, '*'};\navp_arity('ACR', 'Route-Record') -> {0, '*'};\navp_arity('ACR', 'AVP') -> {0, '*'};\navp_arity('ACA', 'Session-Id') -> 1;\navp_arity('ACA', 'Result-Code') -> 1;\navp_arity('ACA', 'Origin-Host') -> 1;\navp_arity('ACA', 'Origin-Realm') -> 1;\navp_arity('ACA', 'Accounting-Record-Type') -> 1;\navp_arity('ACA', 'Accounting-Record-Number') -> 1;\navp_arity('ACA', 'Acct-Application-Id') -> {0, 1};\navp_arity('ACA', 'Vendor-Specific-Application-Id') ->\n    {0, 1};\navp_arity('ACA', 'User-Name') -> {0, 1};\navp_arity('ACA', 'Accounting-Sub-Session-Id') -> {0, 1};\navp_arity('ACA', 'Acct-Session-Id') -> {0, 1};\navp_arity('ACA', 'Acct-Multi-Session-Id') -> {0, 1};\navp_arity('ACA', 'Error-Message') -> {0, 1};\navp_arity('ACA', 'Error-Reporting-Host') -> {0, 1};\navp_arity('ACA', 'Failed-AVP') -> {0, 1};\navp_arity('ACA', 'Acct-Interim-Interval') -> {0, 1};\navp_arity('ACA', 'Accounting-Realtime-Required') ->\n    {0, 1};\navp_arity('ACA', 'Origin-State-Id') -> {0, 1};\navp_arity('ACA', 'Event-Timestamp') -> {0, 1};\navp_arity('ACA', 'Proxy-Info') -> {0, '*'};\navp_arity('ACA', 'AVP') -> {0, '*'};\navp_arity('CHAP-Auth', 'CHAP-Algorithm') -> 1;\navp_arity('CHAP-Auth', 'CHAP-Ident') -> 1;\navp_arity('CHAP-Auth', 'CHAP-Response') -> {0, 1};\navp_arity('CHAP-Auth', 'AVP') -> {0, '*'};\navp_arity('Tunneling', 'Tunnel-Type') -> 1;\navp_arity('Tunneling', 'Tunnel-Medium-Type') -> 1;\navp_arity('Tunneling', 'Tunnel-Client-Endpoint') -> 1;\navp_arity('Tunneling', 'Tunnel-Server-Endpoint') -> 1;\navp_arity('Tunneling', 'Tunnel-Preference') -> {0, 1};\navp_arity('Tunneling', 'Tunnel-Client-Auth-Id') ->\n    {0, 1};\navp_arity('Tunneling', 'Tunnel-Server-Auth-Id') ->\n    {0, 1};\navp_arity('Tunneling', 'Tunnel-Assignment-Id') ->\n    {0, 1};\navp_arity('Tunneling', 'Tunnel-Password') -> {0, 1};\navp_arity('Tunneling', 'Tunnel-Private-Group-Id') ->\n    {0, 1};\navp_arity('Proxy-Info', 'Proxy-Host') -> 1;\navp_arity('Proxy-Info', 'Proxy-State') -> 1;\navp_arity('Proxy-Info', 'AVP') -> {0, '*'};\navp_arity('Failed-AVP', 'AVP') -> {1, '*'};\navp_arity('Experimental-Result', 'Vendor-Id') -> 1;\navp_arity('Experimental-Result',\n          'Experimental-Result-Code') ->\n    1;\navp_arity('Vendor-Specific-Application-Id',\n          'Vendor-Id') ->\n    1;\navp_arity('Vendor-Specific-Application-Id',\n          'Auth-Application-Id') ->\n    {0, 1};\navp_arity('Vendor-Specific-Application-Id',\n          'Acct-Application-Id') ->\n    {0, 1};\navp_arity(_, _) -> 0.\n\navp_header('ARAP-Challenge-Response') -> {84, 224, 0};\navp_header('ARAP-Features') -> {71, 224, 0};\navp_header('ARAP-Password') -> {70, 224, 0};\navp_header('ARAP-Security') -> {73, 224, 0};\navp_header('ARAP-Security-Data') -> {74, 192, 0};\navp_header('ARAP-Zone-Access') -> {72, 224, 0};\navp_header('CHAP-Algorithm') -> {403, 224, 0};\navp_header('CHAP-Auth') -> {402, 224, 0};\navp_header('CHAP-Challenge') -> {60, 224, 0};\navp_header('CHAP-Ident') -> {404, 224, 0};\navp_header('CHAP-Response') -> {405, 224, 0};\navp_header('Callback-Id') -> {20, 224, 0};\navp_header('Callback-Number') -> {19, 224, 0};\navp_header('Called-Station-Id') -> {30, 224, 0};\navp_header('Calling-Station-Id') -> {31, 224, 0};\navp_header('Configuration-Token') -> {78, 224, 0};\navp_header('Connect-Info') -> {77, 224, 0};\navp_header('Filter-Id') -> {11, 224, 0};\navp_header('Framed-Appletalk-Link') -> {37, 224, 0};\navp_header('Framed-Appletalk-Network') -> {38, 224, 0};\navp_header('Framed-Appletalk-Zone') -> {39, 224, 0};\navp_header('Framed-Compression') -> {13, 224, 0};\navp_header('Framed-IP-Address') -> {8, 224, 0};\navp_header('Framed-IP-Netmask') -> {9, 224, 0};\navp_header('Framed-IPX-Network') -> {23, 224, 0};\navp_header('Framed-IPv6-Pool') -> {100, 224, 0};\navp_header('Framed-IPv6-Prefix') -> {97, 224, 0};\navp_header('Framed-IPv6-Route') -> {99, 224, 0};\navp_header('Framed-Interface-Id') -> {96, 224, 0};\navp_header('Framed-MTU') -> {12, 224, 0};\navp_header('Framed-Pool') -> {88, 224, 0};\navp_header('Framed-Protocol') -> {7, 224, 0};\navp_header('Framed-Route') -> {22, 224, 0};\navp_header('Framed-Routing') -> {10, 224, 0};\navp_header('Idle-Timeout') -> {28, 224, 0};\navp_header('Login-IP-Host') -> {14, 224, 0};\navp_header('Login-IPv6-Host') -> {98, 224, 0};\navp_header('Login-LAT-Group') -> {36, 224, 0};\navp_header('Login-LAT-Node') -> {35, 224, 0};\navp_header('Login-LAT-Port') -> {63, 224, 0};\navp_header('Login-LAT-Service') -> {34, 224, 0};\navp_header('Login-Service') -> {15, 224, 0};\navp_header('Login-TCP-Port') -> {16, 224, 0};\navp_header('NAS-Filter-Rule') -> {400, 224, 0};\navp_header('NAS-IP-Address') -> {4, 224, 0};\navp_header('NAS-IPv6-Address') -> {95, 224, 0};\navp_header('NAS-Identifier') -> {32, 224, 0};\navp_header('NAS-Port') -> {5, 224, 0};\navp_header('NAS-Port-Id') -> {87, 224, 0};\navp_header('NAS-Port-Type') -> {61, 224, 0};\navp_header('Origin-AAA-Protocol') -> {408, 224, 0};\navp_header('Originating-Line-Info') -> {94, 224, 0};\navp_header('Password-Retry') -> {75, 224, 0};\navp_header('Port-Limit') -> {62, 224, 0};\navp_header('Prompt') -> {76, 224, 0};\navp_header('QoS-Filter-Rule') -> {407, 224, 0};\navp_header('Reply-Message') -> {18, 224, 0};\navp_header('Service-Type') -> {6, 224, 0};\navp_header('State') -> {24, 224, 0};\navp_header('Tunnel-Assignment-Id') -> {82, 224, 0};\navp_header('Tunnel-Client-Auth-Id') -> {90, 224, 0};\navp_header('Tunnel-Client-Endpoint') -> {66, 224, 0};\navp_header('Tunnel-Medium-Type') -> {65, 224, 0};\navp_header('Tunnel-Password') -> {69, 224, 0};\navp_header('Tunnel-Preference') -> {83, 224, 0};\navp_header('Tunnel-Private-Group-Id') -> {81, 224, 0};\navp_header('Tunnel-Server-Auth-Id') -> {91, 224, 0};\navp_header('Tunnel-Server-Endpoint') -> {67, 224, 0};\navp_header('Tunnel-Type') -> {64, 224, 0};\navp_header('Tunneling') -> {401, 224, 0};\navp_header('User-Password') -> {2, 224, 0};\navp_header('Accounting-Realtime-Required') ->\n    diameter_gen_base_rfc6733:avp_header('Accounting-Realtime-Required');\navp_header('Accounting-Record-Number') ->\n    diameter_gen_base_rfc6733:avp_header('Accounting-Record-Number');\navp_header('Accounting-Record-Type') ->\n    diameter_gen_base_rfc6733:avp_header('Accounting-Record-Type');\navp_header('Accounting-Sub-Session-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Accounting-Sub-Session-Id');\navp_header('Acct-Application-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Acct-Application-Id');\navp_header('Acct-Interim-Interval') ->\n    diameter_gen_base_rfc6733:avp_header('Acct-Interim-Interval');\navp_header('Acct-Multi-Session-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Acct-Multi-Session-Id');\navp_header('Acct-Session-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Acct-Session-Id');\navp_header('Auth-Application-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Auth-Application-Id');\navp_header('Auth-Grace-Period') ->\n    diameter_gen_base_rfc6733:avp_header('Auth-Grace-Period');\navp_header('Auth-Request-Type') ->\n    diameter_gen_base_rfc6733:avp_header('Auth-Request-Type');\navp_header('Auth-Session-State') ->\n    diameter_gen_base_rfc6733:avp_header('Auth-Session-State');\navp_header('Authorization-Lifetime') ->\n    diameter_gen_base_rfc6733:avp_header('Authorization-Lifetime');\navp_header('Class') ->\n    diameter_gen_base_rfc6733:avp_header('Class');\navp_header('Destination-Host') ->\n    diameter_gen_base_rfc6733:avp_header('Destination-Host');\navp_header('Destination-Realm') ->\n    diameter_gen_base_rfc6733:avp_header('Destination-Realm');\navp_header('Disconnect-Cause') ->\n    diameter_gen_base_rfc6733:avp_header('Disconnect-Cause');\navp_header('Error-Message') ->\n    diameter_gen_base_rfc6733:avp_header('Error-Message');\navp_header('Error-Reporting-Host') ->\n    diameter_gen_base_rfc6733:avp_header('Error-Reporting-Host');\navp_header('Event-Timestamp') ->\n    diameter_gen_base_rfc6733:avp_header('Event-Timestamp');\navp_header('Experimental-Result') ->\n    diameter_gen_base_rfc6733:avp_header('Experimental-Result');\navp_header('Experimental-Result-Code') ->\n    diameter_gen_base_rfc6733:avp_header('Experimental-Result-Code');\navp_header('Failed-AVP') ->\n    diameter_gen_base_rfc6733:avp_header('Failed-AVP');\navp_header('Firmware-Revision') ->\n    diameter_gen_base_rfc6733:avp_header('Firmware-Revision');\navp_header('Host-IP-Address') ->\n    diameter_gen_base_rfc6733:avp_header('Host-IP-Address');\navp_header('Inband-Security-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Inband-Security-Id');\navp_header('Multi-Round-Time-Out') ->\n    diameter_gen_base_rfc6733:avp_header('Multi-Round-Time-Out');\navp_header('Origin-Host') ->\n    diameter_gen_base_rfc6733:avp_header('Origin-Host');\navp_header('Origin-Realm') ->\n    diameter_gen_base_rfc6733:avp_header('Origin-Realm');\navp_header('Origin-State-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Origin-State-Id');\navp_header('Product-Name') ->\n    diameter_gen_base_rfc6733:avp_header('Product-Name');\navp_header('Proxy-Host') ->\n    diameter_gen_base_rfc6733:avp_header('Proxy-Host');\navp_header('Proxy-Info') ->\n    diameter_gen_base_rfc6733:avp_header('Proxy-Info');\navp_header('Proxy-State') ->\n    diameter_gen_base_rfc6733:avp_header('Proxy-State');\navp_header('Re-Auth-Request-Type') ->\n    diameter_gen_base_rfc6733:avp_header('Re-Auth-Request-Type');\navp_header('Redirect-Host') ->\n    diameter_gen_base_rfc6733:avp_header('Redirect-Host');\navp_header('Redirect-Host-Usage') ->\n    diameter_gen_base_rfc6733:avp_header('Redirect-Host-Usage');\navp_header('Redirect-Max-Cache-Time') ->\n    diameter_gen_base_rfc6733:avp_header('Redirect-Max-Cache-Time');\navp_header('Result-Code') ->\n    diameter_gen_base_rfc6733:avp_header('Result-Code');\navp_header('Route-Record') ->\n    diameter_gen_base_rfc6733:avp_header('Route-Record');\navp_header('Session-Binding') ->\n    diameter_gen_base_rfc6733:avp_header('Session-Binding');\navp_header('Session-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Session-Id');\navp_header('Session-Server-Failover') ->\n    diameter_gen_base_rfc6733:avp_header('Session-Server-Failover');\navp_header('Session-Timeout') ->\n    diameter_gen_base_rfc6733:avp_header('Session-Timeout');\navp_header('Supported-Vendor-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Supported-Vendor-Id');\navp_header('Termination-Cause') ->\n    diameter_gen_base_rfc6733:avp_header('Termination-Cause');\navp_header('User-Name') ->\n    diameter_gen_base_rfc6733:avp_header('User-Name');\navp_header('Vendor-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Vendor-Id');\navp_header('Vendor-Specific-Application-Id') ->\n    diameter_gen_base_rfc6733:avp_header('Vendor-Specific-Application-Id');\navp_header(_) -> erlang:error(badarg).\n\navp(T, Data, 'ARAP-Challenge-Response', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'ARAP-Features', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'ARAP-Password', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'ARAP-Security', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'ARAP-Security-Data', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'ARAP-Zone-Access', _) ->\n    enumerated_avp(T, 'ARAP-Zone-Access', Data);\navp(T, Data, 'CHAP-Algorithm', _) ->\n    enumerated_avp(T, 'CHAP-Algorithm', Data);\navp(T, Data, 'CHAP-Auth', Opts) ->\n    grouped_avp(T, 'CHAP-Auth', Data, Opts);\navp(T, Data, 'CHAP-Challenge', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'CHAP-Ident', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'CHAP-Response', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Callback-Id', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Callback-Number', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Called-Station-Id', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Calling-Station-Id', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Configuration-Token', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Connect-Info', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Filter-Id', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Framed-Appletalk-Link', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'Framed-Appletalk-Network', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'Framed-Appletalk-Zone', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Framed-Compression', _) ->\n    enumerated_avp(T, 'Framed-Compression', Data);\navp(T, Data, 'Framed-IP-Address', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Framed-IP-Netmask', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Framed-IPX-Network', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Framed-IPv6-Pool', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Framed-IPv6-Prefix', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Framed-IPv6-Route', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Framed-Interface-Id', Opts) ->\n    diameter_types:'Unsigned64'(T, Data, Opts);\navp(T, Data, 'Framed-MTU', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'Framed-Pool', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Framed-Protocol', _) ->\n    enumerated_avp(T, 'Framed-Protocol', Data);\navp(T, Data, 'Framed-Route', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Framed-Routing', _) ->\n    enumerated_avp(T, 'Framed-Routing', Data);\navp(T, Data, 'Idle-Timeout', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'Login-IP-Host', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Login-IPv6-Host', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Login-LAT-Group', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Login-LAT-Node', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Login-LAT-Port', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Login-LAT-Service', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Login-Service', _) ->\n    enumerated_avp(T, 'Login-Service', Data);\navp(T, Data, 'Login-TCP-Port', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'NAS-Filter-Rule', Opts) ->\n    diameter_types:'IPFilterRule'(T, Data, Opts);\navp(T, Data, 'NAS-IP-Address', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'NAS-IPv6-Address', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'NAS-Identifier', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'NAS-Port', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'NAS-Port-Id', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'NAS-Port-Type', _) ->\n    enumerated_avp(T, 'NAS-Port-Type', Data);\navp(T, Data, 'Origin-AAA-Protocol', _) ->\n    enumerated_avp(T, 'Origin-AAA-Protocol', Data);\navp(T, Data, 'Originating-Line-Info', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Password-Retry', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'Port-Limit', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'Prompt', _) ->\n    enumerated_avp(T, 'Prompt', Data);\navp(T, Data, 'QoS-Filter-Rule', Opts) ->\n    diameter_types:'QoSFilterRule'(T, Data, Opts);\navp(T, Data, 'Reply-Message', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Service-Type', _) ->\n    enumerated_avp(T, 'Service-Type', Data);\navp(T, Data, 'State', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Tunnel-Assignment-Id', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Tunnel-Client-Auth-Id', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Tunnel-Client-Endpoint', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Tunnel-Medium-Type', _) ->\n    enumerated_avp(T, 'Tunnel-Medium-Type', Data);\navp(T, Data, 'Tunnel-Password', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Tunnel-Preference', Opts) ->\n    diameter_types:'Unsigned32'(T, Data, Opts);\navp(T, Data, 'Tunnel-Private-Group-Id', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Tunnel-Server-Auth-Id', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Tunnel-Server-Endpoint', Opts) ->\n    diameter_types:'UTF8String'(T, Data, Opts);\navp(T, Data, 'Tunnel-Type', _) ->\n    enumerated_avp(T, 'Tunnel-Type', Data);\navp(T, Data, 'Tunneling', Opts) ->\n    grouped_avp(T, 'Tunneling', Data, Opts);\navp(T, Data, 'User-Password', Opts) ->\n    diameter_types:'OctetString'(T, Data, Opts);\navp(T, Data, 'Accounting-Realtime-Required', Opts) ->\n    avp(T,\n        Data,\n        'Accounting-Realtime-Required',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Accounting-Record-Number', Opts) ->\n    avp(T,\n        Data,\n        'Accounting-Record-Number',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Accounting-Record-Type', Opts) ->\n    avp(T,\n        Data,\n        'Accounting-Record-Type',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Accounting-Sub-Session-Id', Opts) ->\n    avp(T,\n        Data,\n        'Accounting-Sub-Session-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Acct-Application-Id', Opts) ->\n    avp(T,\n        Data,\n        'Acct-Application-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Acct-Interim-Interval', Opts) ->\n    avp(T,\n        Data,\n        'Acct-Interim-Interval',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Acct-Multi-Session-Id', Opts) ->\n    avp(T,\n        Data,\n        'Acct-Multi-Session-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Acct-Session-Id', Opts) ->\n    avp(T,\n        Data,\n        'Acct-Session-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Auth-Application-Id', Opts) ->\n    avp(T,\n        Data,\n        'Auth-Application-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Auth-Grace-Period', Opts) ->\n    avp(T,\n        Data,\n        'Auth-Grace-Period',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Auth-Request-Type', Opts) ->\n    avp(T,\n        Data,\n        'Auth-Request-Type',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Auth-Session-State', Opts) ->\n    avp(T,\n        Data,\n        'Auth-Session-State',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Authorization-Lifetime', Opts) ->\n    avp(T,\n        Data,\n        'Authorization-Lifetime',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Class', Opts) ->\n    avp(T, Data, 'Class', Opts, diameter_gen_base_rfc6733);\navp(T, Data, 'Destination-Host', Opts) ->\n    avp(T,\n        Data,\n        'Destination-Host',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Destination-Realm', Opts) ->\n    avp(T,\n        Data,\n        'Destination-Realm',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Disconnect-Cause', Opts) ->\n    avp(T,\n        Data,\n        'Disconnect-Cause',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Error-Message', Opts) ->\n    avp(T,\n        Data,\n        'Error-Message',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Error-Reporting-Host', Opts) ->\n    avp(T,\n        Data,\n        'Error-Reporting-Host',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Event-Timestamp', Opts) ->\n    avp(T,\n        Data,\n        'Event-Timestamp',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Experimental-Result', Opts) ->\n    grouped_avp(T, 'Experimental-Result', Data, Opts);\navp(T, Data, 'Experimental-Result-Code', Opts) ->\n    avp(T,\n        Data,\n        'Experimental-Result-Code',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Failed-AVP', Opts) ->\n    grouped_avp(T, 'Failed-AVP', Data, Opts);\navp(T, Data, 'Firmware-Revision', Opts) ->\n    avp(T,\n        Data,\n        'Firmware-Revision',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Host-IP-Address', Opts) ->\n    avp(T,\n        Data,\n        'Host-IP-Address',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Inband-Security-Id', Opts) ->\n    avp(T,\n        Data,\n        'Inband-Security-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Multi-Round-Time-Out', Opts) ->\n    avp(T,\n        Data,\n        'Multi-Round-Time-Out',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Origin-Host', Opts) ->\n    avp(T,\n        Data,\n        'Origin-Host',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Origin-Realm', Opts) ->\n    avp(T,\n        Data,\n        'Origin-Realm',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Origin-State-Id', Opts) ->\n    avp(T,\n        Data,\n        'Origin-State-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Product-Name', Opts) ->\n    avp(T,\n        Data,\n        'Product-Name',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Proxy-Host', Opts) ->\n    avp(T,\n        Data,\n        'Proxy-Host',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Proxy-Info', Opts) ->\n    grouped_avp(T, 'Proxy-Info', Data, Opts);\navp(T, Data, 'Proxy-State', Opts) ->\n    avp(T,\n        Data,\n        'Proxy-State',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Re-Auth-Request-Type', Opts) ->\n    avp(T,\n        Data,\n        'Re-Auth-Request-Type',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Redirect-Host', Opts) ->\n    avp(T,\n        Data,\n        'Redirect-Host',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Redirect-Host-Usage', Opts) ->\n    avp(T,\n        Data,\n        'Redirect-Host-Usage',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Redirect-Max-Cache-Time', Opts) ->\n    avp(T,\n        Data,\n        'Redirect-Max-Cache-Time',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Result-Code', Opts) ->\n    avp(T,\n        Data,\n        'Result-Code',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Route-Record', Opts) ->\n    avp(T,\n        Data,\n        'Route-Record',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Session-Binding', Opts) ->\n    avp(T,\n        Data,\n        'Session-Binding',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Session-Id', Opts) ->\n    avp(T,\n        Data,\n        'Session-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Session-Server-Failover', Opts) ->\n    avp(T,\n        Data,\n        'Session-Server-Failover',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Session-Timeout', Opts) ->\n    avp(T,\n        Data,\n        'Session-Timeout',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Supported-Vendor-Id', Opts) ->\n    avp(T,\n        Data,\n        'Supported-Vendor-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Termination-Cause', Opts) ->\n    avp(T,\n        Data,\n        'Termination-Cause',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'User-Name', Opts) ->\n    avp(T,\n        Data,\n        'User-Name',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Vendor-Id', Opts) ->\n    avp(T,\n        Data,\n        'Vendor-Id',\n        Opts,\n        diameter_gen_base_rfc6733);\navp(T, Data, 'Vendor-Specific-Application-Id', Opts) ->\n    grouped_avp(T,\n                'Vendor-Specific-Application-Id',\n                Data,\n                Opts);\navp(_, _, _, _) -> erlang:error(badarg).\n\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'Service-Type', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 2>>) ->\n    2;\nenumerated_avp(encode, 'Service-Type', 2) ->\n    <<0, 0, 0, 2>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 3>>) ->\n    3;\nenumerated_avp(encode, 'Service-Type', 3) ->\n    <<0, 0, 0, 3>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 4>>) ->\n    4;\nenumerated_avp(encode, 'Service-Type', 4) ->\n    <<0, 0, 0, 4>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 5>>) ->\n    5;\nenumerated_avp(encode, 'Service-Type', 5) ->\n    <<0, 0, 0, 5>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 6>>) ->\n    6;\nenumerated_avp(encode, 'Service-Type', 6) ->\n    <<0, 0, 0, 6>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 7>>) ->\n    7;\nenumerated_avp(encode, 'Service-Type', 7) ->\n    <<0, 0, 0, 7>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 8>>) ->\n    8;\nenumerated_avp(encode, 'Service-Type', 8) ->\n    <<0, 0, 0, 8>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 9>>) ->\n    9;\nenumerated_avp(encode, 'Service-Type', 9) ->\n    <<0, 0, 0, 9>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 10>>) ->\n    10;\nenumerated_avp(encode, 'Service-Type', 10) ->\n    <<0, 0, 0, 10>>;\nenumerated_avp(decode, 'Service-Type',\n               <<0, 0, 0, 11>>) ->\n    11;\nenumerated_avp(encode, 'Service-Type', 11) ->\n    <<0, 0, 0, 11>>;\nenumerated_avp(decode, 'Login-Service',\n               <<0, 0, 0, 0>>) ->\n    0;\nenumerated_avp(encode, 'Login-Service', 0) ->\n    <<0, 0, 0, 0>>;\nenumerated_avp(decode, 'Login-Service',\n               <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'Login-Service', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'Login-Service',\n               <<0, 0, 0, 2>>) ->\n    2;\nenumerated_avp(encode, 'Login-Service', 2) ->\n    <<0, 0, 0, 2>>;\nenumerated_avp(decode, 'Login-Service',\n               <<0, 0, 0, 3>>) ->\n    3;\nenumerated_avp(encode, 'Login-Service', 3) ->\n    <<0, 0, 0, 3>>;\nenumerated_avp(decode, 'Login-Service',\n               <<0, 0, 0, 4>>) ->\n    4;\nenumerated_avp(encode, 'Login-Service', 4) ->\n    <<0, 0, 0, 4>>;\nenumerated_avp(decode, 'Login-Service',\n               <<0, 0, 0, 5>>) ->\n    5;\nenumerated_avp(encode, 'Login-Service', 5) ->\n    <<0, 0, 0, 5>>;\nenumerated_avp(decode, 'Login-Service',\n               <<0, 0, 0, 6>>) ->\n    6;\nenumerated_avp(encode, 'Login-Service', 6) ->\n    <<0, 0, 0, 6>>;\nenumerated_avp(decode, 'Login-Service',\n               <<0, 0, 0, 7>>) ->\n    7;\nenumerated_avp(encode, 'Login-Service', 7) ->\n    <<0, 0, 0, 7>>;\nenumerated_avp(decode, 'Login-Service',\n               <<0, 0, 0, 8>>) ->\n    8;\nenumerated_avp(encode, 'Login-Service', 8) ->\n    <<0, 0, 0, 8>>;\nenumerated_avp(decode, 'ARAP-Zone-Access',\n               <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'ARAP-Zone-Access', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'ARAP-Zone-Access',\n               <<0, 0, 0, 2>>) ->\n    2;\nenumerated_avp(encode, 'ARAP-Zone-Access', 2) ->\n    <<0, 0, 0, 2>>;\nenumerated_avp(decode, 'ARAP-Zone-Access',\n               <<0, 0, 0, 3>>) ->\n    3;\nenumerated_avp(encode, 'ARAP-Zone-Access', 3) ->\n    <<0, 0, 0, 3>>;\nenumerated_avp(decode, 'ARAP-Zone-Access',\n               <<0, 0, 0, 4>>) ->\n    4;\nenumerated_avp(encode, 'ARAP-Zone-Access', 4) ->\n    <<0, 0, 0, 4>>;\nenumerated_avp(decode, 'CHAP-Algorithm',\n               <<0, 0, 0, 5>>) ->\n    5;\nenumerated_avp(encode, 'CHAP-Algorithm', 5) ->\n    <<0, 0, 0, 5>>;\nenumerated_avp(decode, 'Framed-Compression',\n               <<0, 0, 0, 0>>) ->\n    0;\nenumerated_avp(encode, 'Framed-Compression', 0) ->\n    <<0, 0, 0, 0>>;\nenumerated_avp(decode, 'Framed-Compression',\n               <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'Framed-Compression', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'Framed-Compression',\n               <<0, 0, 0, 2>>) ->\n    2;\nenumerated_avp(encode, 'Framed-Compression', 2) ->\n    <<0, 0, 0, 2>>;\nenumerated_avp(decode, 'Framed-Compression',\n               <<0, 0, 0, 3>>) ->\n    3;\nenumerated_avp(encode, 'Framed-Compression', 3) ->\n    <<0, 0, 0, 3>>;\nenumerated_avp(decode, 'Framed-Protocol',\n               <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'Framed-Protocol', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'Framed-Protocol',\n               <<0, 0, 0, 2>>) ->\n    2;\nenumerated_avp(encode, 'Framed-Protocol', 2) ->\n    <<0, 0, 0, 2>>;\nenumerated_avp(decode, 'Framed-Protocol',\n               <<0, 0, 0, 3>>) ->\n    3;\nenumerated_avp(encode, 'Framed-Protocol', 3) ->\n    <<0, 0, 0, 3>>;\nenumerated_avp(decode, 'Framed-Protocol',\n               <<0, 0, 0, 4>>) ->\n    4;\nenumerated_avp(encode, 'Framed-Protocol', 4) ->\n    <<0, 0, 0, 4>>;\nenumerated_avp(decode, 'Framed-Protocol',\n               <<0, 0, 0, 5>>) ->\n    5;\nenumerated_avp(encode, 'Framed-Protocol', 5) ->\n    <<0, 0, 0, 5>>;\nenumerated_avp(decode, 'Framed-Protocol',\n               <<0, 0, 0, 6>>) ->\n    6;\nenumerated_avp(encode, 'Framed-Protocol', 6) ->\n    <<0, 0, 0, 6>>;\nenumerated_avp(decode, 'Framed-Protocol',\n               <<0, 0, 0, 7>>) ->\n    7;\nenumerated_avp(encode, 'Framed-Protocol', 7) ->\n    <<0, 0, 0, 7>>;\nenumerated_avp(decode, 'Framed-Routing',\n               <<0, 0, 0, 0>>) ->\n    0;\nenumerated_avp(encode, 'Framed-Routing', 0) ->\n    <<0, 0, 0, 0>>;\nenumerated_avp(decode, 'Framed-Routing',\n               <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'Framed-Routing', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'Framed-Routing',\n               <<0, 0, 0, 2>>) ->\n    2;\nenumerated_avp(encode, 'Framed-Routing', 2) ->\n    <<0, 0, 0, 2>>;\nenumerated_avp(decode, 'Framed-Routing',\n               <<0, 0, 0, 3>>) ->\n    3;\nenumerated_avp(encode, 'Framed-Routing', 3) ->\n    <<0, 0, 0, 3>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 0>>) ->\n    0;\nenumerated_avp(encode, 'NAS-Port-Type', 0) ->\n    <<0, 0, 0, 0>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'NAS-Port-Type', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 2>>) ->\n    2;\nenumerated_avp(encode, 'NAS-Port-Type', 2) ->\n    <<0, 0, 0, 2>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 3>>) ->\n    3;\nenumerated_avp(encode, 'NAS-Port-Type', 3) ->\n    <<0, 0, 0, 3>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 4>>) ->\n    4;\nenumerated_avp(encode, 'NAS-Port-Type', 4) ->\n    <<0, 0, 0, 4>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 5>>) ->\n    5;\nenumerated_avp(encode, 'NAS-Port-Type', 5) ->\n    <<0, 0, 0, 5>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 6>>) ->\n    6;\nenumerated_avp(encode, 'NAS-Port-Type', 6) ->\n    <<0, 0, 0, 6>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 7>>) ->\n    7;\nenumerated_avp(encode, 'NAS-Port-Type', 7) ->\n    <<0, 0, 0, 7>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 8>>) ->\n    8;\nenumerated_avp(encode, 'NAS-Port-Type', 8) ->\n    <<0, 0, 0, 8>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 9>>) ->\n    9;\nenumerated_avp(encode, 'NAS-Port-Type', 9) ->\n    <<0, 0, 0, 9>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 10>>) ->\n    10;\nenumerated_avp(encode, 'NAS-Port-Type', 10) ->\n    <<0, 0, 0, 10>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 11>>) ->\n    11;\nenumerated_avp(encode, 'NAS-Port-Type', 11) ->\n    <<0, 0, 0, 11>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 12>>) ->\n    12;\nenumerated_avp(encode, 'NAS-Port-Type', 12) ->\n    <<0, 0, 0, 12>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 13>>) ->\n    13;\nenumerated_avp(encode, 'NAS-Port-Type', 13) ->\n    <<0, 0, 0, 13>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 14>>) ->\n    14;\nenumerated_avp(encode, 'NAS-Port-Type', 14) ->\n    <<0, 0, 0, 14>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 15>>) ->\n    15;\nenumerated_avp(encode, 'NAS-Port-Type', 15) ->\n    <<0, 0, 0, 15>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 16>>) ->\n    16;\nenumerated_avp(encode, 'NAS-Port-Type', 16) ->\n    <<0, 0, 0, 16>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 17>>) ->\n    17;\nenumerated_avp(encode, 'NAS-Port-Type', 17) ->\n    <<0, 0, 0, 17>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 18>>) ->\n    18;\nenumerated_avp(encode, 'NAS-Port-Type', 18) ->\n    <<0, 0, 0, 18>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 19>>) ->\n    19;\nenumerated_avp(encode, 'NAS-Port-Type', 19) ->\n    <<0, 0, 0, 19>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 20>>) ->\n    20;\nenumerated_avp(encode, 'NAS-Port-Type', 20) ->\n    <<0, 0, 0, 20>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 21>>) ->\n    21;\nenumerated_avp(encode, 'NAS-Port-Type', 21) ->\n    <<0, 0, 0, 21>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 22>>) ->\n    22;\nenumerated_avp(encode, 'NAS-Port-Type', 22) ->\n    <<0, 0, 0, 22>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 23>>) ->\n    23;\nenumerated_avp(encode, 'NAS-Port-Type', 23) ->\n    <<0, 0, 0, 23>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 24>>) ->\n    24;\nenumerated_avp(encode, 'NAS-Port-Type', 24) ->\n    <<0, 0, 0, 24>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 25>>) ->\n    25;\nenumerated_avp(encode, 'NAS-Port-Type', 25) ->\n    <<0, 0, 0, 25>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 26>>) ->\n    26;\nenumerated_avp(encode, 'NAS-Port-Type', 26) ->\n    <<0, 0, 0, 26>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 27>>) ->\n    27;\nenumerated_avp(encode, 'NAS-Port-Type', 27) ->\n    <<0, 0, 0, 27>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 28>>) ->\n    28;\nenumerated_avp(encode, 'NAS-Port-Type', 28) ->\n    <<0, 0, 0, 28>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 29>>) ->\n    29;\nenumerated_avp(encode, 'NAS-Port-Type', 29) ->\n    <<0, 0, 0, 29>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 30>>) ->\n    30;\nenumerated_avp(encode, 'NAS-Port-Type', 30) ->\n    <<0, 0, 0, 30>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 31>>) ->\n    31;\nenumerated_avp(encode, 'NAS-Port-Type', 31) ->\n    <<0, 0, 0, 31>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 32>>) ->\n    32;\nenumerated_avp(encode, 'NAS-Port-Type', 32) ->\n    <<0, 0, 0, 32>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 33>>) ->\n    33;\nenumerated_avp(encode, 'NAS-Port-Type', 33) ->\n    <<0, 0, 0, 33>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 34>>) ->\n    34;\nenumerated_avp(encode, 'NAS-Port-Type', 34) ->\n    <<0, 0, 0, 34>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 35>>) ->\n    35;\nenumerated_avp(encode, 'NAS-Port-Type', 35) ->\n    <<0, 0, 0, 35>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 36>>) ->\n    36;\nenumerated_avp(encode, 'NAS-Port-Type', 36) ->\n    <<0, 0, 0, 36>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 37>>) ->\n    37;\nenumerated_avp(encode, 'NAS-Port-Type', 37) ->\n    <<0, 0, 0, 37>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 38>>) ->\n    38;\nenumerated_avp(encode, 'NAS-Port-Type', 38) ->\n    <<0, 0, 0, 38>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 39>>) ->\n    39;\nenumerated_avp(encode, 'NAS-Port-Type', 39) ->\n    <<0, 0, 0, 39>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 40>>) ->\n    40;\nenumerated_avp(encode, 'NAS-Port-Type', 40) ->\n    <<0, 0, 0, 40>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 41>>) ->\n    41;\nenumerated_avp(encode, 'NAS-Port-Type', 41) ->\n    <<0, 0, 0, 41>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 42>>) ->\n    42;\nenumerated_avp(encode, 'NAS-Port-Type', 42) ->\n    <<0, 0, 0, 42>>;\nenumerated_avp(decode, 'NAS-Port-Type',\n               <<0, 0, 0, 43>>) ->\n    43;\nenumerated_avp(encode, 'NAS-Port-Type', 43) ->\n    <<0, 0, 0, 43>>;\nenumerated_avp(decode, 'Origin-AAA-Protocol',\n               <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'Origin-AAA-Protocol', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'Prompt', <<0, 0, 0, 0>>) -> 0;\nenumerated_avp(encode, 'Prompt', 0) -> <<0, 0, 0, 0>>;\nenumerated_avp(decode, 'Prompt', <<0, 0, 0, 1>>) -> 1;\nenumerated_avp(encode, 'Prompt', 1) -> <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 2>>) ->\n    2;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 2) ->\n    <<0, 0, 0, 2>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 3>>) ->\n    3;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 3) ->\n    <<0, 0, 0, 3>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 4>>) ->\n    4;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 4) ->\n    <<0, 0, 0, 4>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 5>>) ->\n    5;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 5) ->\n    <<0, 0, 0, 5>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 6>>) ->\n    6;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 6) ->\n    <<0, 0, 0, 6>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 7>>) ->\n    7;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 7) ->\n    <<0, 0, 0, 7>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 8>>) ->\n    8;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 8) ->\n    <<0, 0, 0, 8>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 9>>) ->\n    9;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 9) ->\n    <<0, 0, 0, 9>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 10>>) ->\n    10;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 10) ->\n    <<0, 0, 0, 10>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 11>>) ->\n    11;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 11) ->\n    <<0, 0, 0, 11>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 12>>) ->\n    12;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 12) ->\n    <<0, 0, 0, 12>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 13>>) ->\n    13;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 13) ->\n    <<0, 0, 0, 13>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 14>>) ->\n    14;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 14) ->\n    <<0, 0, 0, 14>>;\nenumerated_avp(decode, 'Tunnel-Medium-Type',\n               <<0, 0, 0, 15>>) ->\n    15;\nenumerated_avp(encode, 'Tunnel-Medium-Type', 15) ->\n    <<0, 0, 0, 15>>;\nenumerated_avp(decode, 'Tunnel-Type', <<0, 0, 0, 1>>) ->\n    1;\nenumerated_avp(encode, 'Tunnel-Type', 1) ->\n    <<0, 0, 0, 1>>;\nenumerated_avp(decode, 'Tunnel-Type', <<0, 0, 0, 2>>) ->\n    2;\nenumerated_avp(encode, 'Tunnel-Type', 2) ->\n    <<0, 0, 0, 2>>;\nenumerated_avp(decode, 'Tunnel-Type', <<0, 0, 0, 3>>) ->\n    3;\nenumerated_avp(encode, 'Tunnel-Type', 3) ->\n    <<0, 0, 0, 3>>;\nenumerated_avp(decode, 'Tunnel-Type', <<0, 0, 0, 4>>) ->\n    4;\nenumerated_avp(encode, 'Tunnel-Type', 4) ->\n    <<0, 0, 0, 4>>;\nenumerated_avp(decode, 'Tunnel-Type', <<0, 0, 0, 5>>) ->\n    5;\nenumerated_avp(encode, 'Tunnel-Type', 5) ->\n    <<0, 0, 0, 5>>;\nenumerated_avp(decode, 'Tunnel-Type', <<0, 0, 0, 6>>) ->\n    6;\nenumerated_avp(encode, 'Tunnel-Type', 6) ->\n    <<0, 0, 0, 6>>;\nenumerated_avp(decode, 'Tunnel-Type', <<0, 0, 0, 7>>) ->\n    7;\nenumerated_avp(encode, 'Tunnel-Type', 7) ->\n    <<0, 0, 0, 7>>;\nenumerated_avp(decode, 'Tunnel-Type', <<0, 0, 0, 8>>) ->\n    8;\nenumerated_avp(encode, 'Tunnel-Type', 8) ->\n    <<0, 0, 0, 8>>;\nenumerated_avp(decode, 'Tunnel-Type', <<0, 0, 0, 9>>) ->\n    9;\nenumerated_avp(encode, 'Tunnel-Type', 9) ->\n    <<0, 0, 0, 9>>;\nenumerated_avp(decode, 'Tunnel-Type',\n               <<0, 0, 0, 10>>) ->\n    10;\nenumerated_avp(encode, 'Tunnel-Type', 10) ->\n    <<0, 0, 0, 10>>;\nenumerated_avp(decode, 'Tunnel-Type',\n               <<0, 0, 0, 11>>) ->\n    11;\nenumerated_avp(encode, 'Tunnel-Type', 11) ->\n    <<0, 0, 0, 11>>;\nenumerated_avp(decode, 'Tunnel-Type',\n               <<0, 0, 0, 12>>) ->\n    12;\nenumerated_avp(encode, 'Tunnel-Type', 12) ->\n    <<0, 0, 0, 12>>;\nenumerated_avp(decode, 'Tunnel-Type',\n               <<0, 0, 0, 13>>) ->\n    13;\nenumerated_avp(encode, 'Tunnel-Type', 13) ->\n    <<0, 0, 0, 13>>;\nenumerated_avp(_, _, _) -> erlang:error(badarg).\n\nempty_value('CHAP-Auth', Opts) ->\n    empty_group('CHAP-Auth', Opts);\nempty_value('Tunneling', Opts) ->\n    empty_group('Tunneling', Opts);\nempty_value('Proxy-Info', Opts) ->\n    empty_group('Proxy-Info', Opts);\nempty_value('Failed-AVP', Opts) ->\n    empty_group('Failed-AVP', Opts);\nempty_value('Experimental-Result', Opts) ->\n    empty_group('Experimental-Result', Opts);\nempty_value('Vendor-Specific-Application-Id', Opts) ->\n    empty_group('Vendor-Specific-Application-Id', Opts);\nempty_value('Service-Type', _) -> <<0, 0, 0, 0>>;\nempty_value('Login-Service', _) -> <<0, 0, 0, 0>>;\nempty_value('ARAP-Zone-Access', _) -> <<0, 0, 0, 0>>;\nempty_value('CHAP-Algorithm', _) -> <<0, 0, 0, 0>>;\nempty_value('Framed-Compression', _) -> <<0, 0, 0, 0>>;\nempty_value('Framed-Protocol', _) -> <<0, 0, 0, 0>>;\nempty_value('Framed-Routing', _) -> <<0, 0, 0, 0>>;\nempty_value('NAS-Port-Type', _) -> <<0, 0, 0, 0>>;\nempty_value('Origin-AAA-Protocol', _) -> <<0, 0, 0, 0>>;\nempty_value('Prompt', _) -> <<0, 0, 0, 0>>;\nempty_value('Tunnel-Medium-Type', _) -> <<0, 0, 0, 0>>;\nempty_value('Tunnel-Type', _) -> <<0, 0, 0, 0>>;\nempty_value('Disconnect-Cause', _) -> <<0, 0, 0, 0>>;\nempty_value('Redirect-Host-Usage', _) -> <<0, 0, 0, 0>>;\nempty_value('Auth-Request-Type', _) -> <<0, 0, 0, 0>>;\nempty_value('Auth-Session-State', _) -> <<0, 0, 0, 0>>;\nempty_value('Re-Auth-Request-Type', _) ->\n    <<0, 0, 0, 0>>;\nempty_value('Termination-Cause', _) -> <<0, 0, 0, 0>>;\nempty_value('Session-Server-Failover', _) ->\n    <<0, 0, 0, 0>>;\nempty_value('Accounting-Record-Type', _) ->\n    <<0, 0, 0, 0>>;\nempty_value('Accounting-Realtime-Required', _) ->\n    <<0, 0, 0, 0>>;\nempty_value(Name, Opts) -> empty(Name, Opts).\n\ndict() ->\n    [1,\n     {avp_types,\n      [{\"ARAP-Challenge-Response\", 84, \"OctetString\", \"MPV\"},\n       {\"ARAP-Features\", 71, \"OctetString\", \"MVP\"},\n       {\"ARAP-Password\", 70, \"OctetString\", \"MPV\"},\n       {\"ARAP-Security\", 73, \"Unsigned32\", \"MPV\"},\n       {\"ARAP-Security-Data\", 74, \"OctetString\", \"MV\"},\n       {\"ARAP-Zone-Access\", 72, \"Enumerated\", \"MVP\"},\n       {\"CHAP-Algorithm\", 403, \"Enumerated\", \"MPV\"},\n       {\"CHAP-Auth\", 402, \"Grouped\", \"MPV\"},\n       {\"CHAP-Challenge\", 60, \"OctetString\", \"MPV\"},\n       {\"CHAP-Ident\", 404, \"OctetString\", \"MPV\"},\n       {\"CHAP-Response\", 405, \"OctetString\", \"MPV\"},\n       {\"Callback-Id\", 20, \"UTF8String\", \"MVP\"},\n       {\"Callback-Number\", 19, \"UTF8String\", \"MVP\"},\n       {\"Called-Station-Id\", 30, \"UTF8String\", \"MVP\"},\n       {\"Calling-Station-Id\", 31, \"UTF8String\", \"MVP\"},\n       {\"Configuration-Token\", 78, \"OctetString\", \"MVP\"},\n       {\"Connect-Info\", 77, \"UTF8String\", \"MVP\"},\n       {\"Filter-Id\", 11, \"UTF8String\", \"MVP\"},\n       {\"Framed-Appletalk-Link\", 37, \"Unsigned32\", \"MVP\"},\n       {\"Framed-Appletalk-Network\", 38, \"Unsigned32\", \"MVP\"},\n       {\"Framed-Appletalk-Zone\", 39, \"OctetString\", \"MVP\"},\n       {\"Framed-Compression\", 13, \"Enumerated\", \"MVP\"},\n       {\"Framed-IP-Address\", 8, \"OctetString\", \"MVP\"},\n       {\"Framed-IP-Netmask\", 9, \"OctetString\", \"MVP\"},\n       {\"Framed-IPX-Network\", 23, \"UTF8String\", \"MVP\"},\n       {\"Framed-IPv6-Pool\", 100, \"OctetString\", \"MVP\"},\n       {\"Framed-IPv6-Prefix\", 97, \"OctetString\", \"MVP\"},\n       {\"Framed-IPv6-Route\", 99, \"UTF8String\", \"MVP\"},\n       {\"Framed-Interface-Id\", 96, \"Unsigned64\", \"MVP\"},\n       {\"Framed-MTU\", 12, \"Unsigned32\", \"MVP\"},\n       {\"Framed-Pool\", 88, \"OctetString\", \"MVP\"},\n       {\"Framed-Protocol\", 7, \"Enumerated\", \"MVP\"},\n       {\"Framed-Route\", 22, \"UTF8String\", \"MVP\"},\n       {\"Framed-Routing\", 10, \"Enumerated\", \"MVP\"},\n       {\"Idle-Timeout\", 28, \"Unsigned32\", \"MVP\"},\n       {\"Login-IP-Host\", 14, \"OctetString\", \"MVP\"},\n       {\"Login-IPv6-Host\", 98, \"OctetString\", \"MVP\"},\n       {\"Login-LAT-Group\", 36, \"OctetString\", \"MVP\"},\n       {\"Login-LAT-Node\", 35, \"OctetString\", \"MVP\"},\n       {\"Login-LAT-Port\", 63, \"OctetString\", \"MVP\"},\n       {\"Login-LAT-Service\", 34, \"OctetString\", \"MVP\"},\n       {\"Login-Service\", 15, \"Enumerated\", \"MVP\"},\n       {\"Login-TCP-Port\", 16, \"Unsigned32\", \"MVP\"},\n       {\"NAS-Filter-Rule\", 400, \"IPFilterRule\", \"MVP\"},\n       {\"NAS-IP-Address\", 4, \"OctetString\", \"MVP\"},\n       {\"NAS-IPv6-Address\", 95, \"OctetString\", \"MVP\"},\n       {\"NAS-Identifier\", 32, \"UTF8String\", \"MVP\"},\n       {\"NAS-Port\", 5, \"Unsigned32\", \"MVP\"},\n       {\"NAS-Port-Id\", 87, \"UTF8String\", \"MVP\"},\n       {\"NAS-Port-Type\", 61, \"Enumerated\", \"MVP\"},\n       {\"Origin-AAA-Protocol\", 408, \"Enumerated\", \"MVP\"},\n       {\"Originating-Line-Info\", 94, \"OctetString\", \"MVP\"},\n       {\"Password-Retry\", 75, \"Unsigned32\", \"MPV\"},\n       {\"Port-Limit\", 62, \"Unsigned32\", \"MVP\"},\n       {\"Prompt\", 76, \"Enumerated\", \"MPV\"},\n       {\"QoS-Filter-Rule\", 407, \"QoSFilterRule\", \"MVP\"},\n       {\"Reply-Message\", 18, \"UTF8String\", \"MVP\"},\n       {\"Service-Type\", 6, \"Enumerated\", \"MVP\"},\n       {\"State\", 24, \"OctetString\", \"MVP\"},\n       {\"Tunnel-Assignment-Id\", 82, \"OctetString\", \"MVP\"},\n       {\"Tunnel-Client-Auth-Id\", 90, \"UTF8String\", \"MVP\"},\n       {\"Tunnel-Client-Endpoint\", 66, \"UTF8String\", \"MVP\"},\n       {\"Tunnel-Medium-Type\", 65, \"Enumerated\", \"MVP\"},\n       {\"Tunnel-Password\", 69, \"OctetString\", \"MVP\"},\n       {\"Tunnel-Preference\", 83, \"Unsigned32\", \"MVP\"},\n       {\"Tunnel-Private-Group-Id\", 81, \"OctetString\", \"MVP\"},\n       {\"Tunnel-Server-Auth-Id\", 91, \"UTF8String\", \"MVP\"},\n       {\"Tunnel-Server-Endpoint\", 67, \"UTF8String\", \"MVP\"},\n       {\"Tunnel-Type\", 64, \"Enumerated\", \"MVP\"},\n       {\"Tunneling\", 401, \"Grouped\", \"MVP\"},\n       {\"User-Password\", 2, \"OctetString\", \"MPV\"}]},\n     {avp_vendor_id, []},\n     {codecs, []},\n     {command_codes,\n      [{265, \"AAR\", \"AAA\"},\n       {280, \"DWR\", \"DWA\"},\n       {282, \"DPR\", \"DPA\"},\n       {271, \"ACR\", \"ACA\"},\n       {257, \"CER\", \"CEA\"},\n       {258, \"RAR\", \"RAA\"},\n       {274, \"ASR\", \"ASA\"},\n       {275, \"STR\", \"STA\"}]},\n     {custom_types, []},\n     {define, []},\n     {enum,\n      [{\"Service-Type\",\n        [{\"LOGIN\", 1},\n         {\"FRAMED\", 2},\n         {\"CALLBACK_LOGIN\", 3},\n         {\"CALLBACK_FRAMED\", 4},\n         {\"OUTBOUND\", 5},\n         {\"ADMINISTRATIVE\", 6},\n         {\"NAS_PROMPT\", 7},\n         {\"AUTHENTICATE_ONLY\", 8},\n         {\"CALLBACK_NAS_PROMPT\", 9},\n         {\"CALL_CHECK\", 10},\n         {\"CALLBACK_ADMINISTRATIVE\", 11}]},\n       {\"Login-Service\",\n        [{\"TELNET\", 0},\n         {\"RLOGIN\", 1},\n         {\"TCP_CLEAR\", 2},\n         {\"PORTMASTER\", 3},\n         {\"LAT\", 4},\n         {\"X25_PAD\", 5},\n         {\"X25_T3POS\", 6},\n         {\"UNASSIGNED\", 7},\n         {\"TCP_CLEAR_QUIET\", 8}]},\n       {\"ARAP-Zone-Access\",\n        [{\"ONLY_ALLOW_ACCESS_TO_DEFAULT_ZONE\", 1},\n         {\"USE_ZONE_FILTER_INCLUSIVELY\", 2},\n         {\"NOT_USED\", 3},\n         {\"USE_ZONE_FILTER_EXCLUSIVELY\", 4}]},\n       {\"CHAP-Algorithm\", [{\"CHAP_MD5\", 5}]},\n       {\"Framed-Compression\",\n        [{\"NONE\", 0},\n         {\"VJ_TCP_IP_HEADER_COMPRESSION\", 1},\n         {\"IPX_HEADER_COMPRESSION\", 2},\n         {\"STAC_LZS_COMPRESSION\", 3}]},\n       {\"Framed-Protocol\",\n        [{\"PPP\", 1},\n         {\"SLIP\", 2},\n         {\"APPLETALK_REMOTE_ACCESS_PROTOCOL__ARAP\", 3},\n         {\"GANDALF_PROPRIETARY_SINGLELINK_MULTILINK_PROT\"\n          \"OCOL\",\n          4},\n         {\"XYLOGICS_PROPRIETARY_IPX_SLIP\", 5},\n         {\"X_75_SYNCHRONOUS\", 6},\n         {\"GPRS_PDP_CONTEXT\", 7}]},\n       {\"Framed-Routing\",\n        [{\"NONE\", 0},\n         {\"SEND_ROUTING_PACKETS\", 1},\n         {\"LISTEN_FOR_ROUTING_PACKETS\", 2},\n         {\"SEND_AND_LISTEN\", 3}]},\n       {\"NAS-Port-Type\",\n        [{\"ASYNC\", 0},\n         {\"SYNC\", 1},\n         {\"ISDN_SYNC\", 2},\n         {\"ISDN_ASYNC_V_120\", 3},\n         {\"ISDN_ASYNC_V_110\", 4},\n         {\"VIRTUAL\", 5},\n         {\"PIAFS\", 6},\n         {\"HDLC_CLEAR_CHANNEL\", 7},\n         {\"X_25\", 8},\n         {\"X_75\", 9},\n         {\"G_3_FAX\", 10},\n         {\"SDSL___SYMMETRIC_DSL\", 11},\n         {\"ADSL_CAP___ASYMMETRIC_DSL\", 12},\n         {\"ADSL_DMT___ASYMMETRIC_DSL\", 13},\n         {\"IDSL___ISDN_DIGITAL_SUBSCRIBER_LINE\", 14},\n         {\"ETHERNET\", 15},\n         {\"XDSL___DIGITAL_SUBSCRIBER_LINE_OF_UNKNOWN_TYPE\", 16},\n         {\"CABLE\", 17},\n         {\"WIRELESS___OTHER\", 18},\n         {\"WIRELESS___IEEE_802_11\", 19},\n         {\"TOKEN_RING\", 20},\n         {\"FDDI\", 21},\n         {\"WIRELESS___CDMA2000\", 22},\n         {\"WIRELESS___UMTS\", 23},\n         {\"WIRELESS___1X_EV\", 24},\n         {\"IAAP\", 25},\n         {\"FTTP___FIBER_TO_THE_PREMISES\", 26},\n         {\"WIRELESS___IEEE_802_16\", 27},\n         {\"WIRELESS___IEEE_802_20\", 28},\n         {\"WIRELESS___IEEE_802_22\", 29},\n         {\"PPPOA___PPP_OVER_ATM\", 30},\n         {\"PPPOEOA___PPP_OVER_ETHERNET_OVER_ATM\", 31},\n         {\"PPPOEOE___PPP_OVER_ETHERNET_OVER_ETHERNET\", 32},\n         {\"PPPOEOVLAN___PPP_OVER_ETHERNET_OVER_VLAN\", 33},\n         {\"PPPOEOQINQ___PPP_OVER_ETHERNET_OVER_IEEE_802_\"\n          \"1QINQ\",\n          34},\n         {\"XPON___PASSIVE_OPTICAL_NETWORK\", 35},\n         {\"WIRELESS___XGP\", 36},\n         {\"WIMAX_PRE_RELEASE_8_IWK_FUNCTION\", 37},\n         {\"WIMAX_WIFI_IWK__WIMAX_WIFI_INTERWORKING\", 38},\n         {\"WIMAX_SFF__SIGNALING_FORWARDING_FUNCTION_FOR_\"\n          \"LTE_3GPP2\",\n          39},\n         {\"WIMAX_HA_LMA__WIMAX_HA_AND_OR_LMA_FUNCTION\", 40},\n         {\"WIMAX_DHCP__WIMAX_DCHP_SERVICE\", 41},\n         {\"WIMAX_LBS__WIMAX_LOCATION_BASED_SERVICE\", 42},\n         {\"WIMAX_WVS__WIMAX_VOICE_SERVICE\", 43}]},\n       {\"Origin-AAA-Protocol\", [{\"RADIUS\", 1}]},\n       {\"Prompt\", [{\"NO_ECHO\", 0}, {\"ECHO\", 1}]},\n       {\"Tunnel-Medium-Type\",\n        [{\"IPV4\", 1},\n         {\"IPV6\", 2},\n         {\"NSAP\", 3},\n         {\"HDLC\", 4},\n         {\"BBN_1822\", 5},\n         {\"EIGHT_OH_TWO\", 6},\n         {\"E_163_POTS\", 7},\n         {\"E_164_SMDS\", 8},\n         {\"F_69_TELEX\", 9},\n         {\"X_121_FRAME_RELAY\", 10},\n         {\"IPX\", 11},\n         {\"APPLETALK\", 12},\n         {\"DECNET_FOUR\", 13},\n         {\"BANYAN_VINES\", 14},\n         {\"E_164_NSAP\", 15}]},\n       {\"Tunnel-Type\",\n        [{\"PPTP\", 1},\n         {\"L2F\", 2},\n         {\"L2TP\", 3},\n         {\"ATMP\", 4},\n         {\"VTP\", 5},\n         {\"AH\", 6},\n         {\"IP_IP\", 7},\n         {\"MIN_IP_IP\", 8},\n         {\"ESP\", 9},\n         {\"GRE\", 10},\n         {\"DVS\", 11},\n         {\"IP_IN_IP\", 12},\n         {\"VLAN\", 13}]}]},\n     {grouped,\n      [{\"CHAP-Auth\",\n        402,\n        [],\n        [{\"CHAP-Algorithm\"},\n         {\"CHAP-Ident\"},\n         [\"CHAP-Response\"],\n         {'*', [\"AVP\"]}]},\n       {\"Tunneling\",\n        401,\n        [],\n        [{\"Tunnel-Type\"},\n         {\"Tunnel-Medium-Type\"},\n         {\"Tunnel-Client-Endpoint\"},\n         {\"Tunnel-Server-Endpoint\"},\n         [\"Tunnel-Preference\"],\n         [\"Tunnel-Client-Auth-Id\"],\n         [\"Tunnel-Server-Auth-Id\"],\n         [\"Tunnel-Assignment-Id\"],\n         [\"Tunnel-Password\"],\n         [\"Tunnel-Private-Group-Id\"]]}]},\n     {id, 0},\n     {import_avps,\n      [{diameter_gen_base_rfc6733,\n        [{\"Accounting-Realtime-Required\",\n          483,\n          \"Enumerated\",\n          \"M\"},\n         {\"Accounting-Record-Number\", 485, \"Unsigned32\", \"M\"},\n         {\"Accounting-Record-Type\", 480, \"Enumerated\", \"M\"},\n         {\"Accounting-Sub-Session-Id\", 287, \"Unsigned64\", \"M\"},\n         {\"Acct-Application-Id\", 259, \"Unsigned32\", \"M\"},\n         {\"Acct-Interim-Interval\", 85, \"Unsigned32\", \"M\"},\n         {\"Acct-Multi-Session-Id\", 50, \"UTF8String\", \"M\"},\n         {\"Acct-Session-Id\", 44, \"OctetString\", \"M\"},\n         {\"Auth-Application-Id\", 258, \"Unsigned32\", \"M\"},\n         {\"Auth-Grace-Period\", 276, \"Unsigned32\", \"M\"},\n         {\"Auth-Request-Type\", 274, \"Enumerated\", \"M\"},\n         {\"Auth-Session-State\", 277, \"Enumerated\", \"M\"},\n         {\"Authorization-Lifetime\", 291, \"Unsigned32\", \"M\"},\n         {\"Class\", 25, \"OctetString\", \"M\"},\n         {\"Destination-Host\", 293, \"DiameterIdentity\", \"M\"},\n         {\"Destination-Realm\", 283, \"DiameterIdentity\", \"M\"},\n         {\"Disconnect-Cause\", 273, \"Enumerated\", \"M\"},\n         {\"Error-Message\", 281, \"UTF8String\", []},\n         {\"Error-Reporting-Host\", 294, \"DiameterIdentity\", []},\n         {\"Event-Timestamp\", 55, \"Time\", \"M\"},\n         {\"Experimental-Result\", 297, \"Grouped\", \"M\"},\n         {\"Experimental-Result-Code\", 298, \"Unsigned32\", \"M\"},\n         {\"Failed-AVP\", 279, \"Grouped\", \"M\"},\n         {\"Firmware-Revision\", 267, \"Unsigned32\", []},\n         {\"Host-IP-Address\", 257, \"Address\", \"M\"},\n         {\"Inband-Security-Id\", 299, \"Unsigned32\", \"M\"},\n         {\"Multi-Round-Time-Out\", 272, \"Unsigned32\", \"M\"},\n         {\"Origin-Host\", 264, \"DiameterIdentity\", \"M\"},\n         {\"Origin-Realm\", 296, \"DiameterIdentity\", \"M\"},\n         {\"Origin-State-Id\", 278, \"Unsigned32\", \"M\"},\n         {\"Product-Name\", 269, \"UTF8String\", []},\n         {\"Proxy-Host\", 280, \"DiameterIdentity\", \"M\"},\n         {\"Proxy-Info\", 284, \"Grouped\", \"M\"},\n         {\"Proxy-State\", 33, \"OctetString\", \"M\"},\n         {\"Re-Auth-Request-Type\", 285, \"Enumerated\", \"M\"},\n         {\"Redirect-Host\", 292, \"DiameterURI\", \"M\"},\n         {\"Redirect-Host-Usage\", 261, \"Enumerated\", \"M\"},\n         {\"Redirect-Max-Cache-Time\", 262, \"Unsigned32\", \"M\"},\n         {\"Result-Code\", 268, \"Unsigned32\", \"M\"},\n         {\"Route-Record\", 282, \"DiameterIdentity\", \"M\"},\n         {\"Session-Binding\", 270, \"Unsigned32\", \"M\"},\n         {\"Session-Id\", 263, \"UTF8String\", \"M\"},\n         {\"Session-Server-Failover\", 271, \"Enumerated\", \"M\"},\n         {\"Session-Timeout\", 27, \"Unsigned32\", \"M\"},\n         {\"Supported-Vendor-Id\", 265, \"Unsigned32\", \"M\"},\n         {\"Termination-Cause\", 295, \"Enumerated\", \"M\"},\n         {\"User-Name\", 1, \"UTF8String\", \"M\"},\n         {\"Vendor-Id\", 266, \"Unsigned32\", \"M\"},\n         {\"Vendor-Specific-Application-Id\",\n          260,\n          \"Grouped\",\n          \"M\"}]}]},\n     {import_enums,\n      [{diameter_gen_base_rfc6733,\n        [{\"Disconnect-Cause\",\n          [{\"REBOOTING\", 0},\n           {\"BUSY\", 1},\n           {\"DO_NOT_WANT_TO_TALK_TO_YOU\", 2}]},\n         {\"Redirect-Host-Usage\",\n          [{\"DONT_CACHE\", 0},\n           {\"ALL_SESSION\", 1},\n           {\"ALL_REALM\", 2},\n           {\"REALM_AND_APPLICATION\", 3},\n           {\"ALL_APPLICATION\", 4},\n           {\"ALL_HOST\", 5},\n           {\"ALL_USER\", 6}]},\n         {\"Auth-Request-Type\",\n          [{\"AUTHENTICATE_ONLY\", 1},\n           {\"AUTHORIZE_ONLY\", 2},\n           {\"AUTHORIZE_AUTHENTICATE\", 3}]},\n         {\"Auth-Session-State\",\n          [{\"STATE_MAINTAINED\", 0}, {\"NO_STATE_MAINTAINED\", 1}]},\n         {\"Re-Auth-Request-Type\",\n          [{\"AUTHORIZE_ONLY\", 0}, {\"AUTHORIZE_AUTHENTICATE\", 1}]},\n         {\"Termination-Cause\",\n          [{\"LOGOUT\", 1},\n           {\"SERVICE_NOT_PROVIDED\", 2},\n           {\"BAD_ANSWER\", 3},\n           {\"ADMINISTRATIVE\", 4},\n           {\"LINK_BROKEN\", 5},\n           {\"AUTH_EXPIRED\", 6},\n           {\"USER_MOVED\", 7},\n           {\"SESSION_TIMEOUT\", 8}]},\n         {\"Session-Server-Failover\",\n          [{\"REFUSE_SERVICE\", 0},\n           {\"TRY_AGAIN\", 1},\n           {\"ALLOW_SERVICE\", 2},\n           {\"TRY_AGAIN_ALLOW_SERVICE\", 3}]},\n         {\"Accounting-Record-Type\",\n          [{\"EVENT_RECORD\", 1},\n           {\"START_RECORD\", 2},\n           {\"INTERIM_RECORD\", 3},\n           {\"STOP_RECORD\", 4}]},\n         {\"Accounting-Realtime-Required\",\n          [{\"DELIVER_AND_GRANT\", 1},\n           {\"GRANT_AND_STORE\", 2},\n           {\"GRANT_AND_LOSE\", 3}]}]}]},\n     {import_groups,\n      [{diameter_gen_base_rfc6733,\n        [{\"Proxy-Info\",\n          284,\n          [],\n          [{\"Proxy-Host\"}, {\"Proxy-State\"}, {'*', [\"AVP\"]}]},\n         {\"Failed-AVP\", 279, [], [{'*', {\"AVP\"}}]},\n         {\"Experimental-Result\",\n          297,\n          [],\n          [{\"Vendor-Id\"}, {\"Experimental-Result-Code\"}]},\n         {\"Vendor-Specific-Application-Id\",\n          260,\n          [],\n          [{\"Vendor-Id\"},\n           [\"Auth-Application-Id\"],\n           [\"Acct-Application-Id\"]]}]}]},\n     {inherits, [{\"diameter_gen_base_rfc6733\", []}]},\n     {messages,\n      [{\"AAR\",\n        265,\n        ['REQ', 'PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Auth-Application-Id\"},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {\"Destination-Realm\"},\n         {\"Auth-Request-Type\"},\n         [\"Destination-Host\"],\n         [\"NAS-Identifier\"],\n         [\"NAS-IP-Address\"],\n         [\"NAS-IPv6-Address\"],\n         [\"NAS-Port\"],\n         [\"NAS-Port-Id\"],\n         [\"NAS-Port-Type\"],\n         [\"Origin-AAA-Protocol\"],\n         [\"Origin-State-Id\"],\n         [\"Port-Limit\"],\n         [\"User-Name\"],\n         [\"User-Password\"],\n         [\"Service-Type\"],\n         [\"State\"],\n         [\"Authorization-Lifetime\"],\n         [\"Auth-Grace-Period\"],\n         [\"Auth-Session-State\"],\n         [\"Callback-Number\"],\n         [\"Called-Station-Id\"],\n         [\"Calling-Station-Id\"],\n         [\"Originating-Line-Info\"],\n         [\"Connect-Info\"],\n         [\"CHAP-Auth\"],\n         [\"CHAP-Challenge\"],\n         {'*', [\"Framed-Compression\"]},\n         [\"Framed-Interface-Id\"],\n         [\"Framed-IP-Address\"],\n         {'*', [\"Framed-IPv6-Prefix\"]},\n         [\"Framed-IP-Netmask\"],\n         [\"Framed-MTU\"],\n         [\"Framed-Protocol\"],\n         [\"ARAP-Password\"],\n         [\"ARAP-Security\"],\n         {'*', [\"ARAP-Security-Data\"]},\n         {'*', [\"Login-IP-Host\"]},\n         {'*', [\"Login-IPv6-Host\"]},\n         [\"Login-LAT-Group\"],\n         [\"Login-LAT-Node\"],\n         [\"Login-LAT-Port\"],\n         [\"Login-LAT-Service\"],\n         {'*', [\"Tunneling\"]},\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"Route-Record\"]},\n         {'*', [\"AVP\"]}]},\n       {\"AAA\",\n        265,\n        ['PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Auth-Application-Id\"},\n         {\"Auth-Request-Type\"},\n         {\"Result-Code\"},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         [\"User-Name\"],\n         [\"Service-Type\"],\n         {'*', [\"Class\"]},\n         {'*', [\"Configuration-Token\"]},\n         [\"Acct-Interim-Interval\"],\n         [\"Error-Message\"],\n         [\"Error-Reporting-Host\"],\n         {'*', [\"Failed-AVP\"]},\n         [\"Idle-Timeout\"],\n         [\"Authorization-Lifetime\"],\n         [\"Auth-Grace-Period\"],\n         [\"Auth-Session-State\"],\n         [\"Re-Auth-Request-Type\"],\n         [\"Multi-Round-Time-Out\"],\n         [\"Session-Timeout\"],\n         [\"State\"],\n         {'*', [\"Reply-Message\"]},\n         [\"Origin-AAA-Protocol\"],\n         [\"Origin-State-Id\"],\n         {'*', [\"Filter-Id\"]},\n         [\"Password-Retry\"],\n         [\"Port-Limit\"],\n         [\"Prompt\"],\n         [\"ARAP-Challenge-Response\"],\n         [\"ARAP-Features\"],\n         [\"ARAP-Security\"],\n         {'*', [\"ARAP-Security-Data\"]},\n         [\"ARAP-Zone-Access\"],\n         [\"Callback-Id\"],\n         [\"Callback-Number\"],\n         [\"Framed-Appletalk-Link\"],\n         {'*', [\"Framed-Appletalk-Network\"]},\n         [\"Framed-Appletalk-Zone\"],\n         {'*', [\"Framed-Compression\"]},\n         [\"Framed-Interface-Id\"],\n         [\"Framed-IP-Address\"],\n         {'*', [\"Framed-IPv6-Prefix\"]},\n         [\"Framed-IPv6-Pool\"],\n         {'*', [\"Framed-IPv6-Route\"]},\n         [\"Framed-IP-Netmask\"],\n         {'*', [\"Framed-Route\"]},\n         [\"Framed-Pool\"],\n         [\"Framed-IPX-Network\"],\n         [\"Framed-MTU\"],\n         [\"Framed-Protocol\"],\n         [\"Framed-Routing\"],\n         {'*', [\"Login-IP-Host\"]},\n         {'*', [\"Login-IPv6-Host\"]},\n         [\"Login-LAT-Group\"],\n         [\"Login-LAT-Node\"],\n         [\"Login-LAT-Port\"],\n         [\"Login-LAT-Service\"],\n         [\"Login-Service\"],\n         [\"Login-TCP-Port\"],\n         {'*', [\"NAS-Filter-Rule\"]},\n         {'*', [\"QoS-Filter-Rule\"]},\n         {'*', [\"Tunneling\"]},\n         {'*', [\"Redirect-Host\"]},\n         [\"Redirect-Host-Usage\"],\n         [\"Redirect-Max-Cache-Time\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"AVP\"]}]},\n       {\"CER\",\n        257,\n        ['REQ'],\n        [],\n        [{\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {'*', {\"Host-IP-Address\"}},\n         {\"Vendor-Id\"},\n         {\"Product-Name\"},\n         [\"Origin-State-Id\"],\n         {'*', [\"Supported-Vendor-Id\"]},\n         {'*', [\"Auth-Application-Id\"]},\n         {'*', [\"Inband-Security-Id\"]},\n         {'*', [\"Acct-Application-Id\"]},\n         {'*', [\"Vendor-Specific-Application-Id\"]},\n         [\"Firmware-Revision\"],\n         {'*', [\"AVP\"]}]},\n       {\"CEA\",\n        257,\n        [],\n        [],\n        [{\"Result-Code\"},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {'*', {\"Host-IP-Address\"}},\n         {\"Vendor-Id\"},\n         {\"Product-Name\"},\n         [\"Origin-State-Id\"],\n         [\"Error-Message\"],\n         [\"Failed-AVP\"],\n         {'*', [\"Supported-Vendor-Id\"]},\n         {'*', [\"Auth-Application-Id\"]},\n         {'*', [\"Inband-Security-Id\"]},\n         {'*', [\"Acct-Application-Id\"]},\n         {'*', [\"Vendor-Specific-Application-Id\"]},\n         [\"Firmware-Revision\"],\n         {'*', [\"AVP\"]}]},\n       {\"DPR\",\n        282,\n        ['REQ'],\n        [],\n        [{\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {\"Disconnect-Cause\"},\n         {'*', [\"AVP\"]}]},\n       {\"DPA\",\n        282,\n        [],\n        [],\n        [{\"Result-Code\"},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         [\"Error-Message\"],\n         [\"Failed-AVP\"],\n         {'*', [\"AVP\"]}]},\n       {\"DWR\",\n        280,\n        ['REQ'],\n        [],\n        [{\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         [\"Origin-State-Id\"],\n         {'*', [\"AVP\"]}]},\n       {\"DWA\",\n        280,\n        [],\n        [],\n        [{\"Result-Code\"},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         [\"Error-Message\"],\n         [\"Failed-AVP\"],\n         [\"Origin-State-Id\"],\n         {'*', [\"AVP\"]}]},\n       {\"answer-message\",\n        -1,\n        ['ERR', 'PXY'],\n        [],\n        [{{0, 1}, {{\"Session-Id\"}}},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {\"Result-Code\"},\n         [\"Origin-State-Id\"],\n         [\"Error-Message\"],\n         [\"Error-Reporting-Host\"],\n         [\"Failed-AVP\"],\n         [\"Experimental-Result\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"AVP\"]}]},\n       {\"RAR\",\n        258,\n        ['REQ', 'PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {\"Destination-Realm\"},\n         {\"Destination-Host\"},\n         {\"Auth-Application-Id\"},\n         {\"Re-Auth-Request-Type\"},\n         [\"User-Name\"],\n         [\"Origin-State-Id\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"Route-Record\"]},\n         {'*', [\"AVP\"]}]},\n       {\"RAA\",\n        258,\n        ['PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Result-Code\"},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         [\"User-Name\"],\n         [\"Origin-State-Id\"],\n         [\"Error-Message\"],\n         [\"Error-Reporting-Host\"],\n         [\"Failed-AVP\"],\n         {'*', [\"Redirect-Host\"]},\n         [\"Redirect-Host-Usage\"],\n         [\"Redirect-Max-Cache-Time\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"AVP\"]}]},\n       {\"STR\",\n        275,\n        ['REQ', 'PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {\"Destination-Realm\"},\n         {\"Auth-Application-Id\"},\n         {\"Termination-Cause\"},\n         [\"User-Name\"],\n         [\"Destination-Host\"],\n         {'*', [\"Class\"]},\n         [\"Origin-State-Id\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"Route-Record\"]},\n         {'*', [\"AVP\"]}]},\n       {\"STA\",\n        275,\n        ['PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Result-Code\"},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         [\"User-Name\"],\n         {'*', [\"Class\"]},\n         [\"Error-Message\"],\n         [\"Error-Reporting-Host\"],\n         [\"Failed-AVP\"],\n         [\"Origin-State-Id\"],\n         {'*', [\"Redirect-Host\"]},\n         [\"Redirect-Host-Usage\"],\n         [\"Redirect-Max-Cache-Time\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"AVP\"]}]},\n       {\"ASR\",\n        274,\n        ['REQ', 'PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {\"Destination-Realm\"},\n         {\"Destination-Host\"},\n         {\"Auth-Application-Id\"},\n         [\"User-Name\"],\n         [\"Origin-State-Id\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"Route-Record\"]},\n         {'*', [\"AVP\"]}]},\n       {\"ASA\",\n        274,\n        ['PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Result-Code\"},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         [\"User-Name\"],\n         [\"Origin-State-Id\"],\n         [\"Error-Message\"],\n         [\"Error-Reporting-Host\"],\n         [\"Failed-AVP\"],\n         {'*', [\"Redirect-Host\"]},\n         [\"Redirect-Host-Usage\"],\n         [\"Redirect-Max-Cache-Time\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"AVP\"]}]},\n       {\"ACR\",\n        271,\n        ['REQ', 'PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {\"Destination-Realm\"},\n         {\"Accounting-Record-Type\"},\n         {\"Accounting-Record-Number\"},\n         [\"Acct-Application-Id\"],\n         [\"Vendor-Specific-Application-Id\"],\n         [\"User-Name\"],\n         [\"Destination-Host\"],\n         [\"Accounting-Sub-Session-Id\"],\n         [\"Acct-Session-Id\"],\n         [\"Acct-Multi-Session-Id\"],\n         [\"Acct-Interim-Interval\"],\n         [\"Accounting-Realtime-Required\"],\n         [\"Origin-State-Id\"],\n         [\"Event-Timestamp\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"Route-Record\"]},\n         {'*', [\"AVP\"]}]},\n       {\"ACA\",\n        271,\n        ['PXY'],\n        [],\n        [{{\"Session-Id\"}},\n         {\"Result-Code\"},\n         {\"Origin-Host\"},\n         {\"Origin-Realm\"},\n         {\"Accounting-Record-Type\"},\n         {\"Accounting-Record-Number\"},\n         [\"Acct-Application-Id\"],\n         [\"Vendor-Specific-Application-Id\"],\n         [\"User-Name\"],\n         [\"Accounting-Sub-Session-Id\"],\n         [\"Acct-Session-Id\"],\n         [\"Acct-Multi-Session-Id\"],\n         [\"Error-Message\"],\n         [\"Error-Reporting-Host\"],\n         [\"Failed-AVP\"],\n         [\"Acct-Interim-Interval\"],\n         [\"Accounting-Realtime-Required\"],\n         [\"Origin-State-Id\"],\n         [\"Event-Timestamp\"],\n         {'*', [\"Proxy-Info\"]},\n         {'*', [\"AVP\"]}]}]},\n     {name, \"diameter_gen_access_rfc7155\"},\n     {prefix, \"diameter_base_access\"},\n     {vendor, {0, \"ErlangRed\"}}].\n\n\n","x":770,"y":120,"wires":[]},{"id":"80fe8b9a3ea92e99","type":"function","z":"0d3dfc0fc42aeb44","name":"ASR","func":"#{ <<\"payload\">> := Payload } = Msg,\n\nAvps = #{\n    'Session-Id' => diameter:session_id(\"diameter_test\"),\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'Destination-Realm' => <<\"example.com\">>,\n    'Destination-Host' => <<\"diamter_test.example.com\">>,\n    'Auth-Application-Id' => 123\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('ASR', Avps)\n},\n\n%% io:format(DebugIO,\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":792.66650390625,"y":1126.3083319981893,"wires":[["5a4d9a2aa67f7750"]],"info":"Relevant section in RFC --> https://datatracker.ietf.org/doc/html/rfc7155#section-3.1\n\nAuth-Request-Type ==> https://datatracker.ietf.org/doc/html/rfc6733#section-8.7"},{"id":"5a4d9a2aa67f7750","type":"ut-assert-values","z":"0d3dfc0fc42aeb44","name":"should be ASA","ignore_failure_if_succeed":false,"rules":[{"p":"payload[1][0]","pt":"msg","t":"eql","to":"ASA","tot":"str"}],"x":1108,"y":1126.3083319981893,"wires":[[]]},{"id":"9a128597fdbb7997","type":"function","z":"0d3dfc0fc42aeb44","name":"DPR","func":"#{ <<\"payload\">> := Payload } = Msg,\n\nAvps = #{\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'Disconnect-Cause' => 1\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('DPR', Avps)\n},\n\n%% io:format(DebugIO,\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":792.66650390625,"y":1037.6541659990946,"wires":[["b55f99b97694a655"]],"info":"Relevant section in RFC --> https://datatracker.ietf.org/doc/html/rfc7155#section-3.1\n\nAuth-Request-Type ==> https://datatracker.ietf.org/doc/html/rfc6733#section-8.7"},{"id":"9319985704a52a97","type":"function","z":"0d3dfc0fc42aeb44","name":"ACR","func":"#{ <<\"payload\">> := Payload } = Msg,\n\nAvps = #{\n    'Session-Id' => diameter:session_id(\"diameter_test\"),\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'Destination-Realm' => \"example.com\",\n    'Accounting-Record-Type' => 1,  %% EVENT_RECORD\n    'Accounting-Record-Number' => 0\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('ACR', Avps)\n},\n\n%% io:format(\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":792.66650390625,"y":949,"wires":[["55f99b7778a70e7d"]]},{"id":"48d137f9fd0edc28","type":"inject","z":"0d3dfc0fc42aeb44","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":275,"y":952,"wires":[["aed90426de8e09b4"]]},{"id":"421a83f51a533709","type":"debug","z":"0d3dfc0fc42aeb44","g":"af7685676afc0fc0","name":"debug 2","active":true,"tosidebar":false,"console":false,"tostatus":true,"complete":"payload","targetType":"msg","statusVal":"","statusType":"counter","x":1856,"y":507,"wires":[]},{"id":"b55f99b97694a655","type":"ut-assert-values","z":"0d3dfc0fc42aeb44","name":"should be DPA","ignore_failure_if_succeed":false,"rules":[{"p":"payload[1][0]","pt":"msg","t":"eql","to":"DPA","tot":"str"}],"x":1108,"y":1037.6541659990946,"wires":[[]]},{"id":"55f99b7778a70e7d","type":"ut-assert-values","z":"0d3dfc0fc42aeb44","name":"should be ACA","ignore_failure_if_succeed":false,"rules":[{"p":"payload[1][0]","pt":"msg","t":"eql","to":"ACA","tot":"str"}],"x":1108,"y":949,"wires":[[]]},{"id":"3a599d8c1dc23bc8","type":"erlmodule","z":"0d3dfc0fc42aeb44","g":"4e14db65301206aa","name":"","module_name":"nodes_helper","code":"-module(nodes_helper).\n\n-import(ered_nodered_comm, [\n    send_out_debug_msg/4,\n    node_status/5,\n    node_status_clear/2,\n    post_exception_or_debug/3\n]).\n\n-import(ered_messages, [\n    set_prop_value/3\n]).\n\n-import(ered_nodes, [\n    send_msg_to_connected_nodes/2,\n    send_msg_on/2\n]).\n\n%%\n%% Node helpers, things that affect what the state of the node \n-export([\n    status/5,\n    status_with_clear/6,\n    exception/3,\n    debug/4,\n    unsupported/3,\n    format/2\n]).\n\n%%\n%% Message helpers to help updating content on the message map\n-export([\n   msg_update/3,\n   msg_send/2,\n   msg_send_on_port/3\n]).\n\nformat(F,A) ->\n    case whereis(ered_reporter) of \n        undefined -> \n            io:format(\"NO DEBUGE GINF~n\",[]),\n            io:format(F,A);\n        _ ->\n            ered_reporter ! {format, F, A}\n    end.\n    \n%%\n%% Sends the message out on a specific port.\n%% If a function happens to have multiple ports, then\n%% use this to send a message out on exactly one of those\n%% ports. \n%% Ports are 1-based, i.e. they start at 1 and increase by\n%% one.\n-spec msg_send_on_port(\n        Port :: 0..65322,\n        Msg:: map(),\n        NodeDef :: map()\n) -> any() | none().\nmsg_send_on_port(_, _, #{ <<\"wires\">> := [] } ) ->\n    ignore;\nmsg_send_on_port(1, Msg, #{ <<\"wires\">> := [SetOfWires | _RestWires] }) ->\n    send_msg_on(SetOfWires, Msg);\nmsg_send_on_port(Port, Msg, #{ <<\"wires\">> := [_SetOfWires | RestWires] }) when Port > 1 ->\n    msg_send_on_wires(Msg, RestWires, Port - 1);\nmsg_send_on_port(_, _, _)  ->\n    ignore.\n\nmsg_send_on_wires(_, [], _) ->\n    ignore;\nmsg_send_on_wires(Msg, [SetOfWires | _RestWires], 1) ->\n    send_msg_on(SetOfWires, Msg);\nmsg_send_on_wires(Msg, [_SetOfWires | RestWires], Port) ->\n    msg_send_on_wires(Msg, RestWires, Port - 1).\n\n%%\n%% Send out a message to all nodes connected this this node.\n%% A function node can then either return the message and the \n%% message will be sent again or it returns the atom `undefined` and\n%% nothing happens. Because it has already sent the messages.\n-spec msg_send(\n        Msg :: map(),\n        NodeDef :: map()\n) -> any() | none().\nmsg_send(Msg, NodeDef) ->\n    send_msg_to_connected_nodes(NodeDef, Msg).\n    \n%%\n%% Update a value in the msg, creating nested maps and lists as needed.\n%% Property is defined in `key.dot.sq[number]` form, i.e., whatever Node-RED\n%% supports, this can too.\n-spec msg_update(\n        Msg :: map(),\n        PropName :: string(),\n        Value :: any() \n) -> map().\nmsg_update( Msg, PropName, Value ) ->\n    set_prop_value(PropName, Value, Msg).\n\n%%\n%% Add a node status: \n-spec status( \n       Msg :: map(),\n       NodeDef :: map(),\n       Txt :: binary(),\n       Clr :: 'grey' | 'yellow' | 'blue' | 'red' | 'green',\n       Shp :: 'ring' | 'dot' \n) -> Msg :: map().\nstatus(#{'_ws' := WsName} = Msg, NodeDef, Txt, Clr, Shp) ->\n    node_status(WsName, NodeDef, Txt, atom_to_binary(Clr), atom_to_binary(Shp)),\n    Msg.\n\n%%\n%% show status and then clear it again after Timeout seconds\n-spec status_with_clear( \n       Msg :: map(),\n       NodeDef :: map(),\n       Txt :: binary(),\n       Clr :: 'grey' | 'yellow' | 'blue' | 'red' | 'green',\n       Shp :: 'ring' | 'dot',\n       Timeout :: integer()\n) -> Msg :: map().\nstatus_with_clear(#{'_ws' := WsName} = Msg, NodeDef, Txt, Clr, Shp, Timeout) ->\n    node_status(WsName, NodeDef, Txt, atom_to_binary(Clr), atom_to_binary(Shp)),\n    timer:apply_after(Timeout * 1000, fun() -> node_status_clear(WsName, NodeDef) end),\n    Msg.\n\n%%\n%% Raise an exception that can be caught by a \n%% catch node.\n-spec exception(\n        Msg :: map(),\n        NodeDef :: map(),\n        ErrorMsg :: binary()\n) -> Msg :: map().\nexception(Msg, NodeDef, ErrorMsg) ->\n    post_exception_or_debug(NodeDef, Msg, ErrorMsg),\n    Msg.\n\n%%\n%% Post a debug message to the debug panel\n-spec debug(\n        Msg :: map(),\n        NodeDef :: map(),\n        ErrorMsg :: binary(),\n        ErrorType :: 'error' | 'warning' | 'notice' | 'normal'\n) -> Msg :: map().\ndebug(Msg, NodeDef, ErrorMsg, ErrorType) ->\n    send_out_debug_msg(NodeDef, Msg, ErrorMsg, ErrorType),\n    Msg.\n\n%%\n%% Unsupported message, advices the user that something is not\n%% supported by the implementation. This will generate a mesage\n%% in the debug panel to raise the issue with the user.\n-spec unsupported(\n        Msg :: map(),\n        NodeDef :: map(),\n        ErrorMsg :: binary()\n) -> Msg :: map().\nunsupported(Msg, NodeDef, ErrorMsg) ->\n    ered_nodered_comm:unsupported(NodeDef, Msg, ErrorMsg),\n    Msg.","x":660,"y":354,"wires":[]},{"id":"07bd553f5c0bfc2a","type":"erlgenserver","z":"0d3dfc0fc42aeb44","g":"4e14db65301206aa","name":"","use_module_name_addressing":true,"scope":["b464503ae6467e9d"],"x":797,"y":404.0833435058594,"wires":[[]]},{"id":"b464503ae6467e9d","type":"erlmodule","z":"0d3dfc0fc42aeb44","g":"4e14db65301206aa","name":"","module_name":"ered_reporter","code":"-module(ered_reporter).\n\n%%\n%% APIs: https://www.erlang.org/doc/apps/stdlib/gen_server.html\n%%\n\n-behaviour(gen_server).\n\n-export([\n    start_link/0,\n    init/1,\n    handle_call/3,\n    handle_cast/2,\n    handle_info/2,\n    code_change/3,\n    terminate/2,\n    stop/0\n]).\n\n%%\n%% Externer exports\n-export([\n   debug/2,\n\n   websocket/1\n]).\n\n%%\n%% External APIs\ndebug(Txt, Lvl) ->\n   gen_server:info(?MODULE, {debug, Txt, Lvl}),\n   ok.\n\nwebsocket([NodeDef, WsName]) ->\n   gen_server:call(?MODULE, {websocket, NodeDef, WsName}).\n\n\n%%\n%%\nstart_link() ->\n    gen_server:start_link({local, ?MODULE}, ?MODULE, #{}, []).\n\ninit(Args) ->\n    {ok, Args}.\n\nstop() ->\n    gen_server:cast(?MODULE, stop).\n\nterminate(normal, _State) ->\n    ok;\nterminate(_Event, _State) ->\n    ok.\n\ncode_change(_OldVersion, State, _Extra) ->\n    {ok, State}.\n\n%%\n%%\nhandle_call({websocket, NodeDef, WsName}, _From, State) ->\n    nodes_helper:status_with_clear(\n        #{'_ws' => WsName}, NodeDef, <<\"ered debugger installed\">>, green, ring, 3),\n    {reply, ok, State#{ wsname => WsName, nodedef => NodeDef}};\n\nhandle_call(_Msg, _From, State) ->\n    {reply, ok, State}.\n\n%%\n%%\nhandle_cast(stop, State) ->\n    {stop, normal, State};\nhandle_cast(_Msg, State) ->\n    {noreply, State}.\n\n%%\n%%\n\nhandle_info({format, F,A}, #{ nodedef := NodeDef, wsname := WsName} = State) ->\n    Payload = list_to_binary(io_lib:format(F,A)),\n    Msg = #{ \n      '_ws' => WsName,\n      <<\"payload\">> => Payload\n    },\n    nodes_helper:debug(Msg, NodeDef, Payload, normal),\n    {noreply, State};\n\nhandle_info(_, State) ->\n    {noreply, State}.\n\n","x":658,"y":306,"wires":[]},{"id":"814268845dacc139","type":"function","z":"0d3dfc0fc42aeb44","g":"4e14db65301206aa","name":"flow status node","func":"#{ \n  <<\"payload\">> := Payload, \n  '_ws' := WsName \n} = Msg,\n\nMsg#{ \n    <<\"module\">> => <<\"ered_reporter\">>,\n    <<\"call\">> => <<\"websocket\">>,\n    <<\"payload\">> => [NodeDef, WsName]\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":526,"y":404.0833435058594,"wires":[["07bd553f5c0bfc2a"]]},{"id":"aed90426de8e09b4","type":"delay","z":"0d3dfc0fc42aeb44","name":"","pauseType":"random","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":505,"y":1160,"wires":[["9a128597fdbb7997","9319985704a52a97","80fe8b9a3ea92e99","fc3bf8a9aee65fd1","11bae55e1ac235cf","d2a1b01464c8bc6e"]]},{"id":"3b71d64290446fc9","type":"erlmodule","z":"0d3dfc0fc42aeb44","g":"cb21325f302dc80e","name":"","module_name":"diameter_authorization_server","code":"-module(diameter_authorization_server).\n\n%%\n%%  APIs: https://www.erlang.org/doc/apps/stdlib/gen_statem.html\n%%\n\n-behaviour(gen_statem).\n\n-export([\n    start/0,\n    init/1,\n    callback_mode/0,\n    handle_event/4,\n    code_change/4,\n    terminate/3,\n    stop/0\n]).\n\n%% WARNING: state_functions are not supported by statemachine node.\n%% callback_mode() -> state_functions.\ncallback_mode() -> handle_event_function.\n\n-define(KEEP_STATE(ReplyWith),\n    {keep_state, Data, [{reply, From, ReplyWith}]}\n).\n\nstart() ->\n    gen_statem:start({local, ?MODULE}, ?MODULE, [], []).\n\nstop() ->\n    gen_statem:stop(?MODULE).\nterminate(_Reason, _State, _Data) ->\n    void.\ncode_change(_Vsn, State, Data, _Extra) ->\n    {ok, State, Data}.\n\n%% Initial state and data\ninit([]) ->\n    State = start, \n    Data = 0,\n    {ok,State,Data}.\n\n%%% handle event function\n\n\n\n%%\n%% Definition from 'Start' - #41649c893949bd22\n%%\n\nhandle_event(\n    {call, From},\n    <<\"AAR\">>,\n    start,\n    Data\n) ->\n    {next_state, idle, Data, [{ reply, From, ok }]};\n\n%%\n%% Definition from 'Idle' - #4b9d114d09beb418\n%%\n\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, <<\"SUCCESS\">>},\n    idle,\n    Data\n) ->\n    {next_state, open, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, <<\"MULTI_ROUND_AUTH\">>},\n    idle,\n    Data\n) ->\n    {keep_state, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    <<\"STR\">>,\n    idle,\n    Data\n) ->\n    {next_state, stop, Data, [{ reply, From, ok }]};\n\n%%\n%% Definition from 'Open' - #81bc6eecdb17dee7\n%%\n\nhandle_event(\n    {call, From},\n    <<\"ASR\">>,\n    open,\n    Data\n) ->\n    {next_state, disconnected, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    <<\"AAR\">>,\n    open,\n    Data\n) ->\n    {keep_state, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, <<\"SUCCESS\">>},\n    open,\n    Data\n) ->\n    {keep_state, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, <<\"MULTI_ROUND_AUTH\">>},\n    open,\n    Data\n) ->\n    {keep_state, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    <<\"RAR\">>,\n    open,\n    Data\n) ->\n    {next_state, pending, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, <<\"AUTHORIZATION_REJECTED\">>},\n    open,\n    Data\n) ->\n    {next_state, idle, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    <<\"STR\">>,\n    open,\n    Data\n) ->\n    {next_state, stop, Data, [{ reply, From, ok }]};\n\n%%\n%% Definition from 'Disconnected' - #9482adf55132e602\n%%\n\nhandle_event(\n    {call, From},\n    <<\"ASA\">>,\n    disconnected,\n    Data\n) ->\n    {next_state, idle, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    <<\"STR\">>,\n    disconnected,\n    Data\n) ->\n    {next_state, stop, Data, [{ reply, From, ok }]};\n\n%%\n%% Definition from 'Pending' - #641286613f05f45e\n%%\n\nhandle_event(\n    {call, From},\n    {<<\"RAA\">>, <<\"SUCCESS\">>},\n    pending,\n    Data\n) ->\n    {next_state, open, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    {<<\"RAA\">>, Success},\n    pending,\n    Data\n) when Success =/= <<\"SUCCESS\">> ->\n    {next_state, idle, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    <<\"STR\">>,\n    pending,\n    Data\n) ->\n    {next_state, stop, Data, [{ reply, From, ok }]};\n\n%%\n%% Definition from 'Stop' - #43f28daced65a485\n%%\n\n%%\n%% Fall through.\nhandle_event({call, From} = _EventType, _Stiff, _State, Data) ->\n    ?KEEP_STATE(<<\"ignored\">>);\n\nhandle_event(_EventType, _Stiff, _State, Data) ->\n    {keep_state, Data}.\n","x":1075,"y":142,"wires":[]},{"id":"c8f3d92596d2674e","type":"erlstatemachine","z":"0d3dfc0fc42aeb44","name":"","scope":["3b71d64290446fc9"],"emit_on_state_change":false,"x":1458,"y":138,"wires":[[]]},{"id":"0bb49410ba9889c6","type":"erlstatemachine","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","scope":["c3b4606107d8adbc"],"emit_on_state_change":false,"x":1670.0000610351562,"y":2086.3333854675293,"wires":[["38b23e24c33fc482"]]},{"id":"c3b4606107d8adbc","type":"erlmodule","z":"0d3dfc0fc42aeb44","g":"cb21325f302dc80e","name":"","module_name":"diameter_authorization_client","code":"-module(diameter_authorization_client).\n\n%%\n%%  APIs: https://www.erlang.org/doc/apps/stdlib/gen_statem.html\n%%\n\n-behaviour(gen_statem).\n\n-export([\n    start/0,\n    init/1,\n    callback_mode/0,\n    handle_event/4,\n    code_change/4,\n    terminate/3,\n    stop/0\n]).\n\n%% WARNING: state_functions are not supported by statemachine node.\n%% callback_mode() -> state_functions.\ncallback_mode() -> handle_event_function.\n\n-define(KEEP_STATE(ReplyWith),\n    {keep_state, Data, [{reply, From, ReplyWith}]}\n).\n\nstart() ->\n    gen_statem:start({local, ?MODULE}, ?MODULE, [], []).\n\nstop() ->\n    gen_statem:stop(?MODULE).\nterminate(_Reason, _State, _Data) ->\n    void.\ncode_change(_Vsn, State, Data, _Extra) ->\n    {ok, State, Data}.\n\n%% Initial state and data\ninit([]) ->\n    State = idle, \n    Data = 0,\n    {ok,State,Data}.\n\n%%% handle event function\n\n\n%%\n%% Definition from 'start' - #e391be61858495a9\n%%\n\n\n%\n% Ignoring un-named link to 'idle' - #55a2a011ee5c2445\n%\n\n\n%%\n%% Definition from 'Idle' - #55a2a011ee5c2445\n%%\n\nhandle_event(\n    {call, From},\n    <<\"AAR\">>,\n    idle,\n    Data\n) ->\n    {next_state, pending, Data, [{ reply, From, ok }]};\n\n%%\n%% Definition from 'pending' - #7497b5cde23db3d6\n%%\n\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, 2001},\n    pending,\n    Data\n) ->\n    {next_state, open, Data, [{ reply, From, ok }]};\n    \nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, 5003},\n    pending,\n    Data\n) ->\n    {next_state, idle, Data, [{ reply, From, ok }]};\n\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, 4001},\n    pending,\n    Data\n) ->\n    {next_state, idle, Data, [{ reply, From, ok }]};\n\n%%\n%% Definition from 'open' - #f85143342acaa6a2\n%%\n\nhandle_event(\n    {call, From},\n    <<\"RAR\">>,\n    open,\n    Data\n) ->\n    {keep_state, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, <<\"MULTI_ROUND_AUTH\">>},\n    open,\n    Data\n) ->\n    {keep_state, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, <<\"SUCCESS\">>},\n    open,\n    Data\n) ->\n    {keep_state, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    {<<\"AAA\">>, <<\"AUTHORISATION_REJECTED\">>},\n    open,\n    Data\n) ->\n    {next_state, idle, Data, [{ reply, From, ok }]};\nhandle_event(\n    {call, From},\n    <<\"ASR\">>,\n    open,\n    Data\n) ->\n    {next_state, disconnected, Data, [{ reply, From, ok }]};\n\n%%\n%% Definition from 'disconnected' - #4324a228efde6037\n%%\n\nhandle_event(\n    {call, From},\n    <<\"STA\">>,\n    disconnected,\n    Data\n) ->\n    {next_state, done, Data, [{ reply, From, ok }]};\n\n%%\n%% Definition from 'done' - #81adf2e8a4251297\n%%\n                        \n                        \n%% Fall through\nhandle_event(\n  {call, From},\n  _Action,\n  _CurrState,\n  Data\n) ->\n    ?KEEP_STATE(ignored);\n\n\n%%% Absolute fall through\nhandle_event(EventType, Stiff, State, Data) ->\n    io:format(\"TEST : ~p ~p ~p ~p~n\",[EventType, Stiff, State, Data]),\n    {keep_state, Data}.\n","x":1075.2728271484375,"y":99.54541015625,"wires":[]},{"id":"2a85db810ae60aa4","type":"function","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"AAR - unknown user - 5003","func":"#{ <<\"payload\">> := Payload } = Msg,\n\n\nAvps = #{\n    'Session-Id' => diameter:session_id(\"diameter_test\"),\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'Destination-Realm' => <<\"example.com\">>,\n    'Auth-Application-Id' => 123,\n    'Auth-Request-Type' => 1,\n    'User-Name' => <<\"homer\">>,\n    'User-Password' => <<\"what password\">>\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('AAR', Avps)\n},\n\n%% io:format(DebugIO,\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":681.7777811686198,"y":1559.0000400543213,"wires":[["a7a4fe3cf15bef8d"]],"info":"Relevant section in RFC --> https://datatracker.ietf.org/doc/html/rfc7155#section-3.1\n\nAuth-Request-Type ==> https://datatracker.ietf.org/doc/html/rfc6733#section-8.7"},{"id":"35cb58c05aec302c","type":"ut-assert-values","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"should be AAA & 5003","ignore_failure_if_succeed":false,"rules":[{"p":"payload[0]","pt":"msg","t":"eql","to":"AAA","tot":"str"},{"p":"payload[1]['Result-Code']","pt":"msg","t":"eql","to":"5003","tot":"num"}],"x":1264.0001118977866,"y":1559.0000400543213,"wires":[[]]},{"id":"1d0c08726fb747be","type":"inject","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":440.6666158040365,"y":1559.0000400543213,"wires":[["2a85db810ae60aa4"]]},{"id":"0cd22a4116fb1a72","type":"function","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"AAR - no user name given - 4001","func":"#{ <<\"payload\">> := Payload } = Msg,\n\n\nAvps = #{\n    'Session-Id' => diameter:session_id(\"diameter_test\"),\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'Destination-Realm' => <<\"example.com\">>,\n    'Auth-Application-Id' => 123,\n    'Auth-Request-Type' => 1\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('AAR', Avps)\n},\n\n%% io:format(DebugIO,\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":659.6666717529297,"y":1657.6667518615723,"wires":[["cca79a3132c79455"]],"info":"Relevant section in RFC --> https://datatracker.ietf.org/doc/html/rfc7155#section-3.1\n\nAuth-Request-Type ==> https://datatracker.ietf.org/doc/html/rfc6733#section-8.7"},{"id":"a7a4fe3cf15bef8d","type":"function","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"convert improper list to list","func":"#{ <<\"payload\">> := {ok, [V|Payload]} } = Msg,\nMsg#{<<\"payload\">> => [V, Payload] }\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":982.8889465332031,"y":1559.0000400543213,"wires":[["35cb58c05aec302c"]]},{"id":"3905ba1d302a595c","type":"ut-assert-values","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"should be AAA & 4001","ignore_failure_if_succeed":false,"rules":[{"p":"payload[0]","pt":"msg","t":"eql","to":"AAA","tot":"str"},{"p":"payload[1]['Result-Code']","pt":"msg","t":"eql","to":"4001","tot":"num"}],"x":1413,"y":1657.6667518615723,"wires":[[]]},{"id":"cca79a3132c79455","type":"function","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"convert improper list to list","func":"#{ <<\"payload\">> := {ok, [V|Payload]} } = Msg,\nMsg#{<<\"payload\">> => [V, Payload] }\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1056.3333358764648,"y":1657.6667518615723,"wires":[["3905ba1d302a595c"]]},{"id":"1b1b3f53d52e898d","type":"inject","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":323.00000762939453,"y":1657.6667518615723,"wires":[["0cd22a4116fb1a72"]]},{"id":"ce96a772b44a251d","type":"function","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"AAR - user allowed - 2001","func":"#{ <<\"payload\">> := Payload } = Msg,\n\n\nAvps = #{\n    'Session-Id' => diameter:session_id(\"diameter_test\"),\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'Destination-Realm' => <<\"example.com\">>,\n    'Auth-Application-Id' => 123,\n    'Auth-Request-Type' => 1,\n    'User-Name' => <<\"user-allowed\">>\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('AAR', Avps)\n},\n\n%% io:format(DebugIO,\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":685.4444173177084,"y":1751.0000286102295,"wires":[["a908da78bebfc2f1"]],"info":"Relevant section in RFC --> https://datatracker.ietf.org/doc/html/rfc7155#section-3.1\n\nAuth-Request-Type ==> https://datatracker.ietf.org/doc/html/rfc6733#section-8.7"},{"id":"2d3ac2c652d6ea17","type":"ut-assert-values","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"should be AAA & 2001","ignore_failure_if_succeed":false,"rules":[{"p":"payload[0]","pt":"msg","t":"eql","to":"AAA","tot":"str"},{"p":"payload[1]['Result-Code']","pt":"msg","t":"eql","to":"2001","tot":"num"}],"x":1407.6666361490886,"y":1751.0000286102295,"wires":[[]]},{"id":"a908da78bebfc2f1","type":"function","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"convert improper list to list","func":"#{ <<\"payload\">> := {ok, [V|Payload]} } = Msg,\nMsg#{<<\"payload\">> => [V, Payload] }\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1056.5555267333984,"y":1751.0000286102295,"wires":[["2d3ac2c652d6ea17"]]},{"id":"78d214bab5f9a807","type":"inject","z":"0d3dfc0fc42aeb44","g":"58a59d3eaad09a68","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":374.3333079020183,"y":1751.0000286102295,"wires":[["ce96a772b44a251d"]]},{"id":"0441f6fc2abbaf3f","type":"change","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"AAR request","rules":[{"t":"delete","p":"payload","pt":"msg"},{"t":"set","p":"action","pt":"msg","to":"AAR","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1023.0000610351562,"y":2086.3333854675293,"wires":[["0bb49410ba9889c6"]]},{"id":"8f3c326c98901e02","type":"change","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"AAR response","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload[1]['Result-Code']","tot":"msg"},{"t":"set","p":"action","pt":"msg","to":"AAA","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1358.0000610351562,"y":2179.3333854675293,"wires":[["0bb49410ba9889c6"]]},{"id":"58aacf3baa69ffdc","type":"function","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"send login request to server - AAR packet","func":"#{ <<\"req\">> := #{ <<\"formdata\">> := #{ <<\"uname\">> := Username} }} = Msg,\n\n\nAvps = #{\n    'Session-Id' => diameter:session_id(\"diameter_test\"),\n    'Origin-Host' => \"diameter_part5_client.example.com\",\n    'Origin-Realm' => \"example.com\",\n    'Destination-Realm' => <<\"example.com\">>,\n    'Auth-Application-Id' => 123,\n    'Auth-Request-Type' => 1,\n    'User-Name' => Username\n},\n\nD = Msg#{ \n    <<\"payload\">> => diameter_part5_client:send_message('AAR', Avps)\n},\n\n%% io:format(DebugIO,\"~p\",[D]),\n\nD\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720.6667277018232,"y":2179.3333854675293,"wires":[["6288bdfcbd49d0b4"]],"info":"Relevant section in RFC --> https://datatracker.ietf.org/doc/html/rfc7155#section-3.1\n\nAuth-Request-Type ==> https://datatracker.ietf.org/doc/html/rfc6733#section-8.7"},{"id":"9ffe68143a3e33ac","type":"http in","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","url":"/login","method":"get","upload":false,"swaggerDoc":"","x":422.00006103515625,"y":2086.3333854675293,"wires":[["5a5433280fc16aa8","bc341ec335c1a794"]]},{"id":"fe23294605cb4e99","type":"http response","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","statusCode":"","headers":{"content-type":"text/html"},"x":855.0000610351562,"y":1982.3333854675293,"wires":[]},{"id":"5a5433280fc16aa8","type":"template","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":" <form action=\"login\" method=\"post\">\n    <p>\n    <label for=\"uname\"><b>Username</b></label>\n    <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required>\n\n    <p>\n    <label for=\"psw\"><b>Password</b></label>\n    <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n\n    <p>\n    <button type=\"submit\">Login</button>\n\n</form> ","output":"str","x":632.0000610351562,"y":2086.3333854675293,"wires":[["fe23294605cb4e99","0441f6fc2abbaf3f"]]},{"id":"dc56950ca31c52c7","type":"http in","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","url":"/login","method":"post","upload":false,"swaggerDoc":"","x":412.00006103515625,"y":2179.3333854675293,"wires":[["58aacf3baa69ffdc"]]},{"id":"c3d6b06699f4652c","type":"http response","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","statusCode":"","headers":{"content-type":"text/html"},"x":2418.0000610351562,"y":2227.3333854675293,"wires":[]},{"id":"38b23e24c33fc482","type":"change","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"_statem.state_curr","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1932.0000610351562,"y":2157.3333854675293,"wires":[["1e8ddca047d8d6e1"]]},{"id":"c689625f6fe5ddb5","type":"link in","z":"0d3dfc0fc42aeb44","name":"start diameter","links":["bc341ec335c1a794"],"x":196,"y":612.8334293365479,"wires":[["17e8f0228e01791d"]]},{"id":"bc341ec335c1a794","type":"link out","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"link out 1","mode":"link","links":["c689625f6fe5ddb5"],"x":602.0000610351562,"y":1982.3333854675293,"wires":[]},{"id":"6288bdfcbd49d0b4","type":"function","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"convert improper list to list","func":"#{ <<\"payload\">> := {ok, [V|Payload]} } = Msg,\nMsg#{<<\"payload\">> => [V, Payload] }\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1079.3333943684897,"y":2179.3333854675293,"wires":[["8f3c326c98901e02"]]},{"id":"1e8ddca047d8d6e1","type":"switch","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"open","vt":"str"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":2086.0000610351562,"y":2233.3333854675293,"wires":[["4dfe0b806084698a"],["42736168670c3d7e"]]},{"id":"42736168670c3d7e","type":"template","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"login faild","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<b>Login failed</b>\n\n<p/>\n\n<a href=\"/login\">Try Again</a>\n\n","output":"str","x":2254.0000610351562,"y":2255.3333854675293,"wires":[["c3d6b06699f4652c"]]},{"id":"4dfe0b806084698a","type":"template","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"logged in","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"Logged in\n<p/>\n\n<a href=\"/logout\">Logout</a>\n","output":"str","x":2253.0000610351562,"y":2201.3333854675293,"wires":[["c3d6b06699f4652c"]]},{"id":"d361e282e1946922","type":"http in","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","url":"/logout","method":"get","upload":false,"swaggerDoc":"","x":413.00006103515625,"y":2272.3333854675293,"wires":[["9da95ff8ed48fb7c","c8cf8f79f3cc3a1f"]]},{"id":"9da95ff8ed48fb7c","type":"change","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"AAR request","rules":[{"t":"delete","p":"payload","pt":"msg"},{"t":"set","p":"action","pt":"msg","to":"ASR","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1376.0000610351562,"y":2275.3333854675293,"wires":[["0bb49410ba9889c6"]]},{"id":"c8cf8f79f3cc3a1f","type":"template","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"login faild","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<b>Logout Out</b>\n\n<p/>\n\n<a href=\"/login\">Login Again</a>\n\n","output":"str","x":618.0000610351562,"y":2339.3333854675293,"wires":[["75ec0867881c84b2"]]},{"id":"75ec0867881c84b2","type":"http response","z":"0d3dfc0fc42aeb44","g":"a54e57d36bb88e57","name":"","statusCode":"","headers":{"content-type":"text/html"},"x":849.0000610351562,"y":2339.3333854675293,"wires":[]}]